[
  {
    "utterance number": 1,
    "timestamp": "2023-03-21",
    "speaker": "KG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " So iterator helpers as you may recall is stage 3 as of a couple of meetings ago",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " That means that implementations are starting to go through it, and in some cases have noticed things there that are a little bit weird",
        "polarity": -0.22916666666666666,
        "subjectivity": 0.5333333333333333
      },
      {
        "sentence number": 3,
        "text": " We will be talking about three different things over the course of this meeting and I've split them out into separate items, mostly because I didn't realize when I had the first one that I was going to have so many different things",
        "polarity": 0.25,
        "subjectivity": 0.5066666666666666
      },
      {
        "sentence number": 4,
        "text": " Anyway, this first one is basically an observation that the way the spec is currently written, it consumes the receiver, in the sense of looking up the `",
        "polarity": 0.125,
        "subjectivity": 0.3666666666666667
      },
      {
        "sentence number": 5,
        "text": "next` method on the receiver, which it will call later, before it validates arguments",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": " And this is odd for two reasons",
        "polarity": -0.16666666666666666,
        "subjectivity": 0.25
      },
      {
        "sentence number": 7,
        "text": " One is just that it's more different than the code that you would sort of naturally think of: the thing that you would naturally think of is that you do all of the argument validation and then you do the iteration",
        "polarity": 0.175,
        "subjectivity": 0.475
      },
      {
        "sentence number": 8,
        "text": " And second, it is just generally inconsistent with the pattern that we have more or less followed of doing all argument validation before we start actually consuming anything",
        "polarity": 0.07666666666666669,
        "subjectivity": 0.23333333333333334
      },
      {
        "sentence number": 9,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.08234126984126985,
    "subjectivity": 0.3896825396825397,
    "keywords": [
      [
        "recall is stage",
        0.021181642175939413
      ],
      [
        "iterator helpers",
        0.02390029832913012
      ],
      [
        "meetings ago",
        0.04052205289658357
      ],
      [
        "things",
        0.09983230250067669
      ],
      [
        "couple of meetings",
        0.10050574479051384
      ],
      [
        "argument validation",
        0.10713906804059577
      ],
      [
        "noticed things",
        0.13037752175477255
      ],
      [
        "stage",
        0.13576374273195396
      ],
      [
        "ago",
        0.13576374273195396
      ],
      [
        "iterator",
        0.15278222350308504
      ]
    ]
  },
  {
    "utterance number": 2,
    "timestamp": "2023-03-21",
    "speaker": "KG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " So I have a pull request",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " All it does is that it validates arguments, for example validates that the argument is callable in the case of `",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": "map`, before it looks up the `",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": "next` method on the receiver",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " I think this is a small and generally positive change, but that is a normative change to a stage 3 proposal, so need committee consensus for this",
        "polarity": -0.011363636363636367,
        "subjectivity": 0.4727272727272727
      },
      {
        "sentence number": 6,
        "text": " If there's nothing on the queue\u2026 which there is not, I would like to formally ask for consensus",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 7,
        "text": " And I guess it's part of our new process that we're supposed to have at least one explicit second",
        "polarity": -0.05454545454545454,
        "subjectivity": 0.28484848484848485
      },
      {
        "sentence number": 8,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": -0.03727272727272728,
    "subjectivity": 0.36,
    "keywords": [
      [
        "pull request",
        0.02485180190322331
      ],
      [
        "request",
        0.13673100042813816
      ],
      [
        "pull",
        0.17734944048556298
      ],
      [
        "validates arguments",
        0.2045027285267855
      ],
      [
        "validates",
        0.2060229795267204
      ],
      [
        "consensus",
        0.2513215967801385
      ],
      [
        "change",
        0.2526025629399027
      ],
      [
        "map",
        0.2764146633416674
      ],
      [
        "generally positive change",
        0.28909731092932583
      ],
      [
        "method",
        0.3548762014778361
      ]
    ]
  },
  {
    "utterance number": 3,
    "timestamp": "2023-03-21",
    "speaker": "RPR",
    "sentences": [
      {
        "sentence number": 1,
        "text": " You have messages of explicit support from CDA, LCA, and JHD",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "support from CDA",
        0.026233073037508336
      ],
      [
        "LCA",
        0.030396371632413578
      ],
      [
        "CDA",
        0.08596317751626563
      ],
      [
        "JHD",
        0.08596317751626563
      ],
      [
        "messages of explicit",
        0.09700399286574239
      ],
      [
        "explicit support",
        0.09700399286574239
      ],
      [
        "messages",
        0.29736558256021506
      ],
      [
        "explicit",
        0.29736558256021506
      ],
      [
        "support",
        0.29736558256021506
      ]
    ]
  },
  {
    "utterance number": 4,
    "timestamp": "2023-03-21",
    "speaker": "KG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Thank you very much",
        "polarity": 0.26,
        "subjectivity": 0.26
      },
      {
        "sentence number": 2,
        "text": " Also, sidebar, I do hope that we can spend some time in the future more explicitly documenting these sorts of conventions, because there are a number of them that are not written down anywhere",
        "polarity": 0.11481481481481481,
        "subjectivity": 0.30462962962962964
      },
      {
        "sentence number": 3,
        "text": " I know we've mentioned that before",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " This is just another example of, it's important that we actually get around to that at some point",
        "polarity": 0.2,
        "subjectivity": 0.55
      },
      {
        "sentence number": 5,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.16740740740740742,
    "subjectivity": 0.37898148148148153,
    "keywords": [
      [
        "sorts of conventions",
        0.10205108435002959
      ],
      [
        "spend some time",
        0.12957921353471913
      ],
      [
        "future more explicitly",
        0.12957921353471913
      ],
      [
        "explicitly documenting",
        0.12957921353471913
      ],
      [
        "documenting these sorts",
        0.12957921353471913
      ],
      [
        "sidebar",
        0.20717186494652254
      ],
      [
        "conventions",
        0.2734050761388029
      ],
      [
        "hope",
        0.33869541996442376
      ],
      [
        "spend",
        0.33869541996442376
      ],
      [
        "time",
        0.33869541996442376
      ]
    ]
  },
  {
    "utterance number": 5,
    "timestamp": "2023-03-21",
    "speaker": "KG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Alright, so moving on to the next item which is iterator helpers: closing iterators which have not been iterated",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " This is another one of those things that was noticed during implementations",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " So the way iterator helpers are currently specified, is that they are basically generators\u2013sort of spec internal generators",
        "polarity": 0.0,
        "subjectivity": 0.2
      },
      {
        "sentence number": 4,
        "text": " This makes it I think clearer to readers what they're supposed to do, because this is closer to what a natural implementation in userland would be",
        "polarity": 0.1,
        "subjectivity": 0.4
      },
      {
        "sentence number": 5,
        "text": " It's also just much easier to write these down as generators than as iterators that are tracking all of the state explicitly instead of just closing over stuff",
        "polarity": 0.022222222222222213,
        "subjectivity": 0.24444444444444446
      },
      {
        "sentence number": 6,
        "text": " Unfortunately, one of the ways that iterator helpers are supposed to be different from generators is that if you construct a helper, so for example you call `",
        "polarity": -0.25,
        "subjectivity": 0.8
      },
      {
        "sentence number": 7,
        "text": "map` to get a helper, if you don't then iterate over at all, if you just immediately close the helper by calling the return method on the helper, it should close the underlying iterator",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 8,
        "text": " As currently specified, that does not close the underlying iterator",
        "polarity": 0.0,
        "subjectivity": 0.4
      },
      {
        "sentence number": 9,
        "text": " This is just a consequence of being specified as generators because for generators, if you close the generator there's nothing to do",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 10,
        "text": " Like it just moves the generator into its closed state",
        "polarity": -0.1,
        "subjectivity": 0.1
      },
      {
        "sentence number": 11,
        "text": " You couldn't possibly be within a `try`/`finally`, or soon a block with a `using` statement, where there would be resources that would need to get cleaned up on close",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 12,
        "text": " So if you close the generator, no code runs",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 13,
        "text": " But if you close an iterator helper, that is supposed to close the underlying iterator as well",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 14,
        "text": " We didn't notice this because we were really thinking of them as generators, but this is a place where they are supposed to be different",
        "polarity": 0.1,
        "subjectivity": 0.4
      },
      {
        "sentence number": 15,
        "text": " So I have a PR that fixes it, that all it does is to add some special logic to `return`",
        "polarity": 0.35714285714285715,
        "subjectivity": 0.5714285714285714
      },
      {
        "sentence number": 16,
        "text": " All it does is if you close an iterator helper that is not yet started, it will explicitly close the underlying thing",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 17,
        "text": " There's a bit more bookkeeping in that you need access to the underlying thing at this point, which previously was only closed over, but the only important normative component is if you try to close an iterator helper by calling `return` on it before you are actually started anything then it will explicitly close the underlying thing",
        "polarity": 0.09047619047619049,
        "subjectivity": 0.5523809523809524
      },
      {
        "sentence number": 18,
        "text": " Again, I think this is something that we should always have done and just failed to do because of how the spec was written",
        "polarity": -0.5,
        "subjectivity": 0.3
      },
      {
        "sentence number": 19,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.010678210678210686,
    "subjectivity": 0.45122655122655125,
    "keywords": [
      [
        "close",
        0.032798424589227104
      ],
      [
        "iterator",
        0.04551489487975317
      ],
      [
        "helper",
        0.06056657043104123
      ],
      [
        "close the underlying",
        0.06458069288314652
      ],
      [
        "iterator helpers",
        0.0700572004614209
      ],
      [
        "underlying iterator",
        0.07312699929061654
      ],
      [
        "underlying",
        0.07320020221169575
      ],
      [
        "generators",
        0.0744726808464024
      ],
      [
        "underlying thing",
        0.12647846397886683
      ],
      [
        "supposed",
        0.13223209627013538
      ]
    ]
  },
  {
    "utterance number": 6,
    "timestamp": "2023-03-21",
    "speaker": "MM",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I like this, but since it's different than the consequence of just writing it straightforwardly as a generator, I'm wondering what the implications are for emulating it accurately in user space right now",
        "polarity": 0.2651785714285715,
        "subjectivity": 0.5360119047619047
      }
    ],
    "polarity": 0.2651785714285715,
    "subjectivity": 0.5360119047619047,
    "keywords": [
      [
        "writing it straightforwardly",
        0.013527995261974615
      ],
      [
        "emulating it accurately",
        0.013527995261974615
      ],
      [
        "accurately in user",
        0.013527995261974615
      ],
      [
        "user space",
        0.013527995261974615
      ],
      [
        "generator",
        0.0771485953923296
      ],
      [
        "consequence",
        0.1155310835876123
      ],
      [
        "writing",
        0.1155310835876123
      ],
      [
        "straightforwardly",
        0.1155310835876123
      ],
      [
        "wondering",
        0.1155310835876123
      ],
      [
        "implications",
        0.1155310835876123
      ]
    ]
  },
  {
    "utterance number": 7,
    "timestamp": "2023-03-21",
    "speaker": "KG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I don't think it is possible to emulate these accurately as generators either way",
        "polarity": 0.20000000000000004,
        "subjectivity": 0.8166666666666667
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.20000000000000004,
    "subjectivity": 0.8166666666666667,
    "keywords": [
      [
        "emulate these accurately",
        0.09700399286574239
      ],
      [
        "accurately as generators",
        0.09700399286574239
      ],
      [
        "emulate",
        0.29736558256021506
      ],
      [
        "accurately",
        0.29736558256021506
      ],
      [
        "generators",
        0.29736558256021506
      ]
    ]
  },
  {
    "utterance number": 8,
    "timestamp": "2023-03-21",
    "speaker": "MM",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Do you have a faithful userspace emulation of this",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " JHD",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "faithful userspace emulation",
        0.06672462416318604
      ],
      [
        "JHD",
        0.11555589791117535
      ],
      [
        "faithful userspace",
        0.1495930091794576
      ],
      [
        "userspace emulation",
        0.1495930091794576
      ],
      [
        "faithful",
        0.36073110501666333
      ],
      [
        "userspace",
        0.36073110501666333
      ],
      [
        "emulation",
        0.36073110501666333
      ]
    ]
  },
  {
    "utterance number": 9,
    "timestamp": "2023-03-21",
    "speaker": "JHD",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I'm typing it as we speak",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " so I can probably let you know in an hour or less",
        "polarity": -0.16666666666666666,
        "subjectivity": 0.06666666666666667
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": -0.16666666666666666,
    "subjectivity": 0.06666666666666667,
    "keywords": [
      [
        "speak",
        0.12363091320521931
      ],
      [
        "typing",
        0.2005079697193566
      ],
      [
        "hour",
        0.46553351027698087
      ]
    ]
  },
  {
    "utterance number": 10,
    "timestamp": "2023-03-21",
    "speaker": "MM",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Yeah",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " Okay, I would I would like to wait on that before since especially since it's an hour away and we're about to have Inch",
        "polarity": 0.25,
        "subjectivity": 0.75
      },
      {
        "sentence number": 3,
        "text": " I would like to wait for that emulation before simply",
        "polarity": 0.0,
        "subjectivity": 0.35714285714285715
      },
      {
        "sentence number": 4,
        "text": " going going ahead with this",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.16666666666666666,
    "subjectivity": 0.6190476190476191,
    "keywords": [
      [
        "Yeah",
        0.09275510010275585
      ],
      [
        "Inch",
        0.20490559829015384
      ],
      [
        "wait",
        0.2350928889184125
      ],
      [
        "emulation before simply",
        0.39372497385557276
      ],
      [
        "simply",
        0.4790840055339836
      ],
      [
        "hour",
        0.49655983608087473
      ],
      [
        "emulation",
        0.5896634495304541
      ],
      [
        "ahead",
        0.637822346329924
      ]
    ]
  },
  {
    "utterance number": 11,
    "timestamp": "2023-03-21",
    "speaker": "KG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I can guarantee you that it's possible to do such an emulation",
        "polarity": 0.0,
        "subjectivity": 0.75
      },
      {
        "sentence number": 2,
        "text": " Not as a generator, but you can write user code that is a faithful implementation of this",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.75,
    "keywords": [
      [
        "emulation",
        0.12363091320521931
      ],
      [
        "write user code",
        0.1829003496708144
      ],
      [
        "guarantee",
        0.2005079697193566
      ],
      [
        "write user",
        0.2766850298235749
      ],
      [
        "user code",
        0.2766850298235749
      ],
      [
        "faithful implementation",
        0.2766850298235749
      ],
      [
        "generator",
        0.32883716426354986
      ],
      [
        "write",
        0.46553351027698087
      ],
      [
        "user",
        0.46553351027698087
      ],
      [
        "code",
        0.46553351027698087
      ]
    ]
  },
  {
    "utterance number": 12,
    "timestamp": "2023-03-21",
    "speaker": "MM",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Yeah, not not as a generator is fine, and as if there is nothing terribly surprising about, the is your code then",
        "polarity": 0.5583333333333333,
        "subjectivity": 0.5
      },
      {
        "sentence number": 2,
        "text": " Yeah, I'm okay, right now",
        "polarity": 0.39285714285714285,
        "subjectivity": 0.5178571428571428
      },
      {
        "sentence number": 3,
        "text": " then we can revisit if there's a surprise, once JHD writes that",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.47559523809523807,
    "subjectivity": 0.5089285714285714,
    "keywords": [
      [
        "generator is fine",
        0.02824654676495423
      ],
      [
        "terribly surprising",
        0.041491573508937424
      ],
      [
        "Yeah",
        0.04855479154257038
      ],
      [
        "fine",
        0.13763092523581996
      ],
      [
        "generator",
        0.19959610972506966
      ],
      [
        "terribly",
        0.19959610972506966
      ],
      [
        "surprising",
        0.19959610972506966
      ],
      [
        "code",
        0.19959610972506966
      ],
      [
        "JHD writes",
        0.22355876700868046
      ],
      [
        "JHD",
        0.32751264507295225
      ]
    ]
  },
  {
    "utterance number": 13,
    "timestamp": "2023-03-21",
    "speaker": "KG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " That sounds good",
        "polarity": 0.7,
        "subjectivity": 0.6000000000000001
      },
      {
        "sentence number": 2,
        "text": " Okay, so I'd like to ask for consensus for this change assuming that it does not prove to be unexpectedly complicated",
        "polarity": 0.0,
        "subjectivity": 0.75
      },
      {
        "sentence number": 3,
        "text": " Looks like there's a reply from SYG",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.2333333333333333,
    "subjectivity": 0.7000000000000001,
    "keywords": [
      [
        "sounds good",
        0.03107735477427921
      ],
      [
        "good",
        0.13696809108329627
      ],
      [
        "reply from SYG",
        0.19230474390773872
      ],
      [
        "unexpectedly complicated",
        0.21339268578732606
      ],
      [
        "sounds",
        0.2200560909321288
      ],
      [
        "SYG",
        0.2742624966594226
      ],
      [
        "change assuming",
        0.32441639786848336
      ],
      [
        "complicated",
        0.3553358554145339
      ],
      [
        "consensus",
        0.4949246952252326
      ],
      [
        "change",
        0.4949246952252326
      ]
    ]
  },
  {
    "utterance number": 14,
    "timestamp": "2023-03-21",
    "speaker": "SYG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I was going to say what Kevin said",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " I can also guarantee that it is possible to do in user code, it's just like, it's not going to be just typing a for-of thing in a generator and expect that to work though",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 1.0,
    "keywords": [
      [
        "Kevin",
        0.06588837669267192
      ],
      [
        "user code",
        0.09108482621177338
      ],
      [
        "typing a for-of",
        0.12124452117740256
      ],
      [
        "for-of thing",
        0.12124452117740256
      ],
      [
        "generator and expect",
        0.12124452117740256
      ],
      [
        "code",
        0.25386721785551913
      ],
      [
        "guarantee",
        0.32883716426354986
      ],
      [
        "user",
        0.32883716426354986
      ],
      [
        "typing",
        0.32883716426354986
      ],
      [
        "for-of",
        0.32883716426354986
      ]
    ]
  },
  {
    "utterance number": 15,
    "timestamp": "2023-03-21",
    "speaker": "MM",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Okay",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 2,
        "text": " Okay, so I'm pretty happy",
        "polarity": 0.5166666666666667,
        "subjectivity": 0.8333333333333334
      },
      {
        "sentence number": 3,
        "text": " So yeah, I approve modulo possible surprises once JHD writes his implementation",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.41,
    "subjectivity": 0.8,
    "keywords": [
      [
        "pretty happy",
        0.21339268578732606
      ],
      [
        "surprises once JHD",
        0.27187610866074385
      ],
      [
        "JHD writes",
        0.27187610866074385
      ],
      [
        "writes his implementation",
        0.35487136790899465
      ],
      [
        "happy",
        0.3553358554145339
      ],
      [
        "JHD",
        0.36348788044697095
      ],
      [
        "yeah",
        0.44538603402402266
      ],
      [
        "implementation",
        0.44538603402402266
      ],
      [
        "pretty",
        0.4949246952252326
      ],
      [
        "approve modulo",
        0.5286731219590494
      ]
    ]
  },
  {
    "utterance number": 16,
    "timestamp": "2023-03-21",
    "speaker": "DE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " JHD, is this part of the complete es-shim implementation of iterator helpers",
        "polarity": 0.1,
        "subjectivity": 0.4
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.1,
    "subjectivity": 0.4,
    "keywords": [
      [
        "complete es-shim implementation",
        0.0042542192213185686
      ],
      [
        "iterator helpers",
        0.015380821171891606
      ],
      [
        "complete es-shim",
        0.02570861714399338
      ],
      [
        "es-shim implementation",
        0.02570861714399338
      ],
      [
        "implementation of iterator",
        0.02570861714399338
      ],
      [
        "JHD",
        0.030396371632413578
      ],
      [
        "helpers",
        0.09568045026443411
      ],
      [
        "part",
        0.15831692877998726
      ],
      [
        "complete",
        0.15831692877998726
      ],
      [
        "es-shim",
        0.15831692877998726
      ]
    ]
  },
  {
    "utterance number": 17,
    "timestamp": "2023-03-21",
    "speaker": "JHD",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Yes",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": []
  },
  {
    "utterance number": 18,
    "timestamp": "2023-03-21",
    "speaker": "DE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Great",
        "polarity": 0.8,
        "subjectivity": 0.75
      },
      {
        "sentence number": 2,
        "text": " That there's a complete",
        "polarity": 0.1,
        "subjectivity": 0.4
      },
      {
        "sentence number": 3,
        "text": " issue, implementation iterator helpers that you can get up to date",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " All right",
        "polarity": 0.2857142857142857,
        "subjectivity": 0.5357142857142857
      },
      {
        "sentence number": 5,
        "text": " Would you like to repeat the request",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": " Yes, yes I would like to ask for a consensus and in particular to get at least one explicit support for this change",
        "polarity": -0.06666666666666667,
        "subjectivity": 0.3666666666666667
      },
      {
        "sentence number": 7,
        "text": " would like to explicitly support",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 8,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.21047619047619048,
    "subjectivity": 0.4838095238095238,
    "keywords": [
      [
        "Great",
        0.09505843514452594
      ],
      [
        "implementation iterator helpers",
        0.2158241323641567
      ],
      [
        "implementation iterator",
        0.284049792105107
      ],
      [
        "support",
        0.2896210526991134
      ],
      [
        "complete",
        0.34441111823732456
      ],
      [
        "issue",
        0.3470558675511517
      ],
      [
        "iterator helpers",
        0.3519687952176163
      ],
      [
        "implementation",
        0.4335546654346229
      ],
      [
        "date",
        0.4335546654346229
      ],
      [
        "repeat the request",
        0.4422965088720558
      ]
    ]
  },
  {
    "utterance number": 19,
    "timestamp": "2023-03-21",
    "speaker": "MM",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Explicit support",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "Explicit support",
        0.02570861714399338
      ],
      [
        "Explicit",
        0.15831692877998726
      ],
      [
        "support",
        0.15831692877998726
      ]
    ]
  },
  {
    "utterance number": 20,
    "timestamp": "2023-03-21",
    "speaker": "KG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Thank you, MM",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " Okay",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 3,
        "text": " I hear explicit support and no objection, so I will take that as consensus for this change",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.5,
    "subjectivity": 0.5,
    "keywords": [
      [
        "objection",
        0.44538603402402266
      ],
      [
        "change",
        0.44538603402402266
      ],
      [
        "hear explicit",
        0.5286731219590494
      ],
      [
        "explicit support",
        0.5286731219590494
      ],
      [
        "hear explicit support",
        0.5507976380437665
      ],
      [
        "hear",
        0.5880798524606783
      ],
      [
        "explicit",
        0.5880798524606783
      ],
      [
        "support",
        0.5880798524606783
      ],
      [
        "consensus",
        0.5880798524606783
      ]
    ]
  },
  {
    "utterance number": 21,
    "timestamp": "2023-03-21",
    "speaker": "MF",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Okay, so we have had a request from the community to re-evaluate the naming",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 2,
        "text": " If you want to follow along there the issue is 270",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " As background, we have two methods called take and drop",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " Take takes an iterator and a number of elements and produces a new iterator that is exhausted after that number of nexts",
        "polarity": -0.13181818181818183,
        "subjectivity": 0.5772727272727273
      },
      {
        "sentence number": 5,
        "text": " Drop takes an iterator and a number of elements and nexts the underlying iterator that many times and then yields all of the remaining elements from the underlying iterator",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 6,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.18409090909090908,
    "subjectivity": 0.5386363636363636,
    "keywords": [
      [
        "re-evaluate the naming",
        0.04028450838977766
      ],
      [
        "community to re-evaluate",
        0.05040058839173918
      ],
      [
        "iterator",
        0.0983464227122231
      ],
      [
        "number",
        0.1567886035302761
      ],
      [
        "elements",
        0.1743316877332537
      ],
      [
        "naming",
        0.17678508100676235
      ],
      [
        "underlying iterator",
        0.1825837218160827
      ],
      [
        "request",
        0.219048520951441
      ],
      [
        "community",
        0.219048520951441
      ],
      [
        "re-evaluate",
        0.219048520951441
      ]
    ]
  },
  {
    "utterance number": 22,
    "timestamp": "2023-03-21",
    "speaker": "MF",
    "sentences": [
      {
        "sentence number": 1,
        "text": " So these are usually called `take` and `drop`",
        "polarity": -0.25,
        "subjectivity": 0.25
      },
      {
        "sentence number": 2,
        "text": " They're sometimes called by some other names, but will get into that detail later on",
        "polarity": -0.0625,
        "subjectivity": 0.1875
      },
      {
        "sentence number": 3,
        "text": " Also necessary background: in all the iterator helpers methods that consume the underlying iterator, when the consumption is done, they close the underlying iterator, they don't just stop iterating",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": -0.09375,
    "subjectivity": 0.40625,
    "keywords": [
      [
        "drop",
        0.09899614275914727
      ],
      [
        "underlying iterator",
        0.16166813926363924
      ],
      [
        "called",
        0.17246240393719647
      ],
      [
        "iterator",
        0.1863064676290964
      ],
      [
        "underlying",
        0.21857728881918356
      ],
      [
        "consume the underlying",
        0.3209036832833708
      ],
      [
        "close the underlying",
        0.3209036832833708
      ],
      [
        "stop iterating",
        0.34833155321397213
      ],
      [
        "iterator helpers methods",
        0.41577643111444756
      ],
      [
        "helpers methods",
        0.4468481940502652
      ]
    ]
  },
  {
    "utterance number": 23,
    "timestamp": "2023-03-21",
    "speaker": "MF",
    "sentences": [
      {
        "sentence number": 1,
        "text": " That is true of `take` here as well: if `take` completes, the underlying iterator is closed, so it can't be used as a way to just advance the underlying iterator a certain number of times and then reuse the underlying iterator",
        "polarity": 0.15476190476190474,
        "subjectivity": 0.44047619047619047
      },
      {
        "sentence number": 2,
        "text": " There are some community members that we're trying to use `take` in that way",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " They were looking to reuse the underlying iterator after exhausting the produced helper iterator",
        "polarity": -0.4,
        "subjectivity": 0.5
      },
      {
        "sentence number": 4,
        "text": " They claim that if the name was something else like limit, they might not have made this mistake",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " So this comes from an actual user request and there are a number of supporters of that rename on the thread",
        "polarity": 0.0,
        "subjectivity": 0.1
      },
      {
        "sentence number": 6,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.012857142857142845,
    "subjectivity": 0.3842857142857143,
    "keywords": [
      [
        "underlying iterator",
        0.018888997270623657
      ],
      [
        "reuse the underlying",
        0.03856264231497023
      ],
      [
        "advance the underlying",
        0.042789864455225236
      ],
      [
        "underlying",
        0.05133083224602597
      ],
      [
        "iterator",
        0.06842701118209255
      ],
      [
        "number of times",
        0.09599123068360058
      ],
      [
        "completes",
        0.13126086571907056
      ],
      [
        "closed",
        0.1648199836705024
      ],
      [
        "reuse",
        0.17436618531215425
      ],
      [
        "true",
        0.19985076380700253
      ]
    ]
  },
  {
    "utterance number": 24,
    "timestamp": "2023-03-21",
    "speaker": "MF",
    "sentences": [
      {
        "sentence number": 1,
        "text": " So, here's some data that I collected on use of the names for these two operations in other languages and in JavaScript libraries",
        "polarity": -0.125,
        "subjectivity": 0.375
      },
      {
        "sentence number": 2,
        "text": " You can see that by far the most common names for both of these are take and drop",
        "polarity": 0.09999999999999999,
        "subjectivity": 0.6666666666666666
      },
      {
        "sentence number": 3,
        "text": " And in particular, the contentious one of \"take\" is almost universally used",
        "polarity": 0.08333333333333333,
        "subjectivity": 0.16666666666666666
      },
      {
        "sentence number": 4,
        "text": " The only other alternative that is used more than once is \"limit\", which was the one that was being suggested",
        "polarity": 0.125,
        "subjectivity": 0.625
      },
      {
        "sentence number": 5,
        "text": " So on that point, I think if we renamed to \"limit\", we should also rename \"drop\"",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": " I think everywhere where drop was used the name of take was \"take\"",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 7,
        "text": " So there's kind of an implication there",
        "polarity": 0.6,
        "subjectivity": 0.9
      },
      {
        "sentence number": 8,
        "text": " Even if we do make this rename, this doesn't allow us to use take and drop for other operations",
        "polarity": -0.125,
        "subjectivity": 0.375
      },
      {
        "sentence number": 9,
        "text": " We should consider those names dead",
        "polarity": -0.2,
        "subjectivity": 0.4
      },
      {
        "sentence number": 10,
        "text": " We should no longer use \"take\" or \"drop\" for anything",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 11,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.08263888888888889,
    "subjectivity": 0.5215277777777779,
    "keywords": [
      [
        "JavaScript libraries",
        0.04609632665181625
      ],
      [
        "drop",
        0.12064620667783087
      ],
      [
        "limit",
        0.18159486515185266
      ],
      [
        "libraries",
        0.1889137036250101
      ],
      [
        "data",
        0.23325511658272946
      ],
      [
        "collected",
        0.23325511658272946
      ],
      [
        "languages",
        0.23325511658272946
      ],
      [
        "JavaScript",
        0.23325511658272946
      ],
      [
        "rename",
        0.2758382578382104
      ],
      [
        "operations",
        0.3065195253993778
      ]
    ]
  },
  {
    "utterance number": 25,
    "timestamp": "2023-03-21",
    "speaker": "MF",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Something else worth considering while we're considering these renames is that we have plans for future proposals for takeWhile and dropWhile which are typically called that: takeWhile and dropWhile",
        "polarity": 0.044444444444444446,
        "subjectivity": 0.24166666666666667
      },
      {
        "sentence number": 2,
        "text": " If we renamed to limit and skip as possible alternatives, you would have limitWhile and skipWhile, which are names which basically don't exist anywhere else",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 3,
        "text": " That might be a reason not to make the rename",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " And that's it for the presentation",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " So what we are considering is renaming take to limit and drop to skip, or possibly, some other choice",
        "polarity": -0.0625,
        "subjectivity": 0.6875
      },
      {
        "sentence number": 6,
        "text": " I can seed the conversation by saying that my opinion is that given the data that I collected, it looks like take and drop really are far too common to ignore that naming precedent",
        "polarity": 1.850371707708594e-17,
        "subjectivity": 0.5666666666666667
      },
      {
        "sentence number": 7,
        "text": " And yes, some people may draw incorrect inferences from it, but renaming it would probably have more downsides from having a less familiar name",
        "polarity": 0.23611111111111113,
        "subjectivity": 0.35555555555555557
      },
      {
        "sentence number": 8,
        "text": " So, do we have feedback",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 9,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.059722222222222225,
    "subjectivity": 0.48888888888888893,
    "keywords": [
      [
        "takeWhile and dropWhile",
        0.006340118841254615
      ],
      [
        "plans for future",
        0.026472509719998365
      ],
      [
        "future proposals",
        0.026472509719998365
      ],
      [
        "typically called",
        0.026472509719998365
      ],
      [
        "proposals for takeWhile",
        0.044240324790751184
      ],
      [
        "takeWhile",
        0.05594967060024085
      ],
      [
        "dropWhile",
        0.05594967060024085
      ],
      [
        "worth",
        0.16059199629121473
      ],
      [
        "plans",
        0.16059199629121473
      ],
      [
        "future",
        0.16059199629121473
      ]
    ]
  },
  {
    "utterance number": 26,
    "timestamp": "2023-03-21",
    "speaker": "PDL",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Yes, so uncool this first question is do other languages that use take and drop also close the underlying iterator and is there Any",
        "polarity": 0.0625,
        "subjectivity": 0.35416666666666663
      },
      {
        "sentence number": 2,
        "text": " motivation",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " And what's the motivation for doing that because it seems like I thing, I wonder, why",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0625,
    "subjectivity": 0.35416666666666663,
    "keywords": [
      [
        "Any. motivation",
        0.028706035595389524
      ],
      [
        "drop also close",
        0.032361484023902806
      ],
      [
        "close the underlying",
        0.032361484023902806
      ],
      [
        "underlying iterator",
        0.032361484023902806
      ],
      [
        "Any.",
        0.08314056054721641
      ],
      [
        "motivation",
        0.16781817241196398
      ],
      [
        "uncool",
        0.17705097305926945
      ],
      [
        "question",
        0.17705097305926945
      ],
      [
        "languages",
        0.17705097305926945
      ],
      [
        "drop",
        0.17705097305926945
      ]
    ]
  },
  {
    "utterance number": 27,
    "timestamp": "2023-03-21",
    "speaker": "MF",
    "sentences": [
      {
        "sentence number": 1,
        "text": " The idea of the underlying iterator being closed is kind of a unique thing to JavaScript iterators",
        "polarity": 0.2916666666666667,
        "subjectivity": 0.6666666666666666
      },
      {
        "sentence number": 2,
        "text": " The the other question was, if somebody did want an operation that advanced an iterator by a number of elements, could we add something like that",
        "polarity": 0.1375,
        "subjectivity": 0.4875
      },
      {
        "sentence number": 3,
        "text": " I'd be fine with doing that, that's just not included in the initial iterator helpers MVP and this is",
        "polarity": 0.20833333333333334,
        "subjectivity": 0.25
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.22380952380952382,
    "subjectivity": 0.49642857142857144,
    "keywords": [
      [
        "closed is kind",
        0.03089634754576291
      ],
      [
        "unique thing",
        0.03089634754576291
      ],
      [
        "thing to JavaScript",
        0.03089634754576291
      ],
      [
        "underlying iterator",
        0.07623423755791077
      ],
      [
        "JavaScript iterators",
        0.07623423755791077
      ],
      [
        "iterator helpers MVP",
        0.09493176255336956
      ],
      [
        "iterator",
        0.1363879281583322
      ],
      [
        "number of elements",
        0.1717786833259384
      ],
      [
        "idea",
        0.17311953240723346
      ],
      [
        "underlying",
        0.17311953240723346
      ]
    ]
  },
  {
    "utterance number": 28,
    "timestamp": "2023-03-21",
    "speaker": "PDL",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I would suggest I would support the rename and possibly think of tacky using `take` and `drop` for something",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 2,
        "text": " It does not close the underlying iterator in a separate proposals at some point",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 1.0,
    "keywords": [
      [
        "support the rename",
        0.04188746641162499
      ],
      [
        "rename and possibly",
        0.04188746641162499
      ],
      [
        "drop",
        0.05899937629682816
      ],
      [
        "suggest",
        0.2005079697193566
      ],
      [
        "support",
        0.2005079697193566
      ],
      [
        "rename",
        0.2005079697193566
      ],
      [
        "possibly",
        0.2005079697193566
      ],
      [
        "tacky",
        0.2005079697193566
      ],
      [
        "close the underlying",
        0.2766850298235749
      ],
      [
        "underlying iterator",
        0.2766850298235749
      ]
    ]
  },
  {
    "utterance number": 29,
    "timestamp": "2023-03-21",
    "speaker": "MF",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I would not be okay with using take or drop to do anything but what they're currently specified to do",
        "polarity": 0.25,
        "subjectivity": 0.45
      },
      {
        "sentence number": 2,
        "text": " If we do the rename, we should not use take to mean this new thing because it's very, very common in other languages for take to mean the thing that it currently means",
        "polarity": -0.16727272727272727,
        "subjectivity": 0.5424242424242424
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": -0.06295454545454546,
    "subjectivity": 0.5193181818181818,
    "keywords": [
      [
        "drop",
        0.15831692877998726
      ],
      [
        "thing",
        0.21372831784009064
      ],
      [
        "rename",
        0.3120806116026233
      ],
      [
        "common",
        0.3951375787241905
      ],
      [
        "languages",
        0.3951375787241905
      ]
    ]
  },
  {
    "utterance number": 30,
    "timestamp": "2023-03-21",
    "speaker": "PDL",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Well, except for other languages, don't close the underlying iterator",
        "polarity": -0.125,
        "subjectivity": 0.375
      },
      {
        "sentence number": 2,
        "text": " So that's the one thing that is in line with everything else",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " okay",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 4,
        "text": " You're saying it would be still be the same other than food the same other than not closing family trip",
        "polarity": -0.0625,
        "subjectivity": 0.25
      },
      {
        "sentence number": 5,
        "text": " That's possibly find",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 6,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.017857142857142856,
    "subjectivity": 0.4107142857142857,
    "keywords": [
      [
        "underlying iterator",
        0.015465128052409167
      ],
      [
        "close the underlying",
        0.02140921543860024
      ],
      [
        "languages",
        0.10519328464496844
      ],
      [
        "iterator",
        0.10519328464496844
      ],
      [
        "closing family trip",
        0.131944111685952
      ],
      [
        "close",
        0.1447773057422032
      ],
      [
        "underlying",
        0.1447773057422032
      ],
      [
        "family trip",
        0.20785651292262122
      ],
      [
        "closing family",
        0.2704390918235917
      ],
      [
        "possibly find",
        0.2754003999271723
      ]
    ]
  },
  {
    "utterance number": 31,
    "timestamp": "2023-03-21",
    "speaker": "KG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Yeah, you asked about why this is coming up",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " So I don't think MF mentioned in the presentation, the reason we're bringing this up is because Node",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": "js has a streams implementation and they have just copied iterator helpers onto their streams, and they have copied that as close to the spec as possible, which is great, and have shipped that as experimental code",
        "polarity": 0.3,
        "subjectivity": 0.7166666666666667
      },
      {
        "sentence number": 4,
        "text": " Not as like \"this is done\"; they're open to making changes to it - it's firmly marked as experimental, but shipped so they could start getting feedback",
        "polarity": 0.06666666666666667,
        "subjectivity": 0.5
      },
      {
        "sentence number": 5,
        "text": " And one of the pieces of feedback that they got is that someone expected this to work in the \"keeps the underlying thing open\" way, they wanted to take some items from the iterator and then take some more items from the iterator, and that is a thing you can do in other languages sometimes, depending on\u2026 like in Rust, there's this ownership model that prevents you from taking before exhausting the thing that you've taken and so on",
        "polarity": -0.025,
        "subjectivity": 0.45499999999999996
      },
      {
        "sentence number": 6,
        "text": " Anyway",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 7,
        "text": " So this came up in real life, we got actual feedback from an actual implementation",
        "polarity": 0.06666666666666667,
        "subjectivity": 0.16666666666666666
      },
      {
        "sentence number": 8,
        "text": " That's why this is coming up",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 9,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.08392857142857144,
    "subjectivity": 0.45892857142857135,
    "keywords": [
      [
        "copied iterator helpers",
        0.09300873889416296
      ],
      [
        "Yeah",
        0.12563570680746933
      ],
      [
        "iterator",
        0.12914167366891022
      ],
      [
        "feedback",
        0.15068688730108679
      ],
      [
        "experimental code",
        0.15735253051527334
      ],
      [
        "thing",
        0.16374182205452456
      ],
      [
        "copied iterator",
        0.1667199249002659
      ],
      [
        "asked",
        0.1767142672697277
      ],
      [
        "experimental",
        0.17831861932739085
      ],
      [
        "streams",
        0.1844179671176734
      ]
    ]
  },
  {
    "utterance number": 32,
    "timestamp": "2023-03-21",
    "speaker": "LCA",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Yeah, KG does mention this but Rust does close the iterator after a take, because it takes ownership of the iterator to take method does",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " So once the tank is complete iterators, close for dropped, rather and you cannot go",
        "polarity": 0.1,
        "subjectivity": 0.4
      },
      {
        "sentence number": 3,
        "text": " we use it for brother take operations,",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.1,
    "subjectivity": 0.4,
    "keywords": [
      [
        "Rust does close",
        0.05317179634516735
      ],
      [
        "Rust",
        0.0768482342305876
      ],
      [
        "Yeah",
        0.08278724841360871
      ],
      [
        "complete iterators",
        0.14320729652469222
      ],
      [
        "close",
        0.15097172815666524
      ],
      [
        "iterator",
        0.15143570905825188
      ],
      [
        "brother take operations",
        0.15738175988931558
      ],
      [
        "mention",
        0.16880289946675506
      ],
      [
        "ownership",
        0.16880289946675506
      ],
      [
        "method",
        0.16880289946675506
      ]
    ]
  },
  {
    "utterance number": 33,
    "timestamp": "2023-03-21",
    "speaker": "KG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I thought if you dropped the `take`'d iterator, you could like restore ownership",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "restore ownership",
        0.015380821171891606
      ],
      [
        "iterator",
        0.09568045026443411
      ],
      [
        "ownership",
        0.09568045026443411
      ],
      [
        "thought",
        0.15831692877998726
      ],
      [
        "dropped",
        0.15831692877998726
      ],
      [
        "restore",
        0.15831692877998726
      ]
    ]
  },
  {
    "utterance number": 34,
    "timestamp": "2023-03-21",
    "speaker": "LCA",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Oh no",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " So if it kind of depends on whether the iterator was for will weather, the iterator was a borrowed, it's kind of complicated",
        "polarity": 0.2333333333333333,
        "subjectivity": 0.9333333333333332
      },
      {
        "sentence number": 3,
        "text": " whether the original they can have the original iterator and copy it like a reference-copy it, and then you can take things on that, but if you if you then `take` on your original iterator, it would resume",
        "polarity": 0.375,
        "subjectivity": 0.75
      },
      {
        "sentence number": 4,
        "text": " it would have its own like counter, with start at 0, again, rather than starting from where it last left off",
        "polarity": 0.15,
        "subjectivity": 0.2916666666666667
      }
    ],
    "polarity": 0.2425,
    "subjectivity": 0.6216666666666666,
    "keywords": [
      [
        "original iterator",
        0.0552299245516205
      ],
      [
        "iterator",
        0.07572328363319565
      ],
      [
        "original",
        0.10946893700760985
      ],
      [
        "kind of depends",
        0.14538059621776547
      ],
      [
        "kind of complicated.",
        0.14538059621776547
      ],
      [
        "kind",
        0.1542081912327796
      ],
      [
        "weather",
        0.3559145112899116
      ],
      [
        "borrowed",
        0.3559145112899116
      ],
      [
        "resume",
        0.3559145112899116
      ],
      [
        "iterator and copy",
        0.38427297630507146
      ]
    ]
  },
  {
    "utterance number": 35,
    "timestamp": "2023-03-21",
    "speaker": "KG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " But in any case Rust prevents you from being confused",
        "polarity": -0.4,
        "subjectivity": 0.7
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": -0.4,
    "subjectivity": 0.7,
    "keywords": [
      [
        "case Rust prevents",
        0.015042304599106411
      ],
      [
        "case Rust",
        0.04498862876540802
      ],
      [
        "Rust prevents",
        0.04498862876540802
      ],
      [
        "Rust",
        0.1447773057422032
      ],
      [
        "confused",
        0.15831692877998726
      ],
      [
        "case",
        0.29736558256021506
      ],
      [
        "prevents",
        0.29736558256021506
      ]
    ]
  },
  {
    "utterance number": 36,
    "timestamp": "2023-03-21",
    "speaker": "LCA",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Rust has `take` and `skip`, and they have `take_while` and `skip_while`",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "skip",
        0.02245598843932277
      ],
      [
        "Rust",
        0.10028582371075691
      ]
    ]
  },
  {
    "utterance number": 37,
    "timestamp": "2023-03-21",
    "speaker": "DE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I'm happy to follow the champions' opinion that we should stick with take/drop",
        "polarity": 0.8,
        "subjectivity": 1.0
      },
      {
        "sentence number": 2,
        "text": " Given the relative (but not absolute) uniqueness of closing the iterator to JavaScript, I still don't think that means that we should disregard the rest of the cross-language consensus on this",
        "polarity": -0.05,
        "subjectivity": 0.45
      },
      {
        "sentence number": 3,
        "text": " I understand that closing iterators is something that people have to learn, but it seems like the kind of thing that you just have to learn once, but maybe it's not so bad",
        "polarity": -0.04999999999999993,
        "subjectivity": 0.7833333333333333
      },
      {
        "sentence number": 4,
        "text": " this is a subjective opinion, subjective circumstance",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " But overall, I'm happy to defer to the champions on making a call, since arguments were given arguments on both sides",
        "polarity": 0.4,
        "subjectivity": 0.5
      },
      {
        "sentence number": 6,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.20000000000000004,
    "subjectivity": 0.6380952380952382,
    "keywords": [
      [
        "follow the champions'",
        0.02697696243042532
      ],
      [
        "happy to follow",
        0.05624905138159156
      ],
      [
        "champions' opinion",
        0.0666218631777292
      ],
      [
        "drop",
        0.10475268006482719
      ],
      [
        "follow",
        0.16207505320442805
      ],
      [
        "champions'",
        0.16207505320442805
      ],
      [
        "stick",
        0.16207505320442805
      ],
      [
        "happy",
        0.1642868120161768
      ],
      [
        "closing iterators",
        0.1744234886058769
      ],
      [
        "disregard the rest",
        0.19256338442918636
      ]
    ]
  },
  {
    "utterance number": 38,
    "timestamp": "2023-03-21",
    "speaker": "JRL",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I don't understand why renaming to `limit` changes the expectation that the underlying iterator is going to be closed or not",
        "polarity": -0.1,
        "subjectivity": 0.1
      },
      {
        "sentence number": 2,
        "text": " If we rename it to limit, then the expectation could still be that it doesn't close the underlying iterator and you could limit multiple times",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " I don't understand why renaming eliminates the confusion",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " I think the confusion still exists, it's just, that we're going to call it a different method now",
        "polarity": 0.0,
        "subjectivity": 0.6
      },
      {
        "sentence number": 5,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": -0.03333333333333333,
    "subjectivity": 0.2333333333333333,
    "keywords": [
      [
        "underlying iterator",
        0.029815950285070256
      ],
      [
        "understand why renaming",
        0.053389461862200116
      ],
      [
        "limit multiple times",
        0.08022395392845542
      ],
      [
        "limit",
        0.10648836790221529
      ],
      [
        "close the underlying",
        0.106882191476257
      ],
      [
        "underlying",
        0.10842775795676556
      ],
      [
        "expectation",
        0.12975471792846777
      ],
      [
        "iterator",
        0.12975471792846777
      ],
      [
        "understand",
        0.14320275646057917
      ],
      [
        "limit multiple",
        0.16584292258587285
      ]
    ]
  },
  {
    "utterance number": 39,
    "timestamp": "2023-03-21",
    "speaker": "MF",
    "sentences": [
      {
        "sentence number": 1,
        "text": " On the thread where this was proposed, multiple people gave that opinion",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " It's subjective and I take them at their word for it",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "multiple people gave",
        0.005401660759706154
      ],
      [
        "multiple people",
        0.02541909697430123
      ],
      [
        "gave that opinion",
        0.02541909697430123
      ],
      [
        "people gave",
        0.04188746641162499
      ],
      [
        "proposed",
        0.12363091320521931
      ],
      [
        "multiple",
        0.12363091320521931
      ],
      [
        "opinion",
        0.12363091320521931
      ],
      [
        "thread",
        0.2005079697193566
      ],
      [
        "people",
        0.2005079697193566
      ],
      [
        "gave",
        0.2005079697193566
      ]
    ]
  },
  {
    "utterance number": 40,
    "timestamp": "2023-03-21",
    "speaker": "SYG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Okay",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 2,
        "text": " So three things",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " One, my opinion is I still like `take` and `drop`",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " Two, this is stage 3, so I would like our bar for renaming to be high here",
        "polarity": 0.16,
        "subjectivity": 0.5399999999999999
      },
      {
        "sentence number": 5,
        "text": " I would like us to default to not do things like renames during stage 3",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": " And three, I have similar concerns as to what JRL basically said: is the confusion",
        "polarity": 0.0,
        "subjectivity": 0.4
      },
      {
        "sentence number": 7,
        "text": " II can see a scenario and I'm not I would like to take",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 8,
        "text": " the the folks who offered the opinion on the issue at their word, but I can see a path to confusion where they had a certain behavior in mind, they found out that this iterator helper does not have that behavior",
        "polarity": 0.21428571428571427,
        "subjectivity": 0.5714285714285714
      },
      {
        "sentence number": 9,
        "text": " And any initial name would have been similarly confusing",
        "polarity": -0.15,
        "subjectivity": 0.2
      },
      {
        "sentence number": 10,
        "text": " Like it's not that clear to me how much of the root cause confusion is attributable to the name here",
        "polarity": 0.15000000000000002,
        "subjectivity": 0.29166666666666663
      },
      {
        "sentence number": 11,
        "text": " So given that, I don't think I'm compelled to change",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 12,
        "text": " from `take`/`drop`",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 13,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.10928571428571429,
    "subjectivity": 0.3743452380952381,
    "keywords": [
      [
        "confusion",
        0.17690573358651598
      ],
      [
        "drop",
        0.18282100487928626
      ],
      [
        "stage",
        0.20338870297364303
      ],
      [
        "things",
        0.22450382389090356
      ],
      [
        "opinion",
        0.25848557117766835
      ],
      [
        "behavior",
        0.28858555825064813
      ],
      [
        "JRL basically",
        0.28951430220348673
      ],
      [
        "JRL",
        0.364700060527817
      ],
      [
        "bar for renaming",
        0.4582951060392338
      ],
      [
        "bar",
        0.5605958786727009
      ]
    ]
  },
  {
    "utterance number": 41,
    "timestamp": "2023-03-21",
    "speaker": "DE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " +1 to the preference to not rename during stage 3",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "rename during stage",
        0.015380821171891606
      ],
      [
        "stage",
        0.09568045026443411
      ],
      [
        "preference",
        0.15831692877998726
      ],
      [
        "rename",
        0.15831692877998726
      ]
    ]
  },
  {
    "utterance number": 42,
    "timestamp": "2023-03-21",
    "speaker": "DLM",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I feel the same way",
        "polarity": 0.0,
        "subjectivity": 0.125
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.125,
    "keywords": [
      [
        "feel",
        0.29736558256021506
      ]
    ]
  },
  {
    "utterance number": 43,
    "timestamp": "2023-03-21",
    "speaker": "WH",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I'm not quite sure what to do here",
        "polarity": 0.5,
        "subjectivity": 0.8888888888888888
      },
      {
        "sentence number": 2,
        "text": " The important thing in commonality with the other languages is the usage patterns",
        "polarity": 0.1375,
        "subjectivity": 0.6875
      },
      {
        "sentence number": 3,
        "text": " And if it looks like the same usage pattern should work in JavaScript, but it subtly does something different, that'd be a problem and I would be reluctant to ship something which repeatedly causes such a problem",
        "polarity": -0.08333333333333333,
        "subjectivity": 0.43125
      },
      {
        "sentence number": 4,
        "text": " What are the options here",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " Same name, rename, not close the iterators, anything else",
        "polarity": 0.0,
        "subjectivity": 0.125
      },
      {
        "sentence number": 6,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.05520833333333334,
    "subjectivity": 0.5142361111111111,
    "keywords": [
      [
        "usage patterns",
        0.14226615912793467
      ],
      [
        "usage",
        0.17645629344342692
      ],
      [
        "important thing",
        0.19990495171535658
      ],
      [
        "thing in commonality",
        0.19990495171535658
      ],
      [
        "problem",
        0.2095635637654691
      ],
      [
        "work in JavaScript",
        0.2786464054703181
      ],
      [
        "reluctant to ship",
        0.33546766747506834
      ],
      [
        "patterns",
        0.35291258688685384
      ],
      [
        "pattern",
        0.35291258688685384
      ],
      [
        "pattern should work",
        0.40094226201681654
      ]
    ]
  },
  {
    "utterance number": 44,
    "timestamp": "2023-03-21",
    "speaker": "KG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " It was suggested, and I don't particularly want to pursue this option but it is at least a thing that we could do, to have an additional argument to the method which specifies whether or not to close the underlying thing when the `take` is exhausted",
        "polarity": -0.17777777777777778,
        "subjectivity": 0.4777777777777778
      },
      {
        "sentence number": 2,
        "text": " But I don't really like that option",
        "polarity": 0.2,
        "subjectivity": 0.2
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": -0.08333333333333333,
    "subjectivity": 0.4083333333333333,
    "keywords": [
      [
        "additional argument",
        0.025205094418535638
      ],
      [
        "method which specifies",
        0.025205094418535638
      ],
      [
        "close the underlying",
        0.025205094418535638
      ],
      [
        "underlying thing",
        0.02818091216928084
      ],
      [
        "thing",
        0.08740106550173525
      ],
      [
        "pursue this option",
        0.10210079806730438
      ],
      [
        "suggested",
        0.11436639497981606
      ],
      [
        "exhausted",
        0.11436639497981606
      ],
      [
        "option",
        0.1418503717089202
      ],
      [
        "pursue",
        0.1567973745636324
      ]
    ]
  },
  {
    "utterance number": 45,
    "timestamp": "2023-03-21",
    "speaker": "WH",
    "sentences": [
      {
        "sentence number": 1,
        "text": " This would be a landmine that we're putting into the language for anybody familiar with these things coming from other languages",
        "polarity": 0.125,
        "subjectivity": 0.4375
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.125,
    "subjectivity": 0.4375,
    "keywords": [
      [
        "things coming",
        0.035715520099333646
      ],
      [
        "landmine",
        0.18569843656348187
      ],
      [
        "putting",
        0.18569843656348187
      ],
      [
        "familiar",
        0.18569843656348187
      ],
      [
        "things",
        0.18569843656348187
      ],
      [
        "coming",
        0.18569843656348187
      ],
      [
        "language",
        0.2690767023266335
      ],
      [
        "languages",
        0.2690767023266335
      ]
    ]
  },
  {
    "utterance number": 46,
    "timestamp": "2023-03-21",
    "speaker": "KG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Yeah",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " so I did want to speak to that a little bit",
        "polarity": -0.1875,
        "subjectivity": 0.5
      },
      {
        "sentence number": 3,
        "text": " I agree that there is the potential for that, but it is at least not particularly subtle, because you exhaust the first iterator and then the second one is just empty",
        "polarity": 0.002777777777777777,
        "subjectivity": 0.45555555555555555
      },
      {
        "sentence number": 4,
        "text": " That will be confusing, but that will not be subtle",
        "polarity": -0.31666666666666665,
        "subjectivity": 0.45
      },
      {
        "sentence number": 5,
        "text": " You will just not have things",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": " So you will get a bug, if you have the wrong expectation, but it is not a bug that's like your program is a little bit wrong",
        "polarity": -0.3958333333333333,
        "subjectivity": 0.7666666666666666
      },
      {
        "sentence number": 7,
        "text": " Your program is a lot wrong",
        "polarity": -0.5,
        "subjectivity": 0.9
      },
      {
        "sentence number": 8,
        "text": " So I am hopeful that it will not hurt too much",
        "polarity": 0.2,
        "subjectivity": 0.2
      },
      {
        "sentence number": 9,
        "text": " Like there's definitely - you could contrive a situation in which your program is just a little bit wrong and you don't notice but I expect even people who have the wrong expectation with the current semantics will generally notice",
        "polarity": -0.18958333333333333,
        "subjectivity": 0.6166666666666666
      },
      {
        "sentence number": 10,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": -0.17145833333333332,
    "subjectivity": 0.5616666666666668,
    "keywords": [
      [
        "wrong",
        0.10817209383083204
      ],
      [
        "program",
        0.15012556243127823
      ],
      [
        "Yeah",
        0.15086433768700272
      ],
      [
        "bit",
        0.15306579990794014
      ],
      [
        "bit wrong",
        0.16521359276407044
      ],
      [
        "subtle",
        0.2272065259422014
      ],
      [
        "wrong expectation",
        0.2462048639592586
      ],
      [
        "expectation",
        0.3050164883397328
      ],
      [
        "bug",
        0.3059558151856336
      ],
      [
        "notice",
        0.34752285315461245
      ]
    ]
  },
  {
    "utterance number": 47,
    "timestamp": "2023-03-21",
    "speaker": "WH",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Yeah, it depends on how hidden this is inside the program and see how familiar folks are with the details of how this stuff works",
        "polarity": 0.10416666666666667,
        "subjectivity": 0.41666666666666663
      },
      {
        "sentence number": 2,
        "text": " I would expect casual users to be confused by this",
        "polarity": -0.45000000000000007,
        "subjectivity": 0.7833333333333333
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": -0.1729166666666667,
    "subjectivity": 0.6,
    "keywords": [
      [
        "stuff works",
        0.015099935621315529
      ],
      [
        "inside the program",
        0.02249651976012989
      ],
      [
        "familiar folks",
        0.02249651976012989
      ],
      [
        "Yeah",
        0.05899937629682816
      ],
      [
        "expect casual users",
        0.07862884134976264
      ],
      [
        "works",
        0.10028582371075691
      ],
      [
        "depends",
        0.14832923246533666
      ],
      [
        "hidden",
        0.14832923246533666
      ],
      [
        "inside",
        0.14832923246533666
      ],
      [
        "program",
        0.14832923246533666
      ]
    ]
  },
  {
    "utterance number": 48,
    "timestamp": "2023-03-21",
    "speaker": "RBN",
    "sentences": [
      {
        "sentence number": 1,
        "text": " So one of the things that WH just said was that was saying that we could be doing something wrong and that we would be doing something different than everyone else",
        "polarity": -0.25,
        "subjectivity": 0.75
      },
      {
        "sentence number": 2,
        "text": " But my impression from both having written a library that does these types of operations having worked with C# and LINQ for many years",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 3,
        "text": " and kind of surveying the system is that the expectation for most of these patterns, is most of these existing runtimes in the ecosystem is that whenever you do `take` the iterator is essentially exhausted or closed",
        "polarity": 0.22000000000000003,
        "subjectivity": 0.5399999999999999
      },
      {
        "sentence number": 4,
        "text": " Now, most of these operate on the iterable, versus the iterator, which is a distinction between JavaScript and package in the ecosystem and many other languages that are also prior art",
        "polarity": 0.21875,
        "subjectivity": 0.34375
      },
      {
        "sentence number": 5,
        "text": " However, the consistency that we have with the `take` name is when it's used, it's fairly consistent to mean that you're essentially exhausting the thing, that you're done with it, you're not continuing to use it after the fact",
        "polarity": -0.15416666666666667,
        "subjectivity": 0.4791666666666667
      },
      {
        "sentence number": 6,
        "text": " You're going to be further operating on the results of take, rather than taking something and then trying to take something else",
        "polarity": 0.0,
        "subjectivity": 0.5
      },
      {
        "sentence number": 7,
        "text": " That's not usually the common case with these type of iteration methods as they're used in the ecosystem, and I think that there's value in using a name that is consistent with the ecosystem, has a consistent approach with the ecosystem, and that also is one that's commonly used in other languages, because not everybody is only a JavaScript developer - people will come with that background and knowledge",
        "polarity": -0.014285714285714282,
        "subjectivity": 0.44642857142857145
      },
      {
        "sentence number": 8,
        "text": " They come from other languages or will take this to other languages they use",
        "polarity": -0.125,
        "subjectivity": 0.375
      },
      {
        "sentence number": 9,
        "text": " And the other thing I wanted to point out, is that closing the iterator is probably the best failure straight",
        "polarity": 0.18958333333333333,
        "subjectivity": 0.34375
      },
      {
        "sentence number": 10,
        "text": " I pointed this out in the reflector",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 11,
        "text": " That, if you are using a, let's say an async iterator that also has an async version of `take`, and that's backed by a database that you want to be sure that the default state is that that database connection is dropped",
        "polarity": 0.5,
        "subjectivity": 0.8888888888888888
      },
      {
        "sentence number": 12,
        "text": " Otherwise you'll starve yourself of resources",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 13,
        "text": " And the same is true for file I/O and everything else",
        "polarity": 0.175,
        "subjectivity": 0.3875
      },
      {
        "sentence number": 14,
        "text": " So, the reality is that the only real valuable failure state that we could actually leverage is closing the iterator",
        "polarity": -0.029166666666666674,
        "subjectivity": 0.42500000000000004
      },
      {
        "sentence number": 15,
        "text": " and there are simple ways of not forwarding return, if you want to reuse this, that we could even consider modeling into the API be that through an options bag which Kevin has mentioned is something he'd rather not consider, or maybe even another method that allows you to create a non-closing iterator or something of that sort",
        "polarity": 0.0,
        "subjectivity": 0.35714285714285715
      },
      {
        "sentence number": 16,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.07173423423423424,
    "subjectivity": 0.45901437151437163,
    "keywords": [
      [
        "ecosystem",
        0.04041929621750799
      ],
      [
        "iterator",
        0.060817878454407386
      ],
      [
        "languages",
        0.07774816427944337
      ],
      [
        "consistent",
        0.12302062471942524
      ],
      [
        "thing",
        0.15826633814481617
      ],
      [
        "wrong",
        0.1584393430352759
      ],
      [
        "essentially exhausted",
        0.15999988383720626
      ],
      [
        "types of operations",
        0.17057781094311306
      ],
      [
        "essentially",
        0.17443843798093403
      ],
      [
        "exhausted or closed",
        0.17720433335442004
      ]
    ]
  },
  {
    "utterance number": 49,
    "timestamp": "2023-03-21",
    "speaker": "USA",
    "sentences": [
      {
        "sentence number": 1,
        "text": " We are past time",
        "polarity": -0.25,
        "subjectivity": 0.25
      },
      {
        "sentence number": 2,
        "text": " So, MF, what do you want to do",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " Do you want to bring this back, or\u2026",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": -0.125,
    "subjectivity": 0.125,
    "keywords": [
      [
        "past time",
        0.01859446618045681
      ],
      [
        "time",
        0.11142476118001256
      ],
      [
        "past",
        0.16383273847958243
      ],
      [
        "bring this back",
        0.23956129807083346
      ],
      [
        "back",
        0.3881970960906714
      ],
      [
        "bring",
        0.49784754196738834
      ]
    ]
  },
  {
    "utterance number": 50,
    "timestamp": "2023-03-21",
    "speaker": "MF",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I'm comfortable finishing this without further discussion and seeing if we have consensus on no rename",
        "polarity": 0.2,
        "subjectivity": 0.65
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.2,
    "subjectivity": 0.65,
    "keywords": [
      [
        "comfortable finishing",
        0.09700399286574239
      ],
      [
        "rename",
        0.15831692877998726
      ],
      [
        "comfortable",
        0.29736558256021506
      ],
      [
        "finishing",
        0.29736558256021506
      ],
      [
        "discussion",
        0.29736558256021506
      ],
      [
        "consensus",
        0.29736558256021506
      ]
    ]
  },
  {
    "utterance number": 51,
    "timestamp": "2023-03-21",
    "speaker": "KG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " We don't need consensus on not renaming",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "renaming",
        0.15831692877998726
      ],
      [
        "consensus",
        0.29736558256021506
      ]
    ]
  },
  {
    "utterance number": 52,
    "timestamp": "2023-03-21",
    "speaker": "MF",
    "sentences": [
      {
        "sentence number": 1,
        "text": " It sounds like nobody opposed keeping these names",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "opposed keeping",
        0.09700399286574239
      ],
      [
        "sounds",
        0.29736558256021506
      ],
      [
        "opposed",
        0.29736558256021506
      ],
      [
        "keeping",
        0.29736558256021506
      ]
    ]
  },
  {
    "utterance number": 53,
    "timestamp": "2023-03-21",
    "speaker": "KG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I mean I'm happy to ask if anyone opposes us moving forward in that way, it's just not something we need consensus for",
        "polarity": 0.24375000000000002,
        "subjectivity": 0.84375
      },
      {
        "sentence number": 2,
        "text": " I personally am fine with keeping the existing names and just saying that people will be confused no matter what we do, and this as Ron says is the least bad confusion possible",
        "polarity": -0.19666666666666663,
        "subjectivity": 0.6533333333333333
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": -0.07083333333333329,
    "subjectivity": 0.7077380952380953,
    "keywords": [
      [
        "opposes us moving",
        0.02249651976012989
      ],
      [
        "moving forward",
        0.02249651976012989
      ],
      [
        "happy",
        0.14832923246533666
      ],
      [
        "opposes",
        0.14832923246533666
      ],
      [
        "moving",
        0.14832923246533666
      ],
      [
        "forward",
        0.14832923246533666
      ],
      [
        "consensus",
        0.14832923246533666
      ],
      [
        "personally am fine",
        0.165573765898185
      ],
      [
        "fine with keeping",
        0.165573765898185
      ],
      [
        "keeping the existing",
        0.165573765898185
      ]
    ]
  },
  {
    "utterance number": 54,
    "timestamp": "2023-03-21",
    "speaker": "DE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " +1 to that, and we can always add either an options bag or another method, so it seems like continuing with the current proposal seems like a good way forward",
        "polarity": 0.35,
        "subjectivity": 0.5
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.35,
    "subjectivity": 0.5,
    "keywords": [
      [
        "good way forward",
        0.015380821171891606
      ],
      [
        "options bag",
        0.02570861714399338
      ],
      [
        "current proposal",
        0.02570861714399338
      ],
      [
        "method",
        0.09568045026443411
      ],
      [
        "forward",
        0.09568045026443411
      ],
      [
        "add",
        0.15831692877998726
      ],
      [
        "options",
        0.15831692877998726
      ],
      [
        "bag",
        0.15831692877998726
      ],
      [
        "continuing",
        0.15831692877998726
      ],
      [
        "current",
        0.15831692877998726
      ]
    ]
  },
  {
    "utterance number": 55,
    "timestamp": "2023-03-21",
    "speaker": "SYG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " +1",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": []
  },
  {
    "utterance number": 56,
    "timestamp": "2023-03-21",
    "speaker": "MM",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Yeah, I support not renaming",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "Yeah",
        0.04491197687864554
      ],
      [
        "support not renaming",
        0.04940384002065631
      ],
      [
        "renaming",
        0.15831692877998726
      ],
      [
        "support",
        0.29736558256021506
      ]
    ]
  },
  {
    "utterance number": 57,
    "timestamp": "2023-03-21",
    "speaker": "DE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Anybody want to express concerns",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "express concerns",
        0.04940384002065631
      ],
      [
        "concerns",
        0.15831692877998726
      ],
      [
        "express",
        0.29736558256021506
      ]
    ]
  },
  {
    "utterance number": 58,
    "timestamp": "2023-03-21",
    "speaker": "MF",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Great",
        "polarity": 0.8,
        "subjectivity": 0.75
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.8,
    "subjectivity": 0.75,
    "keywords": [
      [
        "Great",
        0.04491197687864554
      ]
    ]
  },
  {
    "utterance number": 59,
    "timestamp": "2023-03-21",
    "speaker": "PFC",
    "sentences": [
      {
        "sentence number": 1,
        "text": " (**Slide 1**) Hi everyone",
        "polarity": 0.25,
        "subjectivity": 1.0
      },
      {
        "sentence number": 2,
        "text": " It's me again",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " You heard me this morning about test262",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " My name is Philip Chimento",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " I'm going to be presenting about the Temporal proposal",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": " Unlike the presentation this morning, this work here is a partnership with Bloomberg",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 7,
        "text": " In particular, I'd like to thank JWS from Bloomberg for helping prepare the slides",
        "polarity": 0.16666666666666666,
        "subjectivity": 0.3333333333333333
      },
      {
        "sentence number": 8,
        "text": " He did a lot of work on that",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 9,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.20833333333333331,
    "subjectivity": 0.6666666666666666,
    "keywords": [
      [
        "Philip Chimento",
        0.15534859449622532
      ],
      [
        "Bloomberg",
        0.24746388711450143
      ],
      [
        "morning",
        0.3151339486074337
      ],
      [
        "Chimento",
        0.3338426257096686
      ],
      [
        "Temporal proposal",
        0.3666023470809589
      ],
      [
        "work",
        0.3722370114604571
      ],
      [
        "Slide",
        0.39750720183993143
      ],
      [
        "slides",
        0.39750720183993143
      ],
      [
        "Philip",
        0.40276572048755627
      ],
      [
        "Temporal",
        0.43497107210267405
      ]
    ]
  },
  {
    "utterance number": 60,
    "timestamp": "2023-03-21",
    "speaker": "PFC",
    "sentences": [
      {
        "sentence number": 1,
        "text": " (**Slide 2**) The purpose of today is to give a progress update",
        "polarity": 0.25,
        "subjectivity": 1.0
      },
      {
        "sentence number": 2,
        "text": " Last time In January, we talked about making a final push to resolve the issues raised during the stage 3, and we are now closer to that",
        "polarity": 0.0,
        "subjectivity": 0.5333333333333333
      },
      {
        "sentence number": 3,
        "text": " I listed a few things last time that we still needed to address and I'll have at the end of the presentation a batch of changes that I'd like to ask for consensus on that address those things",
        "polarity": -0.1,
        "subjectivity": 0.08333333333333334
      },
      {
        "sentence number": 4,
        "text": " And then I'll talk about one new issue that was raised last time during the plenary",
        "polarity": 0.06818181818181818,
        "subjectivity": 0.2606060606060606
      },
      {
        "sentence number": 5,
        "text": " So there will be a short discussion of what remains on the proposal",
        "polarity": 0.0,
        "subjectivity": 0.3
      },
      {
        "sentence number": 6,
        "text": " The other thing is that implementation has continued in several engines, and as always this has produced great feedback",
        "polarity": 0.225,
        "subjectivity": 0.375
      },
      {
        "sentence number": 7,
        "text": " We've also received feedback from people trying out the proposal using polyfills, and in particular there is a bugfix that a community member noticed and brought to our attention",
        "polarity": 0.16666666666666666,
        "subjectivity": 0.3333333333333333
      },
      {
        "sentence number": 8,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.08566919191919192,
    "subjectivity": 0.3760732323232323,
    "keywords": [
      [
        "progress update",
        0.022403194360800193
      ],
      [
        "purpose of today",
        0.026457036036648306
      ],
      [
        "give a progress",
        0.026457036036648306
      ],
      [
        "Slide",
        0.05143050644505731
      ],
      [
        "time",
        0.1035344166012898
      ],
      [
        "update",
        0.13648582289190422
      ],
      [
        "purpose",
        0.16054626499042185
      ],
      [
        "today",
        0.16054626499042185
      ],
      [
        "give",
        0.16054626499042185
      ],
      [
        "progress",
        0.16054626499042185
      ]
    ]
  },
  {
    "utterance number": 61,
    "timestamp": "2023-03-21",
    "speaker": "PFC",
    "sentences": [
      {
        "sentence number": 1,
        "text": " (**Slide 3**) Another thing I should mention is the progress of standardizing the string format in the IETF",
        "polarity": 0.25,
        "subjectivity": 1.0
      },
      {
        "sentence number": 2,
        "text": " This is something that I try to give an update on every time I present",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " So, the status that's been for the last several meetings that the document is under review by the IETF's Internet Engineering Steering Group",
        "polarity": 0.0,
        "subjectivity": 0.03333333333333333
      },
      {
        "sentence number": 4,
        "text": " As luck would have it, this morning we received editorial comments from the IETF area director for this area about the draft",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " So this is as fresh news as you're going to get on it, and the timeline that I've heard mentioned is 7 to 12 weeks from area director's evaluation before the last call",
        "polarity": 0.15,
        "subjectivity": 0.2833333333333333
      },
      {
        "sentence number": 6,
        "text": " So I don't have updated information on where that came from but that's what I heard as of this morning",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 7,
        "text": " As a reminder, we've agreed not to ship Temporal without a flag in any implementations until the standardization process has been completed for the string format",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 8,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.09166666666666667,
    "subjectivity": 0.2722222222222222,
    "keywords": [
      [
        "IETF Internet Engineering",
        0.012021182263026595
      ],
      [
        "Engineering Steering Group",
        0.01735820559495689
      ],
      [
        "Internet Engineering Steering",
        0.018821110395146074
      ],
      [
        "progress of standardizing",
        0.02166710721481054
      ],
      [
        "IETF area director",
        0.031000694822609125
      ],
      [
        "IETF Internet",
        0.043660297530089286
      ],
      [
        "Slide",
        0.05143050644505731
      ],
      [
        "standardizing the string",
        0.05302211734278868
      ],
      [
        "IETF",
        0.05550800180761477
      ],
      [
        "Steering Group",
        0.06232115321550356
      ]
    ]
  },
  {
    "utterance number": 62,
    "timestamp": "2023-03-21",
    "speaker": "PFC",
    "sentences": [
      {
        "sentence number": 1,
        "text": " (**Slide 4**) What else is left",
        "polarity": 0.125,
        "subjectivity": 0.5
      },
      {
        "sentence number": 2,
        "text": " There is the issue with the proposal allowing nanosecond precision",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " I have a bit more to say about that in the following slides",
        "polarity": 0.25,
        "subjectivity": 0.3
      },
      {
        "sentence number": 4,
        "text": " Another thing that is new since last time is that we were requested by implementations to add a host hook for HTML",
        "polarity": 0.06818181818181818,
        "subjectivity": 0.2606060606060606
      },
      {
        "sentence number": 5,
        "text": " To the best of my knowledge, this is a layering fix that doesn't require consensus from TC39, but I put links here to the PR for the proposal, and the PR for HTML, in case you're interested",
        "polarity": 0.625,
        "subjectivity": 0.4
      },
      {
        "sentence number": 6,
        "text": " Aside from these things we don't expect anything else other than editorial changes unless implementors bring up any showstoppers",
        "polarity": -0.125,
        "subjectivity": 0.375
      },
      {
        "sentence number": 7,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.22348484848484848,
    "subjectivity": 0.36624579124579126,
    "keywords": [
      [
        "allowing nanosecond precision",
        0.07313392825248764
      ],
      [
        "proposal allowing nanosecond",
        0.088868389523433
      ],
      [
        "HTML",
        0.10584432792981847
      ],
      [
        "left",
        0.1263193679723691
      ],
      [
        "hook for HTML",
        0.12679124168075226
      ],
      [
        "nanosecond precision",
        0.14928760922697754
      ],
      [
        "allowing nanosecond",
        0.17784527821198795
      ],
      [
        "proposal allowing",
        0.1788764449569552
      ],
      [
        "Slide",
        0.18007136206122093
      ],
      [
        "slides",
        0.18007136206122093
      ]
    ]
  },
  {
    "utterance number": 63,
    "timestamp": "2023-03-21",
    "speaker": "PFC",
    "sentences": [
      {
        "sentence number": 1,
        "text": " (**Slide 5**) About nanoseconds, this is very closely related to the topic of not doing unbounded integer calculations in the spec",
        "polarity": 0.15,
        "subjectivity": 0.5666666666666668
      },
      {
        "sentence number": 2,
        "text": " As we discussed last time, the problem motivating the request to go to microsecond precision is so that implementations don't have to do expensive arithmetic operations essentially on bigints",
        "polarity": -0.16666666666666666,
        "subjectivity": 0.35555555555555557
      },
      {
        "sentence number": 3,
        "text": " After investigating this and getting feedback from other implementers as well, it seems like the nanosecond precision is not the only place where we'd have to do unbounded integer arithmetic",
        "polarity": -0.0625,
        "subjectivity": 0.6875
      },
      {
        "sentence number": 4,
        "text": " It also occurs when you balance different units in a Temporal",
        "polarity": 0.0,
        "subjectivity": 0.6
      },
      {
        "sentence number": 5,
        "text": "Duration with each other",
        "polarity": -0.125,
        "subjectivity": 0.375
      },
      {
        "sentence number": 6,
        "text": " In the spec this balancing arithmetic takes place in the mathematical value domain, \u211d",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 7,
        "text": " I originally thought that this didn't matter, but ABL, who's been working on the proposal for Firefox, helpfully provided bunch of test cases for test262 showing places where it does matter",
        "polarity": 0.375,
        "subjectivity": 0.75
      },
      {
        "sentence number": 8,
        "text": " Where if you implement the calculation using floats, you'll get a different result than with integer arithmetic",
        "polarity": 0.0,
        "subjectivity": 0.6
      },
      {
        "sentence number": 9,
        "text": " None of the implementers that we've talked to liked this",
        "polarity": 0.6,
        "subjectivity": 0.8
      },
      {
        "sentence number": 10,
        "text": " And you know, it doesn't seem like a good situation to have to do BigInt arithmetic where it wouldn't be necessary",
        "polarity": 0.35,
        "subjectivity": 0.8
      },
      {
        "sentence number": 11,
        "text": " So what I mentioned earlier is that if we eliminate nanosecond precision and have the whole proposal be in microsecond precision, that won't eliminate all the places where we would have to perform bigint arithmetic in implementations or even arithmetic in 64 plus 32 bits, which is another thing we talked about",
        "polarity": 0.1,
        "subjectivity": 0.45
      },
      {
        "sentence number": 12,
        "text": " So, we did a bunch of investigation and discussion about this",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 13,
        "text": " We have a framework for a solution",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 14,
        "text": " I am not presenting it for consensus during this meeting because the details are not worked out enough to propose a spec change at this point",
        "polarity": 0.0,
        "subjectivity": 0.5
      },
      {
        "sentence number": 15,
        "text": " But it involves putting an upper bound on some of the units of durations",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 16,
        "text": " And the goal that we're trying to achieve is that all calculations have to be able to be performed with at most 64 plus 32 bit integers",
        "polarity": 0.5,
        "subjectivity": 0.5625
      },
      {
        "sentence number": 17,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.11704545454545455,
    "subjectivity": 0.5178030303030302,
    "keywords": [
      [
        "closely related",
        0.04014293667704308
      ],
      [
        "arithmetic",
        0.05245967387325891
      ],
      [
        "nanosecond precision",
        0.057802313089475275
      ],
      [
        "Slide",
        0.05948962975975175
      ],
      [
        "unbounded integer arithmetic",
        0.061295963423581935
      ],
      [
        "unbounded integer",
        0.06766558316559894
      ],
      [
        "precision",
        0.07434174965489848
      ],
      [
        "integer arithmetic",
        0.07890972640497071
      ],
      [
        "unbounded integer calculations",
        0.08788332917788061
      ],
      [
        "microsecond precision",
        0.08806846585859465
      ]
    ]
  },
  {
    "utterance number": 64,
    "timestamp": "2023-03-21",
    "speaker": "PFC",
    "sentences": [
      {
        "sentence number": 1,
        "text": " (**Slide 6**) So this slide is a bit of an illustration of what the current situation is and what changes",
        "polarity": 0.125,
        "subjectivity": 0.7
      },
      {
        "sentence number": 2,
        "text": " We perform the calculations in the mathematical value domain, like I said, and then we store them in the internal slots of Temporal",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": "Duration as a \"float64-representable integer\", which we get by taking \u211d(\ud835\udd3d(",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": ")) of the value",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": " That means that implementers can implement the storage as 64-bit floats",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 7,
        "text": " But unfortunately, it doesn't prevent the unbounded integer arithmetic from happening in the interim between when it's retrieved from and stored to a Duration object",
        "polarity": -0.5,
        "subjectivity": 1.0
      },
      {
        "sentence number": 8,
        "text": " In the framework that we're proposing for the solution, we don't want to change the storage",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 9,
        "text": " Duration units will still be stored as float64-representable integers",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 10,
        "text": " The date units are going to continue to be stored separately",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 11,
        "text": " They need to be calculated separately, because calculating with date units requires calendar operations",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 12,
        "text": " The result of having to calculate date units using calendars is that you can't freely convert date units between each other and into time units",
        "polarity": 0.1375,
        "subjectivity": 0.5875
      },
      {
        "sentence number": 13,
        "text": " So for example, if you have one month you may not convert that to 30 days because not all months are 30 days",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 14,
        "text": " You need a reference point and a calendar calculation and such",
        "polarity": 0.0,
        "subjectivity": 0.5
      },
      {
        "sentence number": 15,
        "text": " Time units, which are hours, minutes, seconds, and whatever units we choose for subseconds, are always freely convertible with each other",
        "polarity": 0.1375,
        "subjectivity": 0.5875
      },
      {
        "sentence number": 16,
        "text": " There's no calendar that says a second is actually two seconds long",
        "polarity": -0.016666666666666666,
        "subjectivity": 0.16666666666666666
      },
      {
        "sentence number": 17,
        "text": " There are leap seconds, but POSIX ignores those, JavaScript Date ignores those, we're not taking those into account",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 18,
        "text": " There's leap second smearing, there's a movement to abolish leap seconds",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 19,
        "text": " Those are all things that we are leaving outside",
        "polarity": 0.0,
        "subjectivity": 0.05
      },
      {
        "sentence number": 20,
        "text": " So the way we're going to do with time units is to convert them to a normalized form of an integer number of seconds and an integer number of sub-seconds",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 21,
        "text": " So if we were to keep the proposal at nanosecond precision, the absolute value of the subseconds would be between zero and a billion minus 1",
        "polarity": 0.05,
        "subjectivity": 0.5
      },
      {
        "sentence number": 22,
        "text": " If we would go to microsecond precision, the absolute value of the subseconds would be between zero and a million minus 1",
        "polarity": 0.05,
        "subjectivity": 0.5
      },
      {
        "sentence number": 23,
        "text": " And then we're going to place an upper bound on the absolute value of the number of seconds at `Number",
        "polarity": 0.1,
        "subjectivity": 0.45
      },
      {
        "sentence number": 24,
        "text": "MAX_SAFE_INTEGER`",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 25,
        "text": " So it's no longer possible to have a Temporal",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 26,
        "text": "Duration with any time units that, totalled together, would be equal to or longer than (`Number",
        "polarity": 0.0,
        "subjectivity": 0.25
      },
      {
        "sentence number": 27,
        "text": "MAX_SAFE_INTEGER + 1`) seconds",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 28,
        "text": " So, when we do calculations with durations, we're going to convert it to this normalized form, do the calculation, and won't have to deal with integer overflow, or precision loss, and then convert it back to the float64-representable integers for storage",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 29,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.027083333333333338,
    "subjectivity": 0.4145833333333333,
    "keywords": [
      [
        "units",
        0.03986748466347555
      ],
      [
        "Slide",
        0.04356390890724161
      ],
      [
        "date units",
        0.04670468454770709
      ],
      [
        "integer",
        0.05773560549802005
      ],
      [
        "current situation",
        0.0602459772106481
      ],
      [
        "time units",
        0.06510588207467441
      ],
      [
        "date",
        0.0789672837333002
      ],
      [
        "convert",
        0.102864125847598
      ],
      [
        "time",
        0.12956416182702707
      ],
      [
        "convert date units",
        0.13575010692198128
      ]
    ]
  },
  {
    "utterance number": 65,
    "timestamp": "2023-03-21",
    "speaker": "WH",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I'm curious \u2014 if seconds and subseconds are both integers, and I assume that they must have the same sign, what is the reason for having separate seconds and subseconds rather than just having an integral number of subseconds in the spec",
        "polarity": -0.05,
        "subjectivity": 0.5625
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": -0.05,
    "subjectivity": 0.5625,
    "keywords": [
      [
        "integral number",
        0.021113118111357788
      ],
      [
        "subseconds",
        0.0668359899064522
      ],
      [
        "number of subseconds",
        0.09334018875451443
      ],
      [
        "curious",
        0.09705179139403543
      ],
      [
        "integers",
        0.09705179139403543
      ],
      [
        "sign",
        0.09705179139403543
      ],
      [
        "spec",
        0.09705179139403543
      ],
      [
        "assume",
        0.14379350201253976
      ],
      [
        "reason",
        0.14379350201253976
      ],
      [
        "separate",
        0.14379350201253976
      ]
    ]
  },
  {
    "utterance number": 66,
    "timestamp": "2023-03-21",
    "speaker": "PFC",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Just convenience for implementers, because if we had one number then the maximum value would be larger than 64 bits",
        "polarity": 0.0,
        "subjectivity": 0.5
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.5,
    "keywords": [
      [
        "bits",
        0.04491197687864554
      ],
      [
        "convenience for implementers",
        0.04940384002065631
      ],
      [
        "implementers",
        0.15831692877998726
      ],
      [
        "convenience",
        0.29736558256021506
      ],
      [
        "number",
        0.29736558256021506
      ],
      [
        "maximum",
        0.29736558256021506
      ],
      [
        "larger",
        0.29736558256021506
      ]
    ]
  },
  {
    "utterance number": 67,
    "timestamp": "2023-03-21",
    "speaker": "WH",
    "sentences": [
      {
        "sentence number": 1,
        "text": " It would fit into a 96-bit integer, or actually, you don't even need 96, you need\u2026 something like 83 bits",
        "polarity": 0.2,
        "subjectivity": 0.25
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.2,
    "subjectivity": 0.25,
    "keywords": [
      [
        "integer",
        0.04491197687864554
      ],
      [
        "bits",
        0.04491197687864554
      ],
      [
        "fit",
        0.15831692877998726
      ]
    ]
  },
  {
    "utterance number": 68,
    "timestamp": "2023-03-21",
    "speaker": "PFC",
    "sentences": [
      {
        "sentence number": 1,
        "text": " That's right, something like that",
        "polarity": 0.2857142857142857,
        "subjectivity": 0.5357142857142857
      },
      {
        "sentence number": 2,
        "text": " It would fit generously into a 96 bit integer",
        "polarity": 0.4,
        "subjectivity": 0.4
      },
      {
        "sentence number": 3,
        "text": " We kind of expect implementers would choose to implement it this way anyway",
        "polarity": 0.6,
        "subjectivity": 0.9
      },
      {
        "sentence number": 4,
        "text": " The seconds would be a 64 bit integer and the subseconds would fit in 32 bits",
        "polarity": 0.4,
        "subjectivity": 0.4
      },
      {
        "sentence number": 5,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.4214285714285714,
    "subjectivity": 0.5589285714285714,
    "keywords": [
      [
        "bit integer",
        0.09311999677879712
      ],
      [
        "bit",
        0.1576418551303611
      ],
      [
        "fit",
        0.24898251966743992
      ],
      [
        "integer",
        0.24898251966743992
      ],
      [
        "bits",
        0.3152837102607222
      ],
      [
        "fit generously",
        0.33160877499795943
      ],
      [
        "subseconds would fit",
        0.46893706796430834
      ],
      [
        "generously",
        0.5000926971599668
      ],
      [
        "kind of expect",
        0.5425955803613685
      ],
      [
        "expect implementers",
        0.5425955803613685
      ]
    ]
  },
  {
    "utterance number": 69,
    "timestamp": "2023-03-21",
    "speaker": "WH",
    "sentences": [
      {
        "sentence number": 1,
        "text": " It's just simplifying the spec, implementers can do any implementation which is mathematically equivalent",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "simplifying the spec",
        0.04940384002065631
      ],
      [
        "mathematically equivalent",
        0.04940384002065631
      ],
      [
        "spec",
        0.15831692877998726
      ],
      [
        "implementers",
        0.15831692877998726
      ],
      [
        "equivalent",
        0.15831692877998726
      ],
      [
        "simplifying",
        0.29736558256021506
      ],
      [
        "implementation",
        0.29736558256021506
      ],
      [
        "mathematically",
        0.29736558256021506
      ]
    ]
  },
  {
    "utterance number": 70,
    "timestamp": "2023-03-21",
    "speaker": "DE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " It sounds like the clarifying question has been answered, and this is an editorial decision made by the authors, and I think that makes it non-blocking",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "editorial decision made",
        0.0042542192213185686
      ],
      [
        "makes it non-blocking",
        0.015380821171891606
      ],
      [
        "clarifying question",
        0.02570861714399338
      ],
      [
        "editorial decision",
        0.02570861714399338
      ],
      [
        "decision made",
        0.02570861714399338
      ],
      [
        "answered",
        0.09568045026443411
      ],
      [
        "authors",
        0.09568045026443411
      ],
      [
        "non-blocking",
        0.09568045026443411
      ],
      [
        "sounds",
        0.15831692877998726
      ],
      [
        "clarifying",
        0.15831692877998726
      ]
    ]
  },
  {
    "utterance number": 71,
    "timestamp": "2023-03-21",
    "speaker": "PFC",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I'd also be happy to take a look at how dramatic the difference in the specs would actually be, if we have time for that",
        "polarity": 0.12222222222222225,
        "subjectivity": 0.5666666666666668
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.12222222222222225,
    "subjectivity": 0.5666666666666668,
    "keywords": [
      [
        "dramatic the difference",
        0.02570861714399338
      ],
      [
        "happy",
        0.15831692877998726
      ],
      [
        "dramatic",
        0.15831692877998726
      ],
      [
        "difference",
        0.15831692877998726
      ],
      [
        "specs",
        0.15831692877998726
      ],
      [
        "time",
        0.15831692877998726
      ]
    ]
  },
  {
    "utterance number": 72,
    "timestamp": "2023-03-21",
    "speaker": "PFC",
    "sentences": [
      {
        "sentence number": 1,
        "text": " (**Slide 7**) The plan is to produce a detailed spec change soon",
        "polarity": 0.325,
        "subjectivity": 0.875
      },
      {
        "sentence number": 2,
        "text": " We'll check back in with the implementers and see whether it addresses the concerns",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " And at that point, we will talk about whether to keep the precision to nanoseconds or reduced precision to microseconds",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " We'll have a clearer idea of what advantages microseconds might bring, and we aim to have a decision on this by the time of the May plenary",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " And so we'll have a spec change ready that we will present for consensus at that time",
        "polarity": 0.1,
        "subjectivity": 0.25
      },
      {
        "sentence number": 6,
        "text": " If you have questions or feedback about the idea that I just presented, I'm here, and several other of the champions are here as well",
        "polarity": -0.0625,
        "subjectivity": 0.1875
      },
      {
        "sentence number": 7,
        "text": " If you have opinions on this, I would like to hear it",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 8,
        "text": " And obviously, if you're not here and you have questions, feel free to reach out online as well",
        "polarity": 0.2,
        "subjectivity": 0.65
      },
      {
        "sentence number": 9,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.125,
    "subjectivity": 0.4361111111111111,
    "keywords": [
      [
        "produce a detailed",
        0.026888015310579303
      ],
      [
        "detailed spec change",
        0.028390802576150467
      ],
      [
        "Slide",
        0.0506932360684612
      ],
      [
        "detailed spec",
        0.06395236744183443
      ],
      [
        "spec change",
        0.0800365972755676
      ],
      [
        "spec change ready",
        0.1345081601975938
      ],
      [
        "plan",
        0.16181464721710323
      ],
      [
        "produce",
        0.16181464721710323
      ],
      [
        "detailed",
        0.16181464721710323
      ],
      [
        "addresses the concerns",
        0.16450184244983868
      ]
    ]
  },
  {
    "utterance number": 73,
    "timestamp": "2023-03-21",
    "speaker": "PFC",
    "sentences": [
      {
        "sentence number": 1,
        "text": " (**Slide 8**) All this is to say, we're nearly there",
        "polarity": 0.175,
        "subjectivity": 0.7
      },
      {
        "sentence number": 2,
        "text": " The to-do list is finite and decreasing",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.175,
    "subjectivity": 0.7,
    "keywords": [
      [
        "Slide",
        0.03625524040669144
      ],
      [
        "finite and decreasing",
        0.18075564686791562
      ],
      [
        "to-do list",
        0.2766850298235749
      ],
      [
        "list is finite",
        0.2766850298235749
      ],
      [
        "decreasing",
        0.32883716426354986
      ],
      [
        "to-do",
        0.46553351027698087
      ],
      [
        "list",
        0.46553351027698087
      ],
      [
        "finite",
        0.46553351027698087
      ]
    ]
  },
  {
    "utterance number": 74,
    "timestamp": "2023-03-21",
    "speaker": "SYG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " First of all, thank you PFC and the Temporal champions for taking feedback very seriously and working on a way forward here",
        "polarity": -0.09166666666666667,
        "subjectivity": 0.6
      },
      {
        "sentence number": 2,
        "text": " I want to understand one thing",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " So for benefit for the rest of the committee, v8's position here is ideally that we would still want microseconds and bounded integer precision, hopefully just using int64s, but that seems like it's actually not on the table",
        "polarity": 0.45,
        "subjectivity": 0.55
      },
      {
        "sentence number": 4,
        "text": " Which I think I'm okay with, but I want to confirm with the champions that that is not on the table because we can't have 64 bit everywhere",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 5,
        "text": " right",
        "polarity": 0.2857142857142857,
        "subjectivity": 0.5357142857142857
      },
      {
        "sentence number": 6,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.2503968253968254,
    "subjectivity": 0.555952380952381,
    "keywords": [
      [
        "taking feedback",
        0.023974807292407186
      ],
      [
        "Temporal champions",
        0.02688360599456506
      ],
      [
        "PFC",
        0.06891803933009817
      ],
      [
        "Temporal",
        0.06891803933009817
      ],
      [
        "champions for taking",
        0.12835882436842624
      ],
      [
        "understand one thing",
        0.1429956870692725
      ],
      [
        "taking",
        0.15301461946725423
      ],
      [
        "feedback",
        0.15301461946725423
      ],
      [
        "working",
        0.15301461946725423
      ],
      [
        "forward",
        0.15301461946725423
      ]
    ]
  },
  {
    "utterance number": 75,
    "timestamp": "2023-03-21",
    "speaker": "PFC",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Unless you want to reduce the range of allowable values for Temporal duration under a limit that we think is not realistic for what we'll see in usage, then duration calculations have to be done in 96 bits and not 64",
        "polarity": -0.08333333333333333,
        "subjectivity": 0.3333333333333333
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": -0.08333333333333333,
    "subjectivity": 0.3333333333333333,
    "keywords": [
      [
        "Temporal duration",
        0.02434792863470522
      ],
      [
        "reduce the range",
        0.03346752176983843
      ],
      [
        "range of allowable",
        0.03346752176983843
      ],
      [
        "duration calculations",
        0.04877831388921351
      ],
      [
        "Temporal",
        0.09196758915656232
      ],
      [
        "usage",
        0.10987504304330521
      ],
      [
        "bits",
        0.10987504304330521
      ],
      [
        "duration",
        0.12922594861139264
      ],
      [
        "reduce",
        0.17995476918065306
      ],
      [
        "range",
        0.17995476918065306
      ]
    ]
  },
  {
    "utterance number": 76,
    "timestamp": "2023-03-21",
    "speaker": "SYG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Thanks",
        "polarity": 0.2,
        "subjectivity": 0.2
      },
      {
        "sentence number": 2,
        "text": " And then, the second part is the 64 plus 32 thing",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " The background there is that we're looking around at how other duration libraries represent nanosecond precision time",
        "polarity": -0.125,
        "subjectivity": 0.375
      },
      {
        "sentence number": 4,
        "text": " And in particular, abseil, the C++ library uses this system uses an int64 to represent seconds and an additional 32 bits to represent sub seconds",
        "polarity": 0.16666666666666666,
        "subjectivity": 0.3333333333333333
      },
      {
        "sentence number": 5,
        "text": " In particular",
        "polarity": 0.16666666666666666,
        "subjectivity": 0.3333333333333333
      },
      {
        "sentence number": 6,
        "text": " I think they represent quarter nanoseconds or something like that, which is what could fit in",
        "polarity": 0.4,
        "subjectivity": 0.4
      },
      {
        "sentence number": 7,
        "text": " So I understand the detailed specs are not worked out here",
        "polarity": 0.4,
        "subjectivity": 0.75
      },
      {
        "sentence number": 8,
        "text": " I'm wondering what the implementation strategy is with the current plan from the champions",
        "polarity": 0.0,
        "subjectivity": 0.4
      },
      {
        "sentence number": 9,
        "text": " Does it basically lock all implementations into int64 plus 32 representation, even if you don't want an optimized implementation off the bat, is the choice still that if you don't want an optimized implementation, you still just do everything bigint because obviously, that's big enough",
        "polarity": 0.0,
        "subjectivity": 0.3666666666666667
      },
      {
        "sentence number": 10,
        "text": " But if you do, there's a very clearly understood way to do an optimized thing and that's 64 plus 32",
        "polarity": 0.13000000000000003,
        "subjectivity": 0.4983333333333333
      },
      {
        "sentence number": 11,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.1115277777777778,
    "subjectivity": 0.3658333333333333,
    "keywords": [
      [
        "represent",
        0.10782733761520381
      ],
      [
        "optimized",
        0.15965169189411088
      ],
      [
        "optimized implementation",
        0.17354176954764847
      ],
      [
        "implementation",
        0.17931782113939643
      ],
      [
        "libraries represent nanosecond",
        0.23700545073516957
      ],
      [
        "represent nanosecond precision",
        0.2370054507351696
      ],
      [
        "duration libraries represent",
        0.25652216404623895
      ],
      [
        "thing",
        0.27636385754169507
      ],
      [
        "represent nanosecond",
        0.28493909622306074
      ],
      [
        "nanosecond precision time",
        0.2928395232673475
      ]
    ]
  },
  {
    "utterance number": 77,
    "timestamp": "2023-03-21",
    "speaker": "PFC",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Right",
        "polarity": 0.2857142857142857,
        "subjectivity": 0.5357142857142857
      },
      {
        "sentence number": 2,
        "text": " I don't think it obligates you to use 64 plus 32",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " In particular, I believe, although I'll need to confirm this when we actually go to work out the details, I believe it should be possible to create a polyfill for this with two JS numbers instead of 64 and 32 bit integers",
        "polarity": 0.05555555555555555,
        "subjectivity": 0.4777777777777778
      },
      {
        "sentence number": 4,
        "text": " But I'm not 100% sure about that",
        "polarity": 0.5,
        "subjectivity": 0.8888888888888888
      },
      {
        "sentence number": 5,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.19047619047619047,
    "subjectivity": 0.5715873015873016,
    "keywords": [
      [
        "bit integers",
        0.14335958833802853
      ],
      [
        "create a polyfill",
        0.22339975553391492
      ],
      [
        "obligates",
        0.33869541996442376
      ],
      [
        "details",
        0.3540967604664963
      ],
      [
        "bit",
        0.3540967604664963
      ],
      [
        "integers",
        0.3540967604664963
      ],
      [
        "confirm",
        0.4273238692211767
      ],
      [
        "work",
        0.4273238692211767
      ],
      [
        "create",
        0.4273238692211767
      ],
      [
        "polyfill",
        0.4273238692211767
      ]
    ]
  },
  {
    "utterance number": 78,
    "timestamp": "2023-03-21",
    "speaker": "SYG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Alright",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " I think that clarifies my questions",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " Thank you",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "Alright",
        0.06588837669267192
      ],
      [
        "questions",
        0.4949246952252326
      ],
      [
        "clarifies my questions",
        0.5162806230574593
      ],
      [
        "clarifies",
        0.68796622281612
      ]
    ]
  },
  {
    "utterance number": 79,
    "timestamp": "2023-03-21",
    "speaker": "DE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " So I think I'm very happy with this framework",
        "polarity": 1.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 2,
        "text": " I want to say at Bloomberg we have a moderate preference for the expressiveness of nanoseconds",
        "polarity": 0.0,
        "subjectivity": 0.7
      },
      {
        "sentence number": 3,
        "text": " There are number of publicly available financial data feeds that are expressed in nanoseconds, and it would be great if we didn't have to worry about whether this would be representable in Temporal units",
        "polarity": 0.4000000000000001,
        "subjectivity": 0.3833333333333333
      },
      {
        "sentence number": 4,
        "text": " That said microseconds are already pretty small, most of the things that you want to display to users are microseconds or coarser, so it might not be the end of the world",
        "polarity": 0.16666666666666666,
        "subjectivity": 0.6333333333333333
      },
      {
        "sentence number": 5,
        "text": " Anyway, I think the biggest problem was the bigint overflow, and then I get the feeling that the 64 plus 32 thing will be suitable, so I don't see a reason to coarsen precision to microseconds",
        "polarity": 0.55,
        "subjectivity": 0.75
      },
      {
        "sentence number": 6,
        "text": " and so I'm very happy with what was proposed here, once the details are worked out",
        "polarity": 1.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 7,
        "text": " But it also wouldn't be the end of the world, like Temporal is completely unusable, if we went to microseconds",
        "polarity": 0.1,
        "subjectivity": 0.4
      },
      {
        "sentence number": 8,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.39545454545454545,
    "subjectivity": 0.6272727272727273,
    "keywords": [
      [
        "framework",
        0.12597690277497828
      ],
      [
        "Temporal units",
        0.1280987539960683
      ],
      [
        "nanoseconds",
        0.13425789003596983
      ],
      [
        "Temporal",
        0.13462422526841358
      ],
      [
        "microseconds",
        0.14122581821599076
      ],
      [
        "happy",
        0.14985310759537865
      ],
      [
        "moderate preference",
        0.1586911020809215
      ],
      [
        "world",
        0.16890432372873038
      ],
      [
        "financial data feeds",
        0.1757648126058938
      ],
      [
        "end",
        0.18724648384666825
      ]
    ]
  },
  {
    "utterance number": 80,
    "timestamp": "2023-03-21",
    "speaker": "WH",
    "sentences": [
      {
        "sentence number": 1,
        "text": " For this I would like us to have the simplest spec and just let implementations pick whatever implementation suits them, be it a single integer or separate integers for seconds and subseconds",
        "polarity": -0.07142857142857142,
        "subjectivity": 0.21428571428571427
      },
      {
        "sentence number": 2,
        "text": " If we specify it as a single integer, it's fairly obvious how an implementation can split it into seconds and sub seconds \u2014 there are time libraries that do just that",
        "polarity": -0.03571428571428571,
        "subjectivity": 0.35714285714285715
      },
      {
        "sentence number": 3,
        "text": " If we specify it as a separate seconds and subseconds, it's not obvious how an implementation could do this using a single integer, and it's very easy to get the spec wrong, particularly in the areas where you need to transfer carries and signs between arithmetic on one of the numbers to the other",
        "polarity": 0.005595238095238102,
        "subjectivity": 0.5537698412698413
      },
      {
        "sentence number": 4,
        "text": " The overflow boundary conditions can get quite tricky where you might get cases where something overflows when it shouldn't",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " So, I definitely want implementations to be able to use separate integers for seconds and subseconds, but I would like to specify it as the simpler variant of just having an integral number of whatever your subsecond units are",
        "polarity": 0.25,
        "subjectivity": 0.5625
      },
      {
        "sentence number": 6,
        "text": " It just makes the spec much simpler",
        "polarity": 0.2,
        "subjectivity": 0.2
      },
      {
        "sentence number": 7,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.04922619047619048,
    "subjectivity": 0.46468253968253975,
    "keywords": [
      [
        "single integer",
        0.023263610510814513
      ],
      [
        "separate integers",
        0.06476445633561424
      ],
      [
        "single",
        0.07705197487807453
      ],
      [
        "implementations pick",
        0.08413995695643335
      ],
      [
        "implementation suits",
        0.08413995695643335
      ],
      [
        "simplest spec",
        0.09142755073168451
      ],
      [
        "integer",
        0.0940747813254917
      ],
      [
        "implementation",
        0.12548401391060557
      ],
      [
        "subseconds",
        0.1294301120121905
      ],
      [
        "spec",
        0.13544208816840772
      ]
    ]
  },
  {
    "utterance number": 81,
    "timestamp": "2023-03-21",
    "speaker": "PFC",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I think that's a fair concern",
        "polarity": 0.7,
        "subjectivity": 0.9
      },
      {
        "sentence number": 2,
        "text": " I will say it might not be as obvious as you think how to split it up, because we have actually had comments from implementers on something similar, where they didn't realize that the spec allowed them to split a large integer into smaller integers, but I think maybe we can solve that with a note, or something like that",
        "polarity": 0.04285714285714286,
        "subjectivity": 0.38571428571428573
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.15238095238095237,
    "subjectivity": 0.47142857142857136,
    "keywords": [
      [
        "fair concern",
        0.01715967730884209
      ],
      [
        "concern",
        0.1108458198469406
      ],
      [
        "fair",
        0.15219509685315077
      ],
      [
        "comments from implementers",
        0.1729986616150615
      ],
      [
        "spec allowed",
        0.1729986616150615
      ],
      [
        "split",
        0.1750126182268378
      ],
      [
        "large integer",
        0.18846750632540282
      ],
      [
        "smaller integers",
        0.18846750632540282
      ],
      [
        "similar",
        0.30214742496739144
      ],
      [
        "note",
        0.30214742496739144
      ]
    ]
  },
  {
    "utterance number": 82,
    "timestamp": "2023-03-21",
    "speaker": "WH",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Yeah, just add a note",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " It's challenging to mathematically separate integers and get all the boundary cases",
        "polarity": 0.25,
        "subjectivity": 0.5
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.25,
    "subjectivity": 0.5,
    "keywords": [
      [
        "Yeah",
        0.05899937629682816
      ],
      [
        "add a note",
        0.07796891081290885
      ],
      [
        "note",
        0.2005079697193566
      ],
      [
        "add",
        0.36073110501666333
      ],
      [
        "boundary cases",
        0.4456055016437946
      ],
      [
        "cases",
        0.46553351027698087
      ],
      [
        "challenging",
        0.6621399683957523
      ],
      [
        "mathematically",
        0.6621399683957523
      ],
      [
        "separate",
        0.6621399683957523
      ],
      [
        "integers",
        0.6621399683957523
      ]
    ]
  },
  {
    "utterance number": 83,
    "timestamp": "2023-03-21",
    "speaker": "DE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " The rest of the Temporal spec is also challenging mathematically",
        "polarity": 0.25,
        "subjectivity": 0.5
      },
      {
        "sentence number": 2,
        "text": " I have a reply here",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " You're making an interesting editorial suggestion which I'm not necessarily opposed to, but also do you have an opinion on the semantics or the framework for the semantics proposed about the limits, maybe sticking with nanoseconds",
        "polarity": 0.25,
        "subjectivity": 0.75
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.25,
    "subjectivity": 0.625,
    "keywords": [
      [
        "Temporal spec",
        0.008385279838706914
      ],
      [
        "challenging mathematically",
        0.013566390327266508
      ],
      [
        "Temporal",
        0.06387368851724758
      ],
      [
        "mathematically",
        0.1028118182922121
      ],
      [
        "rest",
        0.13018743405097755
      ],
      [
        "spec",
        0.13018743405097755
      ],
      [
        "challenging",
        0.13018743405097755
      ],
      [
        "interesting editorial suggestion",
        0.13276083202931918
      ],
      [
        "semantics",
        0.18016480086216616
      ],
      [
        "semantics proposed",
        0.18383564336907135
      ]
    ]
  },
  {
    "utterance number": 84,
    "timestamp": "2023-03-21",
    "speaker": "WH",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I'm not quite sure what you're asking me",
        "polarity": 0.5,
        "subjectivity": 0.8888888888888888
      },
      {
        "sentence number": 2,
        "text": " I would not be in favor of having this work with times with up to a googol seconds",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " So we definitely need to have some limits",
        "polarity": 0.0,
        "subjectivity": 0.5
      },
      {
        "sentence number": 4,
        "text": " And 53 plus 30 bits, or anything like that, is reasonable",
        "polarity": 0.2,
        "subjectivity": 0.6
      },
      {
        "sentence number": 5,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.2333333333333333,
    "subjectivity": 0.662962962962963,
    "keywords": [
      [
        "bits",
        0.31813151393529204
      ],
      [
        "work with times",
        0.35350894161299157
      ],
      [
        "limits",
        0.4613789858464135
      ],
      [
        "favor",
        0.5110573480904945
      ],
      [
        "work",
        0.5110573480904945
      ],
      [
        "times",
        0.5110573480904945
      ],
      [
        "googol",
        0.5110573480904945
      ],
      [
        "reasonable",
        0.5121371841744414
      ]
    ]
  },
  {
    "utterance number": 85,
    "timestamp": "2023-03-21",
    "speaker": "DE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Great",
        "polarity": 0.8,
        "subjectivity": 0.75
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.8,
    "subjectivity": 0.75,
    "keywords": [
      [
        "Great",
        0.04491197687864554
      ]
    ]
  },
  {
    "utterance number": 86,
    "timestamp": "2023-03-21",
    "speaker": "WH",
    "sentences": [
      {
        "sentence number": 1,
        "text": " The thing I care more about are identities such as addition is commutative and associative",
        "polarity": 0.25,
        "subjectivity": 0.5
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.25,
    "subjectivity": 0.5,
    "keywords": [
      [
        "commutative and associative",
        0.04940384002065631
      ],
      [
        "thing I care",
        0.09700399286574239
      ],
      [
        "addition is commutative",
        0.09700399286574239
      ],
      [
        "associative",
        0.15831692877998726
      ],
      [
        "thing",
        0.29736558256021506
      ],
      [
        "care",
        0.29736558256021506
      ],
      [
        "identities",
        0.29736558256021506
      ],
      [
        "addition",
        0.29736558256021506
      ],
      [
        "commutative",
        0.29736558256021506
      ]
    ]
  },
  {
    "utterance number": 87,
    "timestamp": "2023-03-21",
    "speaker": "SYG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I get where you're coming from WH, but speaking from experience of trying to review a lot of implementations here, and just given the sheer size of Temporal, I would lean the other way for editorial direction",
        "polarity": -0.0625,
        "subjectivity": 0.5625
      },
      {
        "sentence number": 2,
        "text": " I would be more comfortable that if everyone has agreed on the bounds and number of bits to represent these, and what a good representation ought to be",
        "polarity": 0.5333333333333333,
        "subjectivity": 0.6333333333333334
      },
      {
        "sentence number": 3,
        "text": " Now, rather that the spec gets that right, once in spec correctly, then to lean on implementations to interpret, what the optimization representation could be",
        "polarity": 0.2857142857142857,
        "subjectivity": 0.5357142857142857
      },
      {
        "sentence number": 4,
        "text": " Just the sheer size of this proposal I think means in practice that implementations are going to be implementing the spec literally step-by-step",
        "polarity": 0.0,
        "subjectivity": 0.75
      },
      {
        "sentence number": 5,
        "text": " It is just impossible to review otherwise, like, I don't know how - like if somebody came to V8 and was like here is an optimized representation of Duration and all the math operations, I would just reject it",
        "polarity": -0.6666666666666666,
        "subjectivity": 1.0
      },
      {
        "sentence number": 6,
        "text": " If it was not step to spec step mappable in a way that I can actually review",
        "polarity": 0.0,
        "subjectivity": 0.1
      },
      {
        "sentence number": 7,
        "text": " As a software engineer I don't know what we're going to do if it's spec'd in such a way that it's not obvious to review",
        "polarity": 0.0,
        "subjectivity": 0.5
      },
      {
        "sentence number": 8,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.09945887445887447,
    "subjectivity": 0.5827922077922078,
    "keywords": [
      [
        "size of Temporal",
        0.02093242051868659
      ],
      [
        "editorial direction",
        0.03032349514033714
      ],
      [
        "speaking from experience",
        0.03477243819445561
      ],
      [
        "sheer size",
        0.06009062290510137
      ],
      [
        "Temporal",
        0.06259624091044756
      ],
      [
        "spec",
        0.08831401672699575
      ],
      [
        "review",
        0.1042117967441552
      ],
      [
        "implementations",
        0.13099619032254445
      ],
      [
        "representation",
        0.13099619032254445
      ],
      [
        "direction",
        0.16055007333552834
      ]
    ]
  },
  {
    "utterance number": 88,
    "timestamp": "2023-03-21",
    "speaker": "WH",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I strongly disagree with that position in general",
        "polarity": 0.24166666666666664,
        "subjectivity": 0.6166666666666667
      },
      {
        "sentence number": 2,
        "text": " What we need is a limit on how high the number of seconds and subseconds can be",
        "polarity": 0.16,
        "subjectivity": 0.5399999999999999
      },
      {
        "sentence number": 3,
        "text": " I don't want to have to deal with edge cases in which you have a number of sub seconds greater than a second, dealing with opposite signs and stuff like this",
        "polarity": 0.16666666666666666,
        "subjectivity": 0.16666666666666666
      },
      {
        "sentence number": 4,
        "text": " It just creates unnecessary spec complexity",
        "polarity": -0.4,
        "subjectivity": 0.9
      },
      {
        "sentence number": 5,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.10619047619047618,
    "subjectivity": 0.4533333333333333,
    "keywords": [
      [
        "position in general",
        0.02866333111144328
      ],
      [
        "strongly disagree",
        0.04208842686297173
      ],
      [
        "general",
        0.1386514262882736
      ],
      [
        "strongly",
        0.20096899482830347
      ],
      [
        "disagree",
        0.20096899482830347
      ],
      [
        "position",
        0.20096899482830347
      ],
      [
        "number",
        0.2200385506896954
      ],
      [
        "dealing with opposite",
        0.3357790511488515
      ],
      [
        "spec complexity",
        0.437579268959645
      ],
      [
        "dealing",
        0.44888829491232735
      ]
    ]
  },
  {
    "utterance number": 89,
    "timestamp": "2023-03-21",
    "speaker": "SYG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " There might be a way to thread the needle, but there's nothing which says that you must Implement seconds and subseconds using two separate integers",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " You could just use 96 bits arithmetic and it's so often faster and simpler",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "thread the needle",
        0.015099935621315529
      ],
      [
        "separate integers",
        0.015099935621315529
      ],
      [
        "Implement",
        0.07621084492189614
      ],
      [
        "needle",
        0.10028582371075691
      ],
      [
        "integers",
        0.10028582371075691
      ],
      [
        "bits arithmetic",
        0.11755105063023073
      ],
      [
        "faster and simpler",
        0.11755105063023073
      ],
      [
        "thread",
        0.14832923246533666
      ],
      [
        "subseconds",
        0.14832923246533666
      ],
      [
        "separate",
        0.14832923246533666
      ]
    ]
  },
  {
    "utterance number": 90,
    "timestamp": "2023-03-21",
    "speaker": "DE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " So I want to propose that for next steps on this interesting topic, the editors have this regular open call opened to all delegates, you continue the discussion there",
        "polarity": 0.125,
        "subjectivity": 0.2692307692307692
      },
      {
        "sentence number": 2,
        "text": " I think we can trust the editors to ultimately make it a good call on this editorial decision based on inputs like this",
        "polarity": 0.35,
        "subjectivity": 0.8
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.19999999999999998,
    "subjectivity": 0.4461538461538461,
    "keywords": [
      [
        "regular open call",
        0.0065544811670583784
      ],
      [
        "open call opened",
        0.006554481167058379
      ],
      [
        "interesting topic",
        0.016281477206089707
      ],
      [
        "regular open",
        0.02251957186859842
      ],
      [
        "continue the discussion",
        0.02251957186859842
      ],
      [
        "open call",
        0.041853325258122104
      ],
      [
        "call opened",
        0.041853325258122104
      ],
      [
        "editorial decision based",
        0.07873781895243948
      ],
      [
        "trust the editors",
        0.09102968695966035
      ],
      [
        "topic",
        0.10795320618316272
      ]
    ]
  },
  {
    "utterance number": 91,
    "timestamp": "2023-03-21",
    "speaker": "WH",
    "sentences": [
      {
        "sentence number": 1,
        "text": " It's not just an editorial call",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " It's also a correctness issue",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "editorial call",
        0.02541909697430123
      ],
      [
        "call",
        0.12363091320521931
      ],
      [
        "correctness issue",
        0.18075564686791562
      ],
      [
        "editorial",
        0.2005079697193566
      ],
      [
        "issue",
        0.32883716426354986
      ],
      [
        "correctness",
        0.46553351027698087
      ]
    ]
  },
  {
    "utterance number": 92,
    "timestamp": "2023-03-21",
    "speaker": "DE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " This spec has to be correct",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "correct",
        0.15831692877998726
      ],
      [
        "spec",
        0.29736558256021506
      ]
    ]
  },
  {
    "utterance number": 93,
    "timestamp": "2023-03-21",
    "speaker": "WH",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Yeah, the spec has to be correct",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " It is my main concern",
        "polarity": 0.16666666666666666,
        "subjectivity": 0.3333333333333333
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.16666666666666666,
    "subjectivity": 0.3333333333333333,
    "keywords": [
      [
        "Yeah",
        0.05899937629682816
      ],
      [
        "correct",
        0.2005079697193566
      ],
      [
        "spec",
        0.36073110501666333
      ],
      [
        "main concern",
        0.4456055016437946
      ],
      [
        "concern",
        0.46553351027698087
      ],
      [
        "main",
        0.6621399683957523
      ]
    ]
  },
  {
    "utterance number": 94,
    "timestamp": "2023-03-21",
    "speaker": "DE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I think the point has been registered and we could move on",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "point",
        0.29736558256021506
      ],
      [
        "registered",
        0.29736558256021506
      ],
      [
        "move",
        0.29736558256021506
      ]
    ]
  },
  {
    "utterance number": 95,
    "timestamp": "2023-03-21",
    "speaker": "JGT",
    "sentences": [
      {
        "sentence number": 1,
        "text": " So first just a note, this is not necessarily related to the size constraints",
        "polarity": 0.125,
        "subjectivity": 0.3666666666666667
      },
      {
        "sentence number": 2,
        "text": " But one thing that wasn't immediately obvious while designing the duration type, but now is fairly obvious, is that a very large percentage of durations are going to have one unit in them, right",
        "polarity": 0.14107142857142857,
        "subjectivity": 0.5232142857142857
      },
      {
        "sentence number": 3,
        "text": " And so there may be some significant storage optimization opportunities for durations, especially if they're sort of, lots of them are being created And so, as implementers are sort of giving feedback on the bounds they might also be wanting to think about what, use cases are likely for durations, and perhaps to think about an optimised path for single-unit duration",
        "polarity": 0.125,
        "subjectivity": 0.9583333333333334
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.13214285714285715,
    "subjectivity": 0.6334656084656084,
    "keywords": [
      [
        "size constraints",
        0.0250401773416599
      ],
      [
        "necessarily related",
        0.032716219215860494
      ],
      [
        "note",
        0.1372478203926793
      ],
      [
        "constraints",
        0.1372478203926793
      ],
      [
        "durations",
        0.16520922388171513
      ],
      [
        "necessarily",
        0.17798813639324512
      ],
      [
        "related",
        0.17798813639324512
      ],
      [
        "size",
        0.17798813639324512
      ],
      [
        "duration type",
        0.2141563063075358
      ],
      [
        "obvious",
        0.21797164430447846
      ]
    ]
  },
  {
    "utterance number": 96,
    "timestamp": "2023-03-21",
    "speaker": "CDA",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Okay",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 2,
        "text": " we have about 12-13 minutes left",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " So PFC, do you want to continue",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.25,
    "subjectivity": 0.25,
    "keywords": [
      [
        "PFC",
        0.36348788044697095
      ],
      [
        "left",
        0.4949246952252326
      ],
      [
        "minutes left",
        0.5162806230574593
      ],
      [
        "continue",
        0.5880798524606783
      ],
      [
        "12-13",
        0.68796622281612
      ],
      [
        "minutes",
        0.68796622281612
      ],
      [
        "12-13 minutes left",
        0.7455031627189532
      ],
      [
        "12-13 minutes",
        0.8986050855370177
      ]
    ]
  },
  {
    "utterance number": 97,
    "timestamp": "2023-03-21",
    "speaker": "PFC",
    "sentences": [
      {
        "sentence number": 1,
        "text": " (**Slide 9**) OK, I'll run through the normative changes quickly",
        "polarity": 0.3611111111111111,
        "subjectivity": 0.6666666666666666
      },
      {
        "sentence number": 2,
        "text": " There are only five this time",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 3,
        "text": " Like I said, the todo list is finite and decreasing",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.2708333333333333,
    "subjectivity": 0.75,
    "keywords": [
      [
        "normative changes quickly",
        0.03107735477427921
      ],
      [
        "Slide",
        0.03874456518394107
      ],
      [
        "quickly",
        0.13696809108329627
      ],
      [
        "run",
        0.2200560909321288
      ],
      [
        "normative",
        0.2200560909321288
      ],
      [
        "finite and decreasing",
        0.35487136790899465
      ],
      [
        "time",
        0.3553358554145339
      ],
      [
        "decreasing",
        0.44538603402402266
      ],
      [
        "todo list",
        0.5286731219590494
      ],
      [
        "list is finite",
        0.5286731219590494
      ]
    ]
  },
  {
    "utterance number": 98,
    "timestamp": "2023-03-21",
    "speaker": "PFC",
    "sentences": [
      {
        "sentence number": 1,
        "text": " (**Slide 10**) This is one [fix time zone formatting in ZonedDateTime] that I presented last time and didn't achieve consensus because more time was needed for review",
        "polarity": 0.25,
        "subjectivity": 0.5222222222222223
      },
      {
        "sentence number": 2,
        "text": " So during our review, we had discussion with TG2, and FYT raised some concerns about the proposed solution, and ultimately we were not able to get to a position where the PR proposed last time would be able to achieve consensus in plenary",
        "polarity": 0.0625,
        "subjectivity": 0.5791666666666666
      },
      {
        "sentence number": 3,
        "text": " So we came up with an alternate design, which we believe addresses the concerns we heard, while still allowing the toLocaleString method of Temporal to be used, although passing one to the format method or the other methods of a DateTimeFormat, like in this code sample, will throw",
        "polarity": -0.0625,
        "subjectivity": 0.1875
      },
      {
        "sentence number": 4,
        "text": " This is a temporary solution to allow toLocaleString to be used, and we hope that in a follow-up proposal we will be able to find a solution that everybody's happy with, that will allow a ZonedDateTime to be used with the other methods of DateTimeFormat",
        "polarity": 0.39166666666666666,
        "subjectivity": 0.6666666666666666
      },
      {
        "sentence number": 5,
        "text": " You'll notice at the bottom of the slide, it says \"late PR\", as we had part of this discussion after the agenda deadline",
        "polarity": -0.3,
        "subjectivity": 0.6
      },
      {
        "sentence number": 6,
        "text": " So you should note that unlike the other PRs I'm presenting, this one was added quite recently",
        "polarity": -0.0625,
        "subjectivity": 0.3125
      },
      {
        "sentence number": 7,
        "text": " If you need more time to review it, I'm here available to talk it through with anybody who has questions",
        "polarity": 0.45,
        "subjectivity": 0.45
      },
      {
        "sentence number": 8,
        "text": " And in case people are not ready to lend it consensus today, perhaps we could have a short item on that at the end of the meeting",
        "polarity": -0.05,
        "subjectivity": 0.4
      },
      {
        "sentence number": 9,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.1276315789473684,
    "subjectivity": 0.48333333333333334,
    "keywords": [
      [
        "fix time zone",
        0.0068770117837147005
      ],
      [
        "time zone formatting",
        0.0077717399000566635
      ],
      [
        "achieve consensus",
        0.030212613981854142
      ],
      [
        "zone formatting",
        0.030617824093023025
      ],
      [
        "fix time",
        0.03763533693912946
      ],
      [
        "time zone",
        0.04243963270548349
      ],
      [
        "time",
        0.047240268845233704
      ],
      [
        "consensus",
        0.08590242211231776
      ],
      [
        "FYT raised",
        0.09092203742367738
      ],
      [
        "review",
        0.09297602555392823
      ]
    ]
  },
  {
    "utterance number": 99,
    "timestamp": "2023-03-21",
    "speaker": "PFC",
    "sentences": [
      {
        "sentence number": 1,
        "text": " (**Slide 11**) Right",
        "polarity": 0.26785714285714285,
        "subjectivity": 0.7678571428571428
      },
      {
        "sentence number": 2,
        "text": " We have a pull request auditing the callers of MakeDay and MakeDate and TimeFromYear for possibly out of range values",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 3,
        "text": " This actually stems from an existing bug report in the tc93/ecma262 repository about how the operation MakeDay is not precise about when it returns NaN",
        "polarity": -0.1,
        "subjectivity": 0.45
      },
      {
        "sentence number": 4,
        "text": " This affected some of the operations in Temporal, which asserted that NaN was not returned from that operation, but that may not be correct",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " So, rather than complicate the spec with having a bunch of code paths handle NaN separately, we would like to put mathematical value versions of at least MakeDay and other similar operations, which hopefully when we get more clarity on what the operations in ecma262 we could recombine in the future",
        "polarity": 0.012500000000000002,
        "subjectivity": 0.3
      },
      {
        "sentence number": 6,
        "text": " But this at least makes the semantics clear and removes ambiguity without complicating the spec too much",
        "polarity": 1.850371707708594e-17,
        "subjectivity": 0.3277777777777778
      },
      {
        "sentence number": 7,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.029336734693877552,
    "subjectivity": 0.44421768707482995,
    "keywords": [
      [
        "Slide",
        0.052926421459806514
      ],
      [
        "pull request auditing",
        0.11603531181583078
      ],
      [
        "operations",
        0.11819556643242074
      ],
      [
        "MakeDay",
        0.11994131513617547
      ],
      [
        "operation MakeDay",
        0.14624844678276758
      ],
      [
        "operation",
        0.17729334964863108
      ],
      [
        "pull request",
        0.21017211146202536
      ],
      [
        "request auditing",
        0.21017211146202536
      ],
      [
        "auditing the callers",
        0.21017211146202536
      ],
      [
        "MakeDate and TimeFromYear",
        0.21017211146202536
      ]
    ]
  },
  {
    "utterance number": 100,
    "timestamp": "2023-03-21",
    "speaker": "JGT",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Hey, PFC, could you back up two slides",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " (**Slide 9**) Just to clarify on this, the current behavior in the spec that we're trying to fix is what's shown in this code sample, right",
        "polarity": 0.17857142857142858,
        "subjectivity": 0.6452380952380952
      },
      {
        "sentence number": 3,
        "text": " So the illustration of this code sample is that it's really bad to return different results from toLocaleString than from DateTimeFormat",
        "polarity": -0.3499999999999999,
        "subjectivity": 0.6333333333333333
      },
      {
        "sentence number": 4,
        "text": "format",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " That's the problem to be solved",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": " The solution that we're planning is essentially to have that second line of code throw, right",
        "polarity": 0.09523809523809523,
        "subjectivity": 0.2785714285714285
      },
      {
        "sentence number": 7,
        "text": " So we're not proposing what's here, but the PR behavior is just to throw in the second case and then come back at some point in the future with a better solution for date-time format",
        "polarity": 0.125,
        "subjectivity": 0.15625
      },
      {
        "sentence number": 8,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.04780219780219781,
    "subjectivity": 0.3586996336996337,
    "keywords": [
      [
        "PFC",
        0.05145963376487096
      ],
      [
        "code sample",
        0.06358345611655518
      ],
      [
        "code",
        0.10910090882894417
      ],
      [
        "Hey",
        0.11363869485461418
      ],
      [
        "slides",
        0.13767840692454705
      ],
      [
        "Slide",
        0.13767840692454705
      ],
      [
        "sample",
        0.17234801102992028
      ],
      [
        "code throw",
        0.2041256211595997
      ],
      [
        "back",
        0.22498191151713753
      ],
      [
        "behavior",
        0.23606519302200488
      ]
    ]
  },
  {
    "utterance number": 101,
    "timestamp": "2023-03-21",
    "speaker": "PFC",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Looking at this slide, I see wasn't wasn't entirely clear, you're right about that",
        "polarity": 0.19285714285714287,
        "subjectivity": 0.4595238095238095
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.19285714285714287,
    "subjectivity": 0.4595238095238095,
    "keywords": [
      [
        "slide",
        0.09568045026443411
      ],
      [
        "clear",
        0.09568045026443411
      ]
    ]
  },
  {
    "utterance number": 102,
    "timestamp": "2023-03-21",
    "speaker": "PFC",
    "sentences": [
      {
        "sentence number": 1,
        "text": " (**Slide 12**) All right, back to RGN's PR (#2500)",
        "polarity": 0.17857142857142858,
        "subjectivity": 0.5119047619047619
      },
      {
        "sentence number": 2,
        "text": " This is a follow-up to an issue that we discussed in plenary last time about when exactly property bags are validated and how, when you pass a property bag to a calendar operation",
        "polarity": 0.125,
        "subjectivity": 0.15833333333333333
      },
      {
        "sentence number": 3,
        "text": " This switches the order of things around a little bit to make sure that all the validation of calendar specific properties, like `era` and `eraYear`, is handled in calendar code, and so if you don't support other calendars than ISO 8601 then `era` and `eraYear` do not appear in the spec that you have to implement",
        "polarity": 0.046875,
        "subjectivity": 0.4722222222222222
      },
      {
        "sentence number": 4,
        "text": " So this has a couple of very subtle changes to the order in which certain properties are accessed, but the main visible consequence is what you see in this code sample below",
        "polarity": -0.01746031746031747,
        "subjectivity": 0.5182539682539683
      },
      {
        "sentence number": 5,
        "text": " The first two calls to `PlainMonthDay",
        "polarity": 0.25,
        "subjectivity": 0.3333333333333333
      },
      {
        "sentence number": 6,
        "text": "from` are unchanged",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 7,
        "text": " If you if you put a month, day, and year that don't form an existing date, that will throw; if you put a monthCode and and a date that exists in any year, that works",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 8,
        "text": " So that doesn't change",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 9,
        "text": " If you have monthCode, day, and year, and that forms a date that doesn't exist, previously we would consider the third call here as equivalent to the second call",
        "polarity": -0.05555555555555555,
        "subjectivity": 0.05555555555555555
      },
      {
        "sentence number": 10,
        "text": " What has changed here is that it's considered more equivalent to the first call, and it's not accepted,",
        "polarity": 0.375,
        "subjectivity": 0.41666666666666663
      }
    ],
    "polarity": 0.0974537037037037,
    "subjectivity": 0.36829805996472653,
    "keywords": [
      [
        "back to RGN",
        0.011258995941424065
      ],
      [
        "Slide",
        0.0560432633644709
      ],
      [
        "RGN",
        0.06923477639783142
      ],
      [
        "calendar",
        0.12183180233317527
      ],
      [
        "property bags",
        0.12520148945626577
      ],
      [
        "date",
        0.15152857902546685
      ],
      [
        "era",
        0.1552200812246261
      ],
      [
        "eraYear",
        0.1552200812246261
      ],
      [
        "calendar specific properties",
        0.1562103030396885
      ],
      [
        "back",
        0.16080996988986093
      ]
    ]
  },
  {
    "utterance number": 103,
    "timestamp": "2023-03-21",
    "speaker": "PFC",
    "sentences": [
      {
        "sentence number": 1,
        "text": " (**Slide 13**) All right, next we have an audit of user-visible operations (PR #2519)",
        "polarity": 0.17857142857142858,
        "subjectivity": 0.5119047619047619
      },
      {
        "sentence number": 2,
        "text": " Feedback that we've gotten often is that calendar and time zone operations, which are potentially calls into user-visible code in the case of custom calendars and time zones, were called redundantly",
        "polarity": -0.1,
        "subjectivity": 0.6
      },
      {
        "sentence number": 3,
        "text": " We've had a number of PRs l from either the champions or implementers trying to fix specific cases of this",
        "polarity": 0.0,
        "subjectivity": 0.125
      },
      {
        "sentence number": 4,
        "text": " At this point we decided, since we keep seeing these, we need to audit the whole proposal and just fix any calls that might be redundant instead of fixing them case-by-case",
        "polarity": 0.0,
        "subjectivity": 0.30000000000000004
      },
      {
        "sentence number": 5,
        "text": " This audit is done now",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": " It doesn't affect any of the functionality, but it is all observable as you can see in this very tiny section of the diff that I wrote for the test262 tests, a lot of Get and Call operations are eliminated",
        "polarity": 0.0,
        "subjectivity": 0.65
      },
      {
        "sentence number": 7,
        "text": " We've tried to write it according to the principle that you should get the methods once and call them multiple times only when necessary",
        "polarity": 0.0,
        "subjectivity": 0.6666666666666666
      },
      {
        "sentence number": 8,
        "text": " So, a lot of lookups have been eliminated and also some calls",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 9,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.027976190476190474,
    "subjectivity": 0.5092261904761904,
    "keywords": [
      [
        "Slide",
        0.05612704999703425
      ],
      [
        "time zone operations",
        0.08136465103790944
      ],
      [
        "user-visible operations",
        0.10924285874018046
      ],
      [
        "operations",
        0.11403994018114044
      ],
      [
        "zone operations",
        0.13988671275412756
      ],
      [
        "user-visible",
        0.143932272997322
      ],
      [
        "calls",
        0.14783778891923102
      ],
      [
        "user-visible code",
        0.1511855360455527
      ],
      [
        "audit",
        0.1604881682402803
      ],
      [
        "Call operations",
        0.1788764857510043
      ]
    ]
  },
  {
    "utterance number": 104,
    "timestamp": "2023-03-21",
    "speaker": "PFC",
    "sentences": [
      {
        "sentence number": 1,
        "text": " (**Slide 14**) Last one (PR #2517)",
        "polarity": 0.125,
        "subjectivity": 0.5333333333333333
      },
      {
        "sentence number": 2,
        "text": " This is a bug discovered by somebody who was interested in using Temporal and using one of the polyfills",
        "polarity": 0.25,
        "subjectivity": 0.5
      },
      {
        "sentence number": 3,
        "text": " In certain situations, in the calculation of rounding a duration, the largest unit wasn't respected correctly",
        "polarity": 0.21428571428571427,
        "subjectivity": 0.5714285714285714
      },
      {
        "sentence number": 4,
        "text": " So if you want to balance 2400 hours into a duration where the largest unit is a month, then what you want, at least relative to this particular date, is three months and 11 days, but with the current spec text you would get 100 days",
        "polarity": -0.03333333333333333,
        "subjectivity": 0.2833333333333333
      },
      {
        "sentence number": 5,
        "text": " This is the right length of days, but not the right unit, and we are fixing this",
        "polarity": 0.2857142857142857,
        "subjectivity": 0.5357142857142857
      },
      {
        "sentence number": 6,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.11523809523809522,
    "subjectivity": 0.4342857142857143,
    "keywords": [
      [
        "Slide",
        0.051055706666330254
      ],
      [
        "largest unit",
        0.09565014909391485
      ],
      [
        "days",
        0.1283201029590714
      ],
      [
        "unit",
        0.14434200252343277
      ],
      [
        "largest",
        0.1854173713997064
      ],
      [
        "Temporal",
        0.2097958156497884
      ],
      [
        "duration",
        0.21059181108724473
      ],
      [
        "bug discovered",
        0.21322425652670648
      ],
      [
        "rounding a duration",
        0.2753405211089345
      ],
      [
        "respected correctly",
        0.3031573447750278
      ]
    ]
  },
  {
    "utterance number": 105,
    "timestamp": "2023-03-21",
    "speaker": "CDA",
    "sentences": [
      {
        "sentence number": 1,
        "text": " We have one question on the queue from KG",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "question",
        0.29736558256021506
      ],
      [
        "queue",
        0.29736558256021506
      ]
    ]
  },
  {
    "utterance number": 106,
    "timestamp": "2023-03-21",
    "speaker": "KG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Not a question",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " I just wanted to say the audit of user-visible code I'm strongly in favor of",
        "polarity": 0.4333333333333333,
        "subjectivity": 0.7333333333333333
      },
      {
        "sentence number": 3,
        "text": " That's excellent work, it's something that it had been clear it would need to be done holistically for a long time and I'm glad it actually got done holistically",
        "polarity": 0.31,
        "subjectivity": 0.5766666666666667
      },
      {
        "sentence number": 4,
        "text": " It's good",
        "polarity": 0.7,
        "subjectivity": 0.6000000000000001
      },
      {
        "sentence number": 5,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.38333333333333336,
    "subjectivity": 0.6023809523809524,
    "keywords": [
      [
        "question",
        0.11825334278295817
      ],
      [
        "audit of user-visible",
        0.17722156952278995
      ],
      [
        "user-visible code",
        0.17722156952278995
      ],
      [
        "code I strongly",
        0.17722156952278995
      ],
      [
        "strongly in favor",
        0.17722156952278995
      ],
      [
        "holistically",
        0.20386687856315708
      ],
      [
        "excellent work",
        0.2408711136628859
      ],
      [
        "long time",
        0.29963586251796587
      ],
      [
        "wanted",
        0.38799772918318476
      ],
      [
        "audit",
        0.38799772918318476
      ]
    ]
  },
  {
    "utterance number": 107,
    "timestamp": "2023-03-21",
    "speaker": "PFC",
    "sentences": [
      {
        "sentence number": 1,
        "text": " That's good to hear, thanks",
        "polarity": 0.44999999999999996,
        "subjectivity": 0.4
      },
      {
        "sentence number": 2,
        "text": " I'd like to ask if we have consensus on these five normative changes",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.44999999999999996,
    "subjectivity": 0.4,
    "keywords": [
      [
        "good to hear",
        0.02541909697430123
      ],
      [
        "hear",
        0.12363091320521931
      ],
      [
        "good",
        0.2005079697193566
      ],
      [
        "consensus",
        0.46553351027698087
      ],
      [
        "normative",
        0.46553351027698087
      ]
    ]
  },
  {
    "utterance number": 108,
    "timestamp": "2023-03-21",
    "speaker": "CDA",
    "sentences": [
      {
        "sentence number": 1,
        "text": " DE supports on the queue",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " We do have a clarifying question though, from JGT",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "queue",
        0.2005079697193566
      ],
      [
        "JGT",
        0.2718250226855089
      ],
      [
        "supports",
        0.36073110501666333
      ],
      [
        "clarifying",
        0.6621399683957523
      ],
      [
        "question",
        0.6621399683957523
      ],
      [
        "clarifying question",
        0.7807198046783035
      ]
    ]
  },
  {
    "utterance number": 109,
    "timestamp": "2023-03-21",
    "speaker": "JGT",
    "sentences": [
      {
        "sentence number": 1,
        "text": " One more note on that the first normative PR that the bullet mentioned is in addition to throwing in the `format()` method, it also affects all formatting methods in the Intl",
        "polarity": 0.375,
        "subjectivity": 0.41666666666666663
      },
      {
        "sentence number": 2,
        "text": "DateTimeFormat namespace",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " So `formatToParts()`, `formatRange()`, etc, all of them would throw if presented with a ZonedDateTime",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.375,
    "subjectivity": 0.41666666666666663,
    "keywords": [
      [
        "Intl.DateTimeFormat namespace",
        0.01497735038418197
      ],
      [
        "bullet mentioned",
        0.020745127078761458
      ],
      [
        "addition to throwing",
        0.020745127078761458
      ],
      [
        "affects all formatting",
        0.020745127078761458
      ],
      [
        "formatting methods",
        0.022647671330202495
      ],
      [
        "format",
        0.06881002411664536
      ],
      [
        "namespace",
        0.10350927027866215
      ],
      [
        "note",
        0.1425605598138594
      ],
      [
        "normative",
        0.1425605598138594
      ],
      [
        "bullet",
        0.1425605598138594
      ]
    ]
  },
  {
    "utterance number": 110,
    "timestamp": "2023-03-21",
    "speaker": "PFC",
    "sentences": [
      {
        "sentence number": 1,
        "text": " That's right",
        "polarity": 0.2857142857142857,
        "subjectivity": 0.5357142857142857
      },
      {
        "sentence number": 2,
        "text": " It's a bit unfortunate that you cannot directly format a range of ZoneDateTimes, but as I said, that's something that we hope to make possible with some future adjustments to the proposal, but not in scope right now",
        "polarity": -0.022857142857142864,
        "subjectivity": 0.6121428571428571
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.028571428571428567,
    "subjectivity": 0.5994047619047619,
    "keywords": [
      [
        "range of ZoneDateTimes",
        0.09108482621177338
      ],
      [
        "bit unfortunate",
        0.12124452117740256
      ],
      [
        "directly format",
        0.12124452117740256
      ],
      [
        "format a range",
        0.12124452117740256
      ],
      [
        "hope to make",
        0.12124452117740256
      ],
      [
        "future adjustments",
        0.12124452117740256
      ],
      [
        "ZoneDateTimes",
        0.25386721785551913
      ],
      [
        "proposal",
        0.25386721785551913
      ],
      [
        "bit",
        0.32883716426354986
      ],
      [
        "unfortunate",
        0.32883716426354986
      ]
    ]
  },
  {
    "utterance number": 111,
    "timestamp": "2023-03-21",
    "speaker": "JGT",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Also, to clarify, it is possible you can transform it into an instant, right",
        "polarity": 0.09523809523809523,
        "subjectivity": 0.7341269841269841
      },
      {
        "sentence number": 2,
        "text": " So you can do it, there's a workaround, it's just not as ergonomic, but you can transform the ZonedDateTime temporal type into a different Temporal type and then you can format that range",
        "polarity": 0.0,
        "subjectivity": 0.6
      },
      {
        "sentence number": 3,
        "text": " So, there are certainly possibilities there In the meantime",
        "polarity": 0.21428571428571427,
        "subjectivity": 0.5714285714285714
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.1,
    "subjectivity": 0.6747619047619047,
    "keywords": [
      [
        "temporal type",
        0.06280260366860195
      ],
      [
        "ZonedDateTime temporal type",
        0.07176963813219765
      ],
      [
        "transform",
        0.1355791846101257
      ],
      [
        "clarify",
        0.13676667940027915
      ],
      [
        "instant",
        0.13676667940027915
      ],
      [
        "temporal",
        0.14066890342397032
      ],
      [
        "ZonedDateTime temporal",
        0.1420395710511774
      ],
      [
        "format that range",
        0.18611859615730994
      ],
      [
        "type",
        0.19831860453756683
      ],
      [
        "transform the ZonedDateTime",
        0.26567367464393893
      ]
    ]
  },
  {
    "utterance number": 112,
    "timestamp": "2023-03-21",
    "speaker": "CDA",
    "sentences": [
      {
        "sentence number": 1,
        "text": " You have two explicit supports in the queue from DE and DLM",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "DLM",
        0.08596317751626563
      ],
      [
        "explicit supports",
        0.09700399286574239
      ],
      [
        "explicit",
        0.29736558256021506
      ],
      [
        "supports",
        0.29736558256021506
      ],
      [
        "queue",
        0.29736558256021506
      ]
    ]
  },
  {
    "utterance number": 113,
    "timestamp": "2023-03-21",
    "speaker": "DE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Yeah",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " I definitely support each of these",
        "polarity": 0.0,
        "subjectivity": 0.5
      },
      {
        "sentence number": 3,
        "text": " For this one we're talking about with ZonedDateTime, it seems like an okay starting point and we've been successfully incrementally adding to DateTimeFormat",
        "polarity": 0.4166666666666667,
        "subjectivity": 0.5166666666666666
      },
      {
        "sentence number": 4,
        "text": " So, I think that can continue",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.3125,
    "subjectivity": 0.5125,
    "keywords": [
      [
        "Yeah",
        0.06997357213356549
      ],
      [
        "adding to DateTimeFormat",
        0.38599679376725615
      ],
      [
        "ZonedDateTime",
        0.4613789858464135
      ],
      [
        "DateTimeFormat",
        0.4613789858464135
      ],
      [
        "support",
        0.5110573480904945
      ],
      [
        "continue",
        0.5121371841744414
      ],
      [
        "starting point",
        0.5732105463588063
      ],
      [
        "successfully incrementally",
        0.5732105463588063
      ],
      [
        "incrementally adding",
        0.5732105463588063
      ],
      [
        "talking",
        0.6036200563782421
      ]
    ]
  },
  {
    "utterance number": 114,
    "timestamp": "2023-03-21",
    "speaker": "DLM",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I would say really quickly that way that we appreciate the amount of hard work",
        "polarity": 0.020833333333333315,
        "subjectivity": 0.5208333333333333
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.020833333333333315,
    "subjectivity": 0.5208333333333333,
    "keywords": [
      [
        "hard work",
        0.015380821171891606
      ],
      [
        "amount of hard",
        0.02570861714399338
      ],
      [
        "work",
        0.09568045026443411
      ],
      [
        "quickly",
        0.15831692877998726
      ],
      [
        "amount",
        0.15831692877998726
      ],
      [
        "hard",
        0.15831692877998726
      ]
    ]
  },
  {
    "utterance number": 115,
    "timestamp": "2023-03-21",
    "speaker": "DE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " So we're out of time for now",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " but if we have more time to discuss later the meeting, I think would be great to flesh out the microsecond versus nanosecond thing more a little bit, as well as how much we want to wait for the IETF before considering this to be not anymore requiring coordination",
        "polarity": 0.3020833333333333,
        "subjectivity": 0.4083333333333334
      },
      {
        "sentence number": 3,
        "text": " But yeah, overflow",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.3020833333333333,
    "subjectivity": 0.4083333333333334,
    "keywords": [
      [
        "anymore requiring coordination",
        0.07300909751907142
      ],
      [
        "microsecond versus nanosecond",
        0.09800234613407952
      ],
      [
        "versus nanosecond thing",
        0.09800234613407952
      ],
      [
        "requiring coordination",
        0.14422120608705913
      ],
      [
        "time",
        0.14475639702951865
      ],
      [
        "great to flesh",
        0.18957370212977243
      ],
      [
        "microsecond versus",
        0.18957370212977243
      ],
      [
        "versus nanosecond",
        0.18957370212977243
      ],
      [
        "nanosecond thing",
        0.18957370212977243
      ],
      [
        "anymore requiring",
        0.18957370212977243
      ]
    ]
  },
  {
    "utterance number": 116,
    "timestamp": "2023-03-21",
    "speaker": "KG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Okay, so `Set",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 2,
        "text": "prototype",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": "intersection`",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " As a reminder the Set methods proposal is in stage three",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " It's beginning to be implemented and we are running into the issues of what is possible to implement",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 6,
        "text": " So as a reminder, for context, `Set`s are ordered, which means that for every method, including intersection, there is a particular order that we chose for the result, although the particular order doesn't matter very much",
        "polarity": 0.19777777777777775,
        "subjectivity": 0.3088888888888889
      },
      {
        "sentence number": 7,
        "text": " Mostly the order just falls out of how the algorithms are specified",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 8,
        "text": " In fact, in all but one case, it falls out of how the algorithms are specified",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 9,
        "text": " However, in the particular case of `intersection`, where you are intersecting a large thing with a smaller thing, the order as currently specified has to be accomplished explicitly by sorting",
        "polarity": 0.11619047619047618,
        "subjectivity": 0.43238095238095237
      },
      {
        "sentence number": 10,
        "text": " And the idea is that you don't want the sort to take time proportional to the larger thing, because intersection shouldn't require time proportional to the larger of the two sets; intersection should in principle only require time proportional to the smaller of the two sets",
        "polarity": 0.0,
        "subjectivity": 0.625
      },
      {
        "sentence number": 11,
        "text": " So it was hoped (by me) that you could do this sort that you can see on the screen (slide shows spec note) efficiently in terms of being proportional only to the size of the result, not the size of the receiver",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 12,
        "text": " And this is true if you are using the Firefox implementation, which is documented nicely online, and the V8 implementation, which is essentially the same data structure",
        "polarity": 0.2375,
        "subjectivity": 0.51875
      },
      {
        "sentence number": 13,
        "text": " But it's not true for every possible implementation and not even true for every current implementation",
        "polarity": 0.04375,
        "subjectivity": 0.6749999999999999
      },
      {
        "sentence number": 14,
        "text": " So JavaScriptCore uses an entirely distinct data structure, which has very little in common with the one that V8 and SpiderMonkey use, and JavaScriptCore\u2019s implementation uses linked lists to maintain order rather than a contiguous array, which does not allow for efficient sorting",
        "polarity": -0.08125,
        "subjectivity": 0.48333333333333334
      },
      {
        "sentence number": 15,
        "text": " With V8 and SM you could do an efficient sort by looking up positions in an array and comparing them, but in JavaScriptCore you would have to iterate the actual list to get an order",
        "polarity": 0.0,
        "subjectivity": 0.1
      },
      {
        "sentence number": 16,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.1035383597883598,
    "subjectivity": 0.5427248677248678,
    "keywords": [
      [
        "order",
        0.06060923723749563
      ],
      [
        "Set methods proposal",
        0.06739238260577385
      ],
      [
        "time proportional",
        0.07734891925973207
      ],
      [
        "implementation",
        0.09221014711179575
      ],
      [
        "require time proportional",
        0.09737764917712997
      ],
      [
        "proportional",
        0.10176918347915381
      ],
      [
        "intersection",
        0.10183557186015282
      ],
      [
        "Set methods",
        0.11378755969741115
      ],
      [
        "Set",
        0.12412051216139397
      ],
      [
        "sets",
        0.12412051216139397
      ]
    ]
  },
  {
    "utterance number": 117,
    "timestamp": "2023-03-21",
    "speaker": "KG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " So, JavaScriptCore does not allow efficient sorting",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " So we\u2019ve got to do something",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " Well, in fact, we don't have to do something",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " One of these options is \"it doesn't matter\", though at the very least I need to remove this note that this note is not true for JavaScriptCore implementation",
        "polarity": -0.2825,
        "subjectivity": 0.585
      },
      {
        "sentence number": 5,
        "text": " So, options for things that we could do",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": " We could say that the order of the result will change suddenly as soon as the argument gets larger than the receiver",
        "polarity": 0.0,
        "subjectivity": 0.5
      },
      {
        "sentence number": 7,
        "text": " So where previously it was always going to be sorted so that things will be ordered the way they were in the receiver regardless of the sizes, with this it is possible the order of the result would suddenly switch based on which of the two was larger",
        "polarity": -0.041666666666666664,
        "subjectivity": 0.5416666666666667
      },
      {
        "sentence number": 8,
        "text": " So, you could add some unrelated elements to the argument that aren't even in the resulting intersection and have the effect that the order of the result is suddenly different",
        "polarity": 0.0,
        "subjectivity": 0.6
      },
      {
        "sentence number": 9,
        "text": " Alternatively, there's this sort of \u201czip\u201d order where you pull something from the first one, and then something from the second one, and then something from the first one, and then something from the second one, etc",
        "polarity": 0.125,
        "subjectivity": 0.16666666666666666
      },
      {
        "sentence number": 10,
        "text": " This would have twice as many user calls",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 11,
        "text": " And also means that it's basically impossible to implement by cloning in an actual implementation",
        "polarity": -0.3333333333333333,
        "subjectivity": 0.55
      },
      {
        "sentence number": 12,
        "text": " You end up having to follow this thing where you iterate both sets, even when they're both built-ins and there's no user code involved so it has the right order for the result",
        "polarity": 0.2857142857142857,
        "subjectivity": 0.5357142857142857
      },
      {
        "sentence number": 13,
        "text": " It's not something that follows naturally from cloning either set",
        "polarity": 0.1,
        "subjectivity": 0.4
      },
      {
        "sentence number": 14,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": -0.0007010582010581946,
    "subjectivity": 0.452169312169312,
    "keywords": [
      [
        "efficient sorting",
        0.03033786254878897
      ],
      [
        "order",
        0.06696864784102297
      ],
      [
        "result",
        0.09278684120198095
      ],
      [
        "suddenly",
        0.15027862998812846
      ],
      [
        "sorting",
        0.1656501483773092
      ],
      [
        "JavaScriptCore",
        0.17753655054323206
      ],
      [
        "efficient",
        0.17775158855475504
      ],
      [
        "JavaScriptCore implementation",
        0.20678274147380413
      ],
      [
        "note",
        0.21998983362915245
      ],
      [
        "things",
        0.2254179449821927
      ]
    ]
  },
  {
    "utterance number": 118,
    "timestamp": "2023-03-21",
    "speaker": "KG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Another option is just say we don't worry about it - JavaScriptCore would incur some overhead in this very specific case, but like it probably doesn't come up that much",
        "polarity": 0.1,
        "subjectivity": 0.18125000000000002
      },
      {
        "sentence number": 2,
        "text": " And it's probably not that much overhead anyway - just maybe it doesn't matter: I just remove the note and say \u201cyou've got to get here, but it's up to you whether you do that efficiently\u201d",
        "polarity": 0.2,
        "subjectivity": 0.2
      },
      {
        "sentence number": 3,
        "text": " Or maybe there's another option I am not thinking of",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " But these are the only ones I've got",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 5,
        "text": " They all have pretty significant downsides",
        "polarity": 0.3125,
        "subjectivity": 0.9375
      },
      {
        "sentence number": 6,
        "text": " I would like to hear from the committee what people's opinions on this matter are",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 7,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.1708333333333333,
    "subjectivity": 0.5729166666666666,
    "keywords": [
      [
        "JavaScriptCore would incur",
        0.02651783801406319
      ],
      [
        "specific case",
        0.02651783801406319
      ],
      [
        "incur some overhead",
        0.12753858573387625
      ],
      [
        "JavaScriptCore",
        0.14123445211756175
      ],
      [
        "case",
        0.14123445211756175
      ],
      [
        "overhead",
        0.1535796355584028
      ],
      [
        "option",
        0.1683740061561895
      ],
      [
        "worry",
        0.18290726812064217
      ],
      [
        "incur",
        0.18290726812064217
      ],
      [
        "specific",
        0.18290726812064217
      ]
    ]
  },
  {
    "utterance number": 119,
    "timestamp": "2023-03-21",
    "speaker": "SYG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " We\u2019ve chatted a little bit about this offline already anyway, but I'll recap some of that discussion here for the committee",
        "polarity": -0.1875,
        "subjectivity": 0.5
      },
      {
        "sentence number": 2,
        "text": " So I did discuss this with the V8 folks already",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " the V8 engineers' first opinion is that this intersection algorithm is kind of wack anyway and specifically this switching on this size changes",
        "polarity": 0.425,
        "subjectivity": 0.6166666666666667
      },
      {
        "sentence number": 4,
        "text": " So, in the case of a user-defined set-like (so not a built-in set and not a built-in map), you're calling other methods on it which is either iteration or iteration by keys, and what code gets called on it already is size dependence",
        "polarity": -0.125,
        "subjectivity": 0.375
      },
      {
        "sentence number": 5,
        "text": " So I think our opinion is that the size dependence is the weird thing from our point of view",
        "polarity": -0.5,
        "subjectivity": 1.0
      },
      {
        "sentence number": 6,
        "text": " And given that, it is what it is",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 7,
        "text": " For time optimality, you can't like, why even why work so hard to to get rid of the sharp edge of a dependence on order like the important thing",
        "polarity": -0.005555555555555554,
        "subjectivity": 0.7638888888888888
      },
      {
        "sentence number": 8,
        "text": " I don't think we should believe this completely implementation-defined because it's important to have something exactly define the order",
        "polarity": 0.25,
        "subjectivity": 0.5499999999999999
      },
      {
        "sentence number": 9,
        "text": " It's a weirdness",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 10,
        "text": " I don't have the intuition that this order really matters, but I'm happy to be corrected here, but given that intuition, and given that the, which user, which visible user code gets called is already size defendant having the order precisely dependent seems fine from a semantics point of view",
        "polarity": 0.45416666666666666,
        "subjectivity": 0.625
      },
      {
        "sentence number": 11,
        "text": " And it makes the fast paths simpler and implementation in that the fast path is exactly what you talked about with cloning the smaller thing",
        "polarity": 0.1625,
        "subjectivity": 0.4875
      },
      {
        "sentence number": 12,
        "text": " and if you clone a smaller thing that naturally preserves the order of the smaller thing so, yes, my preference is that one",
        "polarity": 0.03333333333333333,
        "subjectivity": 0.4666666666666666
      },
      {
        "sentence number": 13,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.15170454545454548,
    "subjectivity": 0.5863636363636364,
    "keywords": [
      [
        "\u2019ve chatted",
        0.03134390747777397
      ],
      [
        "order",
        0.08254918974424047
      ],
      [
        "size dependence",
        0.08410148679275957
      ],
      [
        "size",
        0.08988760352272901
      ],
      [
        "thing",
        0.10590530889455783
      ],
      [
        "smaller thing",
        0.13146215999543706
      ],
      [
        "dependence",
        0.133485568017823
      ],
      [
        "point of view",
        0.14595317482689704
      ],
      [
        "committee",
        0.15930985458619748
      ],
      [
        "code gets called",
        0.16202951831251747
      ]
    ]
  },
  {
    "utterance number": 120,
    "timestamp": "2023-03-21",
    "speaker": "KG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Yeah",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " So I have the code for `intersection` on the screen just to demonstrate what SYG was talking about",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " There's this switch based on the relative sizes, and in one case you end up calling the `has` method of the argument and in the other case you end up calling the `keys` method of the argument",
        "polarity": -0.0625,
        "subjectivity": 0.1875
      },
      {
        "sentence number": 4,
        "text": " So that's the switch that SYG was talking about",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " The user code is displayed here",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": " Now, personally I think that the order being size-dependent is a sharper edge than which piece of user code gets called, because in the case that you have a correct set-like, where the keys method is consistent with the has method and there's no side effects in either of them, you don't care at all which of the two things is getting called",
        "polarity": 0.125,
        "subjectivity": 0.275
      },
      {
        "sentence number": 7,
        "text": " But even in that case, you could plausibly care about the order",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 8,
        "text": " So my feeling is that the order being size dependent is, in fact, a sharper edge than the which user code gets called being size dependent",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 9,
        "text": " But that is just my opinion",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 10,
        "text": " And if the rest of the committee is okay with that sharp edge, then we can do that",
        "polarity": 0.1875,
        "subjectivity": 0.625
      },
      {
        "sentence number": 11,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.14285714285714285,
    "subjectivity": 0.3821428571428571,
    "keywords": [
      [
        "SYG was talking",
        0.04376438610496495
      ],
      [
        "user code",
        0.060930582789659925
      ],
      [
        "code",
        0.09110827499148959
      ],
      [
        "end up calling",
        0.09670647834388568
      ],
      [
        "method",
        0.10016656284075727
      ],
      [
        "case",
        0.10460439447470767
      ],
      [
        "SYG",
        0.10695012052762881
      ],
      [
        "order",
        0.13677410340166554
      ],
      [
        "user",
        0.14135436720697334
      ],
      [
        "sharper edge",
        0.14320126068307218
      ]
    ]
  },
  {
    "utterance number": 121,
    "timestamp": "2023-03-21",
    "speaker": "USA",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Yeah",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " there's no response",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " Next up, we have DLM",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "Yeah",
        0.06588837669267192
      ],
      [
        "DLM",
        0.36348788044697095
      ],
      [
        "response",
        0.4949246952252326
      ]
    ]
  },
  {
    "utterance number": 122,
    "timestamp": "2023-03-21",
    "speaker": "DLM",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I discussed this with Andre Bargul who's been handling our implementation and as was mentioned, we don't have a problem right now, but we do have a small concern of specifying a performance",
        "polarity": 0.01785714285714285,
        "subjectivity": 0.46785714285714286
      },
      {
        "sentence number": 2,
        "text": " In this case, then that prevents us from doing other optimizations in the future by changing to a different data structure that might not give us the performance",
        "polarity": -0.041666666666666664,
        "subjectivity": 0.3666666666666667
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": -0.01785714285714286,
    "subjectivity": 0.40714285714285714,
    "keywords": [
      [
        "Andre Bargul",
        0.005033688782117838
      ],
      [
        "handling our implementation",
        0.02058303315002752
      ],
      [
        "small concern",
        0.02058303315002752
      ],
      [
        "Andre",
        0.07077059886904763
      ],
      [
        "Bargul",
        0.07077059886904763
      ],
      [
        "performance",
        0.0827436739038892
      ],
      [
        "mentioned",
        0.10309426684964638
      ],
      [
        "discussed",
        0.14201378898212372
      ],
      [
        "handling",
        0.14201378898212372
      ],
      [
        "implementation",
        0.14201378898212372
      ]
    ]
  },
  {
    "utterance number": 123,
    "timestamp": "2023-03-21",
    "speaker": "KG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I think we can't specify the performance unless we force JavaScriptCore to change their entire implementation",
        "polarity": 0.0,
        "subjectivity": 0.625
      },
      {
        "sentence number": 2,
        "text": " So they are today in this situation that you are worried about being in the future",
        "polarity": 0.0,
        "subjectivity": 0.125
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.375,
    "keywords": [
      [
        "entire implementation",
        0.02541909697430123
      ],
      [
        "force JavaScriptCore",
        0.04188746641162499
      ],
      [
        "JavaScriptCore to change",
        0.04188746641162499
      ],
      [
        "change their entire",
        0.04188746641162499
      ],
      [
        "implementation",
        0.12363091320521931
      ],
      [
        "performance",
        0.2005079697193566
      ],
      [
        "force",
        0.2005079697193566
      ],
      [
        "JavaScriptCore",
        0.2005079697193566
      ],
      [
        "change",
        0.2005079697193566
      ],
      [
        "entire",
        0.2005079697193566
      ]
    ]
  },
  {
    "utterance number": 124,
    "timestamp": "2023-03-21",
    "speaker": "WH",
    "sentences": [
      {
        "sentence number": 1,
        "text": " This situation is somewhat similar to sort, in which it is intentionally not specified which sort algorithm we use in the spec because there could be a variety of ones with different performance characteristics",
        "polarity": 0.0,
        "subjectivity": 0.5
      },
      {
        "sentence number": 2,
        "text": " Now it sounds like that in this case there might be an algorithm which just iterates through the smaller object and looks things up in the larger one",
        "polarity": 0.0,
        "subjectivity": 0.5
      },
      {
        "sentence number": 3,
        "text": " Is there any concern that there might be an algorithm which is even better than this",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.1,
    "subjectivity": 0.5,
    "keywords": [
      [
        "performance characteristics",
        0.02617581190902736
      ],
      [
        "sort algorithm",
        0.06790259884268386
      ],
      [
        "similar to sort",
        0.0870874887418591
      ],
      [
        "sort",
        0.09933968054067142
      ],
      [
        "algorithm",
        0.10667944400485727
      ],
      [
        "characteristics",
        0.13704795315808577
      ],
      [
        "situation",
        0.18612548139510782
      ],
      [
        "similar",
        0.18612548139510782
      ],
      [
        "intentionally",
        0.18612548139510782
      ],
      [
        "spec",
        0.18612548139510782
      ]
    ]
  },
  {
    "utterance number": 125,
    "timestamp": "2023-03-21",
    "speaker": "KG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I do not think it is possible to do better than that, modulo perhaps a constant overhead",
        "polarity": 0.16666666666666666,
        "subjectivity": 0.611111111111111
      },
      {
        "sentence number": 2,
        "text": " So the algorithm\u2026let me pull it up",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " The algorithm is fully specified",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " Yeah",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " The algorithm is fully specified in terms of which things you call; that we did not leave up to implementations",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": " No one is really enthusiastic about the situation with array sort where things are implementation-defined, but we are largely okay with it because people are unlikely to be relying on the order in which calls occur, but we do know that people end up relying on the ultimate order of the data structure",
        "polarity": 0.15000000000000002,
        "subjectivity": 0.725
      },
      {
        "sentence number": 7,
        "text": " In the case of sort, we know that people relied on it being a stable sort, even though they didn't rely on the order in which the calls happened",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 8,
        "text": " So I think we have to specify the order of the resulting thing, and I think we want to specify the order in which the calls occur because we don't want to make more things be implementation dependent",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 9,
        "text": " And I don't think we can do better than this in terms of big-O performance",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 10,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.23333333333333334,
    "subjectivity": 0.6370370370370371,
    "keywords": [
      [
        "constant overhead",
        0.03720746435268899
      ],
      [
        "order",
        0.0734686914269666
      ],
      [
        "algorithm",
        0.1030091298935406
      ],
      [
        "algorithm is fully",
        0.12215046591577858
      ],
      [
        "calls",
        0.14414034073009221
      ],
      [
        "calls occur",
        0.15263818685271424
      ],
      [
        "things",
        0.16431563692510923
      ],
      [
        "people",
        0.16874001426856172
      ],
      [
        "sort",
        0.17727464422675962
      ],
      [
        "modulo",
        0.17974868343810446
      ]
    ]
  },
  {
    "utterance number": 126,
    "timestamp": "2023-03-21",
    "speaker": "WH",
    "sentences": [
      {
        "sentence number": 1,
        "text": " For the third answer, if we specify it this way, will it cause a problem for any implementation",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "answer",
        0.09568045026443411
      ],
      [
        "implementation",
        0.09568045026443411
      ],
      [
        "problem",
        0.15831692877998726
      ]
    ]
  },
  {
    "utterance number": 127,
    "timestamp": "2023-03-21",
    "speaker": "KG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " When you say it, we spec it this way, are you talking about everything apart from the sort, or are you including the sort",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "including the sort",
        0.010094912166302056
      ],
      [
        "sort",
        0.03548996106871502
      ],
      [
        "spec",
        0.1408007092310104
      ],
      [
        "talking",
        0.1408007092310104
      ],
      [
        "including",
        0.1408007092310104
      ]
    ]
  },
  {
    "utterance number": 128,
    "timestamp": "2023-03-21",
    "speaker": "WH",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Yeah, we just iterate through the smaller set looking things up in the larger set, collect the elements, and not sort them",
        "polarity": 0.0,
        "subjectivity": 0.5
      },
      {
        "sentence number": 2,
        "text": " This is the same thing that SYG was advocating for",
        "polarity": 0.0,
        "subjectivity": 0.125
      },
      {
        "sentence number": 3,
        "text": " Would doing that cause any issues for any implementation",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.375,
    "keywords": [
      [
        "collect the elements",
        0.01688166730753382
      ],
      [
        "smaller set",
        0.03363360306633432
      ],
      [
        "larger set",
        0.03363360306633432
      ],
      [
        "Yeah",
        0.08647274260977168
      ],
      [
        "set",
        0.09265960125704298
      ],
      [
        "SYG was advocating",
        0.10716100837811161
      ],
      [
        "collect",
        0.12884645072003895
      ],
      [
        "elements",
        0.12884645072003895
      ],
      [
        "thing that SYG",
        0.16064862061333382
      ],
      [
        "iterate",
        0.175584571545148
      ]
    ]
  },
  {
    "utterance number": 129,
    "timestamp": "2023-03-21",
    "speaker": "KG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I don't believe so",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " And in fact, I think that's the best case for implementations because it allows them to be as efficient as possible",
        "polarity": 0.5,
        "subjectivity": 0.65
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.5,
    "subjectivity": 0.65,
    "keywords": [
      [
        "case for implementations",
        0.2766850298235749
      ],
      [
        "fact",
        0.32883716426354986
      ],
      [
        "case",
        0.46553351027698087
      ],
      [
        "implementations",
        0.46553351027698087
      ],
      [
        "efficient",
        0.46553351027698087
      ]
    ]
  },
  {
    "utterance number": 130,
    "timestamp": "2023-03-21",
    "speaker": "WH",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Okay, yes, then I\u2019d be in favor of the first bullet point [order depends on relative size of argument vs receiver]",
        "polarity": 0.25,
        "subjectivity": 0.27777777777777773
      },
      {
        "sentence number": 2,
        "text": " Let's just do that and not try to sort these things afterwards",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.25,
    "subjectivity": 0.27777777777777773,
    "keywords": [
      [
        "bullet point",
        0.02541909697430123
      ],
      [
        "order depends",
        0.02541909697430123
      ],
      [
        "argument vs receiver",
        0.02541909697430123
      ],
      [
        "depends on relative",
        0.04188746641162499
      ],
      [
        "relative size",
        0.04188746641162499
      ],
      [
        "size of argument",
        0.04188746641162499
      ],
      [
        "point",
        0.12363091320521931
      ],
      [
        "order",
        0.12363091320521931
      ],
      [
        "receiver",
        0.12363091320521931
      ],
      [
        "favor",
        0.2005079697193566
      ]
    ]
  },
  {
    "utterance number": 131,
    "timestamp": "2023-03-21",
    "speaker": "USA",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Okay",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 2,
        "text": " Now, we have MM",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " Yeah",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.5,
    "subjectivity": 0.5,
    "keywords": [
      [
        "Yeah",
        0.26303348124903125
      ]
    ]
  },
  {
    "utterance number": 132,
    "timestamp": "2023-03-21",
    "speaker": "MM",
    "sentences": [
      {
        "sentence number": 1,
        "text": " So I agree with what was just said",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " And because the reasons were stated fairly exhaustively I don't need to go into them",
        "polarity": 0.7,
        "subjectivity": 0.9
      },
      {
        "sentence number": 3,
        "text": " I think we should not sort",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " I think we should just do the deterministic thing that's friendly to all implementations, and I am not very concerned about that",
        "polarity": 0.1375,
        "subjectivity": 0.4
      },
      {
        "sentence number": 5,
        "text": " I recognize the sharp edge KG is concerned about, I recognize that it might be something to be concerned about but altogether, I'm not worried about it",
        "polarity": -0.125,
        "subjectivity": 0.75
      },
      {
        "sentence number": 6,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.2125,
    "subjectivity": 0.6125,
    "keywords": [
      [
        "stated fairly exhaustively",
        0.09359248413643279
      ],
      [
        "concerned",
        0.13204664059682547
      ],
      [
        "agree",
        0.15795363869189286
      ],
      [
        "reasons were stated",
        0.18429929918566323
      ],
      [
        "stated fairly",
        0.18429929918566323
      ],
      [
        "fairly exhaustively",
        0.18429929918566323
      ],
      [
        "recognize",
        0.2397040798482012
      ],
      [
        "reasons",
        0.3944855555510879
      ],
      [
        "stated",
        0.3944855555510879
      ],
      [
        "fairly",
        0.3944855555510879
      ]
    ]
  },
  {
    "utterance number": 133,
    "timestamp": "2023-03-21",
    "speaker": "DE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " sorry for the notes to clarify, if MM and WH, were you expressed, his support for the first bullet point",
        "polarity": -0.125,
        "subjectivity": 0.6666666666666666
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": -0.125,
    "subjectivity": 0.6666666666666666,
    "keywords": [
      [
        "notes to clarify",
        0.015380821171891606
      ],
      [
        "bullet point",
        0.015380821171891606
      ],
      [
        "clarify",
        0.09568045026443411
      ],
      [
        "expressed",
        0.09568045026443411
      ],
      [
        "point",
        0.09568045026443411
      ],
      [
        "notes",
        0.15831692877998726
      ],
      [
        "support",
        0.15831692877998726
      ],
      [
        "bullet",
        0.15831692877998726
      ]
    ]
  },
  {
    "utterance number": 134,
    "timestamp": "2023-03-21",
    "speaker": "WH",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I think we are",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " I think MM, I, and SYG all agree on the first bullet point",
        "polarity": 0.25,
        "subjectivity": 0.3333333333333333
      },
      {
        "sentence number": 3,
        "text": " Yes",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.25,
    "subjectivity": 0.3333333333333333,
    "keywords": [
      [
        "SYG all agree",
        0.10378909220852033
      ],
      [
        "bullet point",
        0.14005713113751553
      ],
      [
        "SYG",
        0.23220979985467174
      ],
      [
        "point",
        0.3033846052649951
      ],
      [
        "agree",
        0.4049347717850166
      ],
      [
        "bullet",
        0.4049347717850166
      ]
    ]
  },
  {
    "utterance number": 135,
    "timestamp": "2023-03-21",
    "speaker": "DE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Thank you",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": []
  },
  {
    "utterance number": 136,
    "timestamp": "2023-03-21",
    "speaker": "KG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Okay, I see that everything in the queue is about the sort order",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 2,
        "text": " So having heard several people speak in favor of the first one and no one except me really oppose it, I will just do the first one",
        "polarity": 0.175,
        "subjectivity": 0.21666666666666667
      },
      {
        "sentence number": 3,
        "text": " The order will be weird",
        "polarity": -0.5,
        "subjectivity": 1.0
      },
      {
        "sentence number": 4,
        "text": " Okay, with that done, we have more general topics",
        "polarity": 0.35000000000000003,
        "subjectivity": 0.5
      },
      {
        "sentence number": 5,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.19444444444444445,
    "subjectivity": 0.4296296296296296,
    "keywords": [
      [
        "sort order",
        0.059202528567806396
      ],
      [
        "queue",
        0.15893327804655533
      ],
      [
        "sort",
        0.15893327804655533
      ],
      [
        "order",
        0.17583948802085428
      ],
      [
        "heard several people",
        0.18625033328384727
      ],
      [
        "people speak",
        0.18625033328384727
      ],
      [
        "speak in favor",
        0.18625033328384727
      ],
      [
        "general topics",
        0.33264388004825773
      ],
      [
        "heard",
        0.3962418617827751
      ],
      [
        "people",
        0.3962418617827751
      ]
    ]
  },
  {
    "utterance number": 137,
    "timestamp": "2023-03-21",
    "speaker": "SYG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Sorry, were there more to your items Kevin - were there more questions you want to ask",
        "polarity": 0.16666666666666666,
        "subjectivity": 0.6666666666666666
      },
      {
        "sentence number": 2,
        "text": " Mine is more like a question I just want to bring to committee so I want to leave it as deprioritized as possible",
        "polarity": 0.25,
        "subjectivity": 0.75
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.2,
    "subjectivity": 0.7,
    "keywords": [
      [
        "items Kevin",
        0.007269864989240575
      ],
      [
        "Kevin",
        0.053691021027863564
      ],
      [
        "items",
        0.13442462743719766
      ],
      [
        "bring to committee",
        0.13995022251075856
      ],
      [
        "questions",
        0.23522282876570869
      ],
      [
        "question",
        0.23522282876570869
      ],
      [
        "Mine",
        0.2838071434540841
      ],
      [
        "bring",
        0.35038366644254865
      ],
      [
        "committee",
        0.35038366644254865
      ],
      [
        "leave",
        0.35038366644254865
      ]
    ]
  },
  {
    "utterance number": 138,
    "timestamp": "2023-03-21",
    "speaker": "KG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Well SFC has a topic on the thing but the sort order is the only thing I was bringing and I consider that settled",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 1.0,
    "keywords": [
      [
        "sort order",
        0.018641876658774394
      ],
      [
        "SFC",
        0.07261214632111582
      ],
      [
        "thing",
        0.08977403887827273
      ],
      [
        "settled",
        0.09101163530720666
      ],
      [
        "topic",
        0.135280142484453
      ],
      [
        "sort",
        0.135280142484453
      ],
      [
        "order",
        0.135280142484453
      ],
      [
        "bringing",
        0.135280142484453
      ]
    ]
  },
  {
    "utterance number": 139,
    "timestamp": "2023-03-21",
    "speaker": "SYG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I'll say my piece which I think might dovetail into which things SFC is going to talk about anyway",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " So part of the feedback we got your invitation and when we're done, we're when I brought this back to the team is is basically, the feeling of the V8 implementers, is that we shouldn't care very much about the performance of set--likes",
        "polarity": 0.13,
        "subjectivity": 0.13
      },
      {
        "sentence number": 3,
        "text": " We should basically only care about performance, of built-in sets and built in maps Now, the intersection should of course, support set-likes but the feeling was basically that if you're using a set-like just have intersection do a Set",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 4,
        "text": "from or something as one of its very first steps to to, to cast the, what, not to cast, but due to convert it to an actual set and then use And that the algorithm and the rest of it, just basically is about only treating built-in Sets and built in Maps",
        "polarity": 0.05,
        "subjectivity": 0.4770833333333333
      },
      {
        "sentence number": 5,
        "text": " This is not a, this is, is basically giving that go out to the concern that we had is is not blocking not, requesting the normal change",
        "polarity": 0.15,
        "subjectivity": 0.6499999999999999
      },
      {
        "sentence number": 6,
        "text": " This has been litigated and relitigated in many past meetings",
        "polarity": 0.125,
        "subjectivity": 0.375
      },
      {
        "sentence number": 7,
        "text": " But our feelings are basically it's not clear how much we actually care about the performance of set-likes that are user programs",
        "polarity": -0.025000000000000005,
        "subjectivity": 0.24166666666666664
      },
      {
        "sentence number": 8,
        "text": " Why not just have forced them to iterate the entire set-like by casting it to an actual built-in Set first",
        "polarity": -0.012500000000000011,
        "subjectivity": 0.3145833333333333
      },
      {
        "sentence number": 9,
        "text": " I guess I would like some discussion around the topic if we have time because when we designed this thing especially around so class saying, non-generic on the receiver, but generic on the argument, it was with the explicit understanding of it being precedent-setting because this is a thing that that we have grapple with for many years",
        "polarity": 0.16666666666666666,
        "subjectivity": 0.5
      },
      {
        "sentence number": 10,
        "text": " we want to reach a good like program to do in the future when we design new built-in, built-in methods, so so, Yeah",
        "polarity": 0.27878787878787875,
        "subjectivity": 0.39318181818181824
      },
      {
        "sentence number": 11,
        "text": " Now that there's some implementation experience under our belts, do people care about the performance of non built-in sets and maps",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 12,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0952892561983471,
    "subjectivity": 0.4086157024793388,
    "keywords": [
      [
        "things SFC",
        0.03072222878133448
      ],
      [
        "built-in sets",
        0.03272058338327525
      ],
      [
        "basically",
        0.0541274131123026
      ],
      [
        "actual built-in Set",
        0.06126579727536969
      ],
      [
        "built-in",
        0.06449015410403318
      ],
      [
        "SFC",
        0.0672875976306743
      ],
      [
        "treating built-in Sets",
        0.07288397271071129
      ],
      [
        "set",
        0.07700342817539704
      ],
      [
        "sets",
        0.07700342817539704
      ],
      [
        "performance",
        0.0772074256262494
      ]
    ]
  },
  {
    "utterance number": 140,
    "timestamp": "2023-03-21",
    "speaker": "KG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I care",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " I don't care about performance in the small, but I care about performance in the large and in particular I think it probably does matter a lot that if you take an empty set, and you intersect it with a very large set, that should be fast",
        "polarity": 0.08492063492063491,
        "subjectivity": 0.4698412698412699
      },
      {
        "sentence number": 3,
        "text": " I would be sad if intersecting the empty set or a singleton set or any other extremely small set was slow, even when the argument is a set-like",
        "polarity": -0.255,
        "subjectivity": 0.5349999999999999
      },
      {
        "sentence number": 4,
        "text": " That just should not take a bunch of time",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " It did not require you to iterate the entire argument",
        "polarity": 0.0,
        "subjectivity": 0.625
      },
      {
        "sentence number": 6,
        "text": " I think it is a reasonable expectation that if you intersect the empty set with something, that finishes very quickly",
        "polarity": 0.17777777777777778,
        "subjectivity": 0.5833333333333334
      },
      {
        "sentence number": 7,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": -0.015476190476190473,
    "subjectivity": 0.5246031746031747,
    "keywords": [
      [
        "empty set",
        0.08167641057373007
      ],
      [
        "set",
        0.0831833890504691
      ],
      [
        "care",
        0.09217833784335017
      ],
      [
        "care about performance",
        0.09510244263027282
      ],
      [
        "empty",
        0.13144050971721363
      ],
      [
        "performance",
        0.19222105952223198
      ],
      [
        "large",
        0.2469440727774654
      ],
      [
        "small",
        0.25419145389356756
      ],
      [
        "intersect",
        0.2723939587022478
      ],
      [
        "argument",
        0.29818397923745404
      ]
    ]
  },
  {
    "utterance number": 141,
    "timestamp": "2023-03-21",
    "speaker": "SFC",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I'm next in the queue, then queue is not advancing, but I think Shu asked my question and I haven't answered it already so I don't have anything more to say",
        "polarity": 0.25,
        "subjectivity": 0.25
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.25,
    "subjectivity": 0.25,
    "keywords": [
      [
        "Shu asked",
        0.007209119774282124
      ],
      [
        "asked my question",
        0.013095151449018445
      ],
      [
        "Shu",
        0.06295532167170864
      ],
      [
        "queue",
        0.07030442419566416
      ],
      [
        "advancing",
        0.08179429269966654
      ],
      [
        "asked",
        0.11369206228658875
      ],
      [
        "question",
        0.11369206228658875
      ],
      [
        "answered",
        0.11369206228658875
      ]
    ]
  },
  {
    "utterance number": 142,
    "timestamp": "2023-03-21",
    "speaker": "USA",
    "sentences": [
      {
        "sentence number": 1,
        "text": " That\u2019s the rest of the queue",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "queue",
        0.09568045026443411
      ],
      [
        "rest",
        0.15831692877998726
      ]
    ]
  },
  {
    "utterance number": 143,
    "timestamp": "2023-03-21",
    "speaker": "RBN",
    "sentences": [
      {
        "sentence number": 1,
        "text": " In January, I presented on the resource management proposal and requested stage 3",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " And at the time we had conditional advancement to Stage 3, pending an investigation into whether we should be using either the `await` keyword or the `async` keyword as a modifier to the using declaration",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " The consensus and conclusion was that this condition was to be resolved no later than the March 2023 plenary, this investigation would be conducted via some informal polling and if we we had no clear winner, so we would probably are we would advance to stage 3 with the current syntax, which is `using await`",
        "polarity": -0.01666666666666667,
        "subjectivity": 0.2611111111111111
      },
      {
        "sentence number": 4,
        "text": " So, there was some informal polling that occurred",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " SYG performed an internal informal poll at Google",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": " I also performed one at Microsoft",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 7,
        "text": " There was also a broadly distributed poll via Twitter and Mastodon",
        "polarity": 0.0625,
        "subjectivity": 0.3125
      },
      {
        "sentence number": 8,
        "text": " That was provided by RPRR",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 9,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 10,
        "text": " And I just on Monday, was notified by Hax that there was also a poll that was done within the JS China Interest Group",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 11,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.002499999999999998,
    "subjectivity": 0.21916666666666665,
    "keywords": [
      [
        "resource management proposal",
        0.005399940153044194
      ],
      [
        "requested stage",
        0.027471149534870707
      ],
      [
        "resource management",
        0.030043251628324847
      ],
      [
        "management proposal",
        0.030043251628324847
      ],
      [
        "proposal and requested",
        0.030043251628324847
      ],
      [
        "stage",
        0.05218434119322108
      ],
      [
        "January",
        0.060810252514209184
      ],
      [
        "informal polling",
        0.09025286612392039
      ],
      [
        "China Interest Group",
        0.09528411558396781
      ],
      [
        "advancement to Stage",
        0.11292833788170553
      ]
    ]
  },
  {
    "utterance number": 144,
    "timestamp": "2023-03-21",
    "speaker": "RBN",
    "sentences": [
      {
        "sentence number": 1,
        "text": " So what does the poll that we provided look like",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " Essentially, it looks like this",
        "polarity": 0.0,
        "subjectivity": 0.3
      },
      {
        "sentence number": 3,
        "text": " We asked the question: \u201cWhich declaration form most clearly expresses the following semantics: that the value of the binding X below would be disposed when control flow exits, the containing block scope and that this disposal would happen asynchronously and would be awaited before continuing\"",
        "polarity": 0.19999999999999998,
        "subjectivity": 0.3277777777777778
      },
      {
        "sentence number": 4,
        "text": " We provided in the twitter poll and the Microsoft poll a series of options, these were the current form, which is `using await x = y`, C# syntax, which is `await using x = y`, and the alternative syntax we've been discussing, which is `async using x = y`",
        "polarity": 0.0,
        "subjectivity": 0.4
      },
      {
        "sentence number": 5,
        "text": " And I'll go into each of these here is to kind of what the differences are and why we're looking at them",
        "polarity": 0.6,
        "subjectivity": 0.9
      },
      {
        "sentence number": 6,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.19999999999999998,
    "subjectivity": 0.4305555555555556,
    "keywords": [
      [
        "Microsoft poll",
        0.09684437055180144
      ],
      [
        "poll",
        0.10139883491946743
      ],
      [
        "control flow exits",
        0.14094786008291163
      ],
      [
        "provided",
        0.14492304922539773
      ],
      [
        "twitter poll",
        0.17997660831581996
      ],
      [
        "form",
        0.18988209747074858
      ],
      [
        "declaration form",
        0.20652028746549897
      ],
      [
        "await",
        0.21650821821272065
      ],
      [
        "syntax",
        0.21650821821272065
      ],
      [
        "asked the question",
        0.2277003712800276
      ]
    ]
  },
  {
    "utterance number": 145,
    "timestamp": "2023-03-21",
    "speaker": "RBN",
    "sentences": [
      {
        "sentence number": 1,
        "text": " So `using await x = y` is the current proposal syntax",
        "polarity": 0.0,
        "subjectivity": 0.4
      },
      {
        "sentence number": 2,
        "text": " It uses the `await` keyword to indicate that an implicit await occurs at the end of the block block",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " it uses the `await` modifier, which following the statement head, which is very similar to how `for await` uses the modifier following the or keyword",
        "polarity": 0.0,
        "subjectivity": 0.24
      },
      {
        "sentence number": 4,
        "text": " This has low likelihood of collision with `await` as an identifier",
        "polarity": 0.0,
        "subjectivity": 0.3
      },
      {
        "sentence number": 5,
        "text": " This is because await is a reserved word in strict mode code",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": " It's also reserved inside of async functions, even in non-strict mode",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 7,
        "text": " And we recently added a lookahead restriction for the synchronous using to support this this case",
        "polarity": 0.0,
        "subjectivity": 0.25
      },
      {
        "sentence number": 8,
        "text": " We had some concern with this syntax about the `await` being a deferred operation rather than an immediate operation and the syntax has writte may seem to indicate that we are awaiting `x` somehow",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 9,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.2783333333333334,
    "keywords": [
      [
        "current proposal syntax",
        0.02698976714003577
      ],
      [
        "current proposal",
        0.043344213060941036
      ],
      [
        "await",
        0.05683116667858216
      ],
      [
        "proposal syntax",
        0.11708861013694805
      ],
      [
        "syntax",
        0.1714170500356023
      ],
      [
        "implicit await occurs",
        0.18246287724890553
      ],
      [
        "block block",
        0.19345491887279986
      ],
      [
        "block",
        0.20130607599176537
      ],
      [
        "current",
        0.20382232696600838
      ],
      [
        "proposal",
        0.20382232696600838
      ]
    ]
  },
  {
    "utterance number": 146,
    "timestamp": "2023-03-21",
    "speaker": "RBN",
    "sentences": [
      {
        "sentence number": 1,
        "text": " And we've also discussed the `await using` syntax, which is the C# syntax",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " This uses `await` again to indicate an implicit `await` occurs at the end of the block There's the possibility that this might better indicate that we are awaiting the using operation because it precedes `using` rather than awaiting `x`",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 3,
        "text": " The reason this wasn't originally considered was that this requires a cover grammar for disambiguation in that await using is already legal JavaScript before we have to disambiguate the declaration form from an expression via a cover grammar",
        "polarity": 0.2875,
        "subjectivity": 0.475
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.35833333333333334,
    "subjectivity": 0.48333333333333334,
    "keywords": [
      [
        "syntax",
        0.0325659786958227
      ],
      [
        "await",
        0.06200102030573793
      ],
      [
        "cover grammar",
        0.08278633271523611
      ],
      [
        "discussed",
        0.14864854394664664
      ],
      [
        "awaiting",
        0.17625524295967027
      ],
      [
        "cover",
        0.1775918672686221
      ],
      [
        "requires a cover",
        0.19991405284874983
      ],
      [
        "grammar",
        0.1999706329882953
      ],
      [
        "originally considered",
        0.2820992035364574
      ],
      [
        "legal JavaScript",
        0.2820992035364574
      ]
    ]
  },
  {
    "utterance number": 147,
    "timestamp": "2023-03-21",
    "speaker": "RBN",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Finally, we considered the `async using` keyword instead",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 2,
        "text": " This would use async to indicate the operation occurs at the end of the block",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " async is a contextual keyword prefix in JavaScript much like a sync function There's less potential for misinterpretation",
        "polarity": 0.011111111111111118,
        "subjectivity": 0.4222222222222222
      },
      {
        "sentence number": 4,
        "text": " of whether or not this await is implicitly, it is immediate but concerns raised by myself, especially our that it doesn't really matter",
        "polarity": 0.1,
        "subjectivity": 0.6
      },
      {
        "sentence number": 5,
        "text": " Each existing and proposed use cases of async that occur in the JavaScript language",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": " From facing function, async arrows async methods, even `async do` async here does not imply a weight, it only permits it",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 7,
        "text": " They're declaring something is async here",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 8,
        "text": " Does not actually have any explicit or implicit indication that `await` actually occurs in those cases",
        "polarity": 0.0,
        "subjectivity": 0.1
      },
      {
        "sentence number": 9,
        "text": " So it feels to the champion at least that this is possibly the wrong term to be using it also requires a, async or a cover grammar, which like the 08 `using` syntax in that the `async` before using is also currently valid as the beginning of an async arrow",
        "polarity": -0.2,
        "subjectivity": 0.6749999999999999
      },
      {
        "sentence number": 10,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": -0.04358974358974359,
    "subjectivity": 0.5666666666666667,
    "keywords": [
      [
        "async",
        0.04102389382373276
      ],
      [
        "Finally",
        0.17281411400984437
      ],
      [
        "keyword",
        0.19604227208817315
      ],
      [
        "considered",
        0.221402562412909
      ],
      [
        "occurs",
        0.23214440746414347
      ],
      [
        "JavaScript",
        0.2564866364855091
      ],
      [
        "function",
        0.2676117145781986
      ],
      [
        "await",
        0.2839740713686791
      ],
      [
        "cases",
        0.29020983427161967
      ],
      [
        "async arrows async",
        0.2914305094374752
      ]
    ]
  },
  {
    "utterance number": 148,
    "timestamp": "2023-03-21",
    "speaker": "RBN",
    "sentences": [
      {
        "sentence number": 1,
        "text": " There's a fourth option that we didn't consider, which was `using async`",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " I had a number of concerns about this which is why it wasn't included",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " There's a much higher likelihood of collision with async as an identifier",
        "polarity": 0.25,
        "subjectivity": 0.5
      },
      {
        "sentence number": 4,
        "text": " When refactoring than there is with something like await, async is not reserved in strict code",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " It's not reserved in module bodies or class blocks",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": " It's not reserved even inside of async functions",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 7,
        "text": " I also had concerns that it doesn't really align with the keyword order in ECMAScript or in any other language with similar prior art",
        "polarity": 0.018750000000000003,
        "subjectivity": 0.24375
      },
      {
        "sentence number": 8,
        "text": " So it seemed there was potential for confusion potential for refactoring issues that using await really doesn't have because `using await` has been around for quite a number of years and doesn't have - the folks that are using it generally aren't using it as an identifier",
        "polarity": 0.0625,
        "subjectivity": 0.675
      },
      {
        "sentence number": 9,
        "text": " Whereas something like async",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 10,
        "text": " I have seen `async` as an identifier in many places",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 11,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.09772727272727275,
    "subjectivity": 0.42500000000000004,
    "keywords": [
      [
        "fourth option",
        0.05649933277680796
      ],
      [
        "async",
        0.10210968156367561
      ],
      [
        "reserved",
        0.15567751890038597
      ],
      [
        "identifier",
        0.19017123789076024
      ],
      [
        "await",
        0.19910466568914276
      ],
      [
        "fourth",
        0.23125282456106405
      ],
      [
        "option",
        0.23125282456106405
      ],
      [
        "number",
        0.2578327737935323
      ],
      [
        "concerns",
        0.29981575220610446
      ],
      [
        "refactoring",
        0.3181170967279638
      ]
    ]
  },
  {
    "utterance number": 149,
    "timestamp": "2023-03-21",
    "speaker": "RBN",
    "sentences": [
      {
        "sentence number": 1,
        "text": " So, the results of the polls",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " I've gathered this information from SYG and others",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " so internally SYG posted this poll, his did not include `await using`",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " There was a little bit of a miscommunication there I had indicated when I first posted the poll internally at Microsoft that I was concerned that having both using a weight and the weight using as separate items might have been a bit confusing",
        "polarity": -0.059375,
        "subjectivity": 0.30833333333333335
      },
      {
        "sentence number": 5,
        "text": " And unfortunately in the poll the options we were using, or that we had used for these did not include anything in the form of Ranked choice Voting",
        "polarity": -0.5,
        "subjectivity": 1.0
      },
      {
        "sentence number": 6,
        "text": " But the options as of then, I think the last time I got a snapshot of this from SYG was either Friday",
        "polarity": 0.0,
        "subjectivity": 0.06666666666666667
      },
      {
        "sentence number": 7,
        "text": " I think Friday right before end of business day",
        "polarity": 0.2857142857142857,
        "subjectivity": 0.5357142857142857
      },
      {
        "sentence number": 8,
        "text": " But currently shows that at Google `async using` had a higher interest, then `using await` does",
        "polarity": 0.125,
        "subjectivity": 0.45
      },
      {
        "sentence number": 9,
        "text": " so at least on that side async using seem to be more more interesting line with Folks at Google that are working either on Chrome or V8 or heavily use JavaScript, or or TypeScript",
        "polarity": 0.2,
        "subjectivity": 0.48
      },
      {
        "sentence number": 10,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.05321428571428572,
    "subjectivity": 0.40904761904761905,
    "keywords": [
      [
        "SYG",
        0.07375030567063856
      ],
      [
        "internally SYG posted",
        0.07609324194210586
      ],
      [
        "Ranked choice Voting",
        0.1157956706791686
      ],
      [
        "internally SYG",
        0.11802644079363324
      ],
      [
        "SYG posted",
        0.11802644079363324
      ],
      [
        "poll",
        0.12596712083337092
      ],
      [
        "Folks at Google",
        0.17185507197074293
      ],
      [
        "information from SYG",
        0.17311408298658157
      ],
      [
        "Friday",
        0.17586296755731842
      ],
      [
        "Google",
        0.17614735319064243
      ]
    ]
  },
  {
    "utterance number": 150,
    "timestamp": "2023-03-21",
    "speaker": "RBN",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Within Microsoft, we kind of had the exact opposite",
        "polarity": 0.2833333333333333,
        "subjectivity": 0.3833333333333333
      },
      {
        "sentence number": 2,
        "text": " perspective",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " `using await` had about 41% of the vote from the number for the respondents that that responded",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " `await using` had a much higher incidence There's again a potential bias at Microsoft for towards the C# syntax and sets which many people are familiar with",
        "polarity": 0.28125,
        "subjectivity": 0.625
      },
      {
        "sentence number": 5,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.28214285714285714,
    "subjectivity": 0.5214285714285715,
    "keywords": [
      [
        "exact opposite. perspective",
        0.0027918128357912906
      ],
      [
        "opposite. perspective",
        0.01780682073404798
      ],
      [
        "exact opposite.",
        0.023392563402922693
      ],
      [
        "Microsoft",
        0.10070725750181267
      ],
      [
        "perspective",
        0.11571862121748651
      ],
      [
        "kind",
        0.15118815917881306
      ],
      [
        "exact",
        0.15118815917881306
      ],
      [
        "opposite.",
        0.15118815917881306
      ],
      [
        "await",
        0.1949269136495839
      ],
      [
        "bias at Microsoft",
        0.20621375642052844
      ]
    ]
  },
  {
    "utterance number": 151,
    "timestamp": "2023-03-21",
    "speaker": "RBN",
    "sentences": [
      {
        "sentence number": 1,
        "text": " We had a Twitter poll, as I mentioned that RPR had posted publicly",
        "polarity": 0.0,
        "subjectivity": 0.06666666666666667
      },
      {
        "sentence number": 2,
        "text": " This had 434 respondents, some of the respondents also indicated familiarity with C#, as the reason for their choice",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " In this case, using await was much lower than `async using`",
        "polarity": 0.2,
        "subjectivity": 0.2
      },
      {
        "sentence number": 4,
        "text": " But `await using` was ahead quite handily",
        "polarity": 0.6,
        "subjectivity": 0.9
      },
      {
        "sentence number": 5,
        "text": " Rob also performed a poll",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": " on Mastodon",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 7,
        "text": " Unfortunately the polling was a bit awkward as the Elk mastodon client at the time did not support poles",
        "polarity": -0.55,
        "subjectivity": 1.0
      },
      {
        "sentence number": 8,
        "text": " So this was done using likes, these are harder to see via the link that is advertised in the slides here but the elk web application does show the same",
        "polarity": -0.05,
        "subjectivity": 0.0625
      },
      {
        "sentence number": 9,
        "text": " does show likes Which means it feasible to actually references information for the Mastodon poll",
        "polarity": 0.0,
        "subjectivity": 0.1
      },
      {
        "sentence number": 10,
        "text": " There were about 16 respondents",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 11,
        "text": " they generally favored `await using` but it was fairly neck-and-neck",
        "polarity": 0.75,
        "subjectivity": 0.9
      },
      {
        "sentence number": 12,
        "text": " We're talking here I think a difference of 7 respondents for `async using` eight folks for `await using` and one for `using await`",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 13,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.11000000000000001,
    "subjectivity": 0.5191666666666668,
    "keywords": [
      [
        "mentioned that RPR",
        0.014439706214281568
      ],
      [
        "RPR had posted",
        0.014439706214281568
      ],
      [
        "Twitter poll",
        0.030068676199629555
      ],
      [
        "posted publicly",
        0.03522017541487216
      ],
      [
        "Twitter",
        0.07188574419397567
      ],
      [
        "RPR",
        0.07188574419397567
      ],
      [
        "await",
        0.08141932791851896
      ],
      [
        "Mastodon",
        0.12953973785637515
      ],
      [
        "poll",
        0.13535805329442954
      ],
      [
        "respondents",
        0.14571252127570572
      ]
    ]
  },
  {
    "utterance number": 152,
    "timestamp": "2023-03-21",
    "speaker": "RBN",
    "sentences": [
      {
        "sentence number": 1,
        "text": " And the poll results that JHX gathered from the JS China interest group at eight respondents",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " Number of these respondents only expressed a preference that the keyword, whether it's `awaite async` come before the `using` declaration, and other than that, it's about two people seemed primarily we're had primarily People were more",
        "polarity": 0.23500000000000001,
        "subjectivity": 0.575
      },
      {
        "sentence number": 3,
        "text": " interested in a way using versus one apiece for `using await` or `async usin`g with the remaining respondents only again, having preference for the keyword ordered showing the keyword keyword first",
        "polarity": 0.16666666666666666,
        "subjectivity": 0.611111111111111
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.209375,
    "subjectivity": 0.5885416666666666,
    "keywords": [
      [
        "China interest group",
        0.0018787040069709738
      ],
      [
        "results that JHX",
        0.011260878429008907
      ],
      [
        "JHX gathered",
        0.011260878429008907
      ],
      [
        "China interest",
        0.011260878429008907
      ],
      [
        "poll results",
        0.02667141678284213
      ],
      [
        "interest group",
        0.02667141678284213
      ],
      [
        "JHX",
        0.06908786245228125
      ],
      [
        "China",
        0.06908786245228125
      ],
      [
        "keyword",
        0.08848500501351347
      ],
      [
        "respondents",
        0.08880979045722841
      ]
    ]
  },
  {
    "utterance number": 153,
    "timestamp": "2023-03-21",
    "speaker": "RBN",
    "sentences": [
      {
        "sentence number": 1,
        "text": " so, in summary, for the Google poll, we're looking about a two-to-one in favor of async versus await",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " And again, this did not include `await using` as an option",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " The Microsoft internal poll results were 11 to 1 in favor of a syntax that included `await`",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " And is within the syntax include to wait about six to five",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " Six favoring the `await using` syntax, and five favoring the using await Twitter poll Showed about a two to one in favor of awaits in some form versus async within the await it was again",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": " Two to one of folks looking at await using versus `using await`",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 7,
        "text": " Massive poll results",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 8,
        "text": " Again, there was a smaller number of respondents in this case",
        "polarity": 0.0,
        "subjectivity": 0.5
      },
      {
        "sentence number": 9,
        "text": " It\u2019s about 9 to 7 in favor of await has async",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 10,
        "text": " But 8 to 1 in favor of `await` coming before the `using` declaration in the await case,",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.5,
    "keywords": [
      [
        "Google poll",
        0.04164105053881194
      ],
      [
        "await",
        0.04663145367947106
      ],
      [
        "favor",
        0.06969910981313991
      ],
      [
        "Google",
        0.07836639708706433
      ],
      [
        "Twitter poll Showed",
        0.11625113677407152
      ],
      [
        "poll",
        0.12753039913137137
      ],
      [
        "await Twitter poll",
        0.17857650778544032
      ],
      [
        "syntax",
        0.18783823165057603
      ],
      [
        "Microsoft internal poll",
        0.19541159131105265
      ],
      [
        "async",
        0.1985839830064577
      ]
    ]
  },
  {
    "utterance number": 154,
    "timestamp": "2023-03-21",
    "speaker": "RBN",
    "sentences": [
      {
        "sentence number": 1,
        "text": " The champion's preference, in this case, I'm starting to lean towards `await using`",
        "polarity": 0.0,
        "subjectivity": 0.1
      },
      {
        "sentence number": 2,
        "text": " for a number of reasons, one",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " you still uses the `await` keyword, which clearly indicates in a weight and preserves sentiment that have been expressed by MM and others",
        "polarity": 0.10000000000000002,
        "subjectivity": 0.3833333333333333
      },
      {
        "sentence number": 4,
        "text": " More specifically that `await` and `yield` should really indicate interleaving points within JavaScript",
        "polarity": 0.35,
        "subjectivity": 0.35
      },
      {
        "sentence number": 5,
        "text": " I'm again, wary of introducing an inconsistent meaning of the, `async` keyword compared to anything else in the language, and it does feel to me more That the keyword order came to indicates that what we are waiting here is something related to the using declaration",
        "polarity": 0.0,
        "subjectivity": 0.5333333333333333
      },
      {
        "sentence number": 6,
        "text": " rather than the X or Y",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 7,
        "text": " the X identifier, the seem to be more strongly favored in public polls and matches the prior art and C# which is also one of the inspirations behind async functions in JavaScript as it stands today",
        "polarity": 0.18,
        "subjectivity": 0.4333333333333333
      },
      {
        "sentence number": 8,
        "text": " But given that, I still want to kind of get some feedback from committee",
        "polarity": 0.6,
        "subjectivity": 0.9
      },
      {
        "sentence number": 9,
        "text": " see on any specific preference as this has been something that's we haven't really had a strong preference from others in the committee",
        "polarity": 0.2111111111111111,
        "subjectivity": 0.3527777777777778
      },
      {
        "sentence number": 10,
        "text": " So I'll put this up on the screen",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 11,
        "text": " I don't know if we want to take some time to have folks put some answers on the queue or if we want to find a way to try to use a temperature check as a way to do this",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 12,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.18333333333333335,
    "subjectivity": 0.4317708333333334,
    "keywords": [
      [
        "starting to lean",
        0.023115234091390536
      ],
      [
        "champion preference",
        0.06263449071967593
      ],
      [
        "await",
        0.0839880085236818
      ],
      [
        "keyword",
        0.1250190046337872
      ],
      [
        "preference",
        0.13071382263069237
      ],
      [
        "case",
        0.13455724520385784
      ],
      [
        "champion",
        0.15030965304056154
      ],
      [
        "starting",
        0.15030965304056154
      ],
      [
        "lean",
        0.15030965304056154
      ],
      [
        "number of reasons",
        0.15399299995628563
      ]
    ]
  },
  {
    "utterance number": 155,
    "timestamp": "2023-03-21",
    "speaker": "CDA",
    "sentences": [
      {
        "sentence number": 1,
        "text": " We (IBM) support the `await using` form, we agree that `async` was a bit awkward for the reasons that you mentioned and, unscientifically, we just sort of expect the `await` to come first",
        "polarity": -0.175,
        "subjectivity": 0.6666666666666666
      },
      {
        "sentence number": 2,
        "text": " So we kind of have a preference on that one",
        "polarity": 0.6,
        "subjectivity": 0.9
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.08333333333333333,
    "subjectivity": 0.7444444444444445,
    "keywords": [
      [
        "bit awkward",
        0.021118550617721717
      ],
      [
        "sort of expect",
        0.021118550617721717
      ],
      [
        "IBM",
        0.039954682789842065
      ],
      [
        "await",
        0.04741935196770169
      ],
      [
        "form",
        0.06946630911415047
      ],
      [
        "async",
        0.06946630911415047
      ],
      [
        "unscientifically",
        0.06946630911415047
      ],
      [
        "support",
        0.10445937877446199
      ],
      [
        "agree",
        0.1438116176495284
      ],
      [
        "bit",
        0.1438116176495284
      ]
    ]
  },
  {
    "utterance number": 156,
    "timestamp": "2023-03-21",
    "speaker": "MM",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Just confirming what RBN said that all the concerns that I had that led me to favored `using await` are completely satisfied by `await using`, I'm very happy with that result",
        "polarity": 0.7666666666666666,
        "subjectivity": 0.9666666666666667
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.7666666666666666,
    "subjectivity": 0.9666666666666667,
    "keywords": [
      [
        "confirming what RBN",
        0.0068330400702793425
      ],
      [
        "completely satisfied",
        0.012220051967672856
      ],
      [
        "RBN",
        0.06176713399260923
      ],
      [
        "await",
        0.06706294711327264
      ],
      [
        "favored",
        0.07895278969183914
      ],
      [
        "result",
        0.07895278969183914
      ],
      [
        "confirming",
        0.10987504304330521
      ],
      [
        "concerns",
        0.10987504304330521
      ],
      [
        "led",
        0.10987504304330521
      ],
      [
        "completely",
        0.10987504304330521
      ]
    ]
  },
  {
    "utterance number": 157,
    "timestamp": "2023-03-21",
    "speaker": "KG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I still strongly prefer `async using` but I don't think there's any objective way to resolve this given that there's not overwhelming consensus among the community, which is the only thing that a poll could possibly have shown us that would have actually determined the outcome to this",
        "polarity": 0.030555555555555548,
        "subjectivity": 0.6555555555555556
      },
      {
        "sentence number": 2,
        "text": " I don't think we have much of a way to solve this other than other than just, I'm saying we pick one and as much as I would like us to pick the thing that I like, we have to pick something",
        "polarity": 0.037500000000000006,
        "subjectivity": 0.2875
      },
      {
        "sentence number": 3,
        "text": " and I'm okay with deferring to champion's preference here",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.07575757575757575,
    "subjectivity": 0.5075757575757576,
    "keywords": [
      [
        "strongly prefer",
        0.012299914623732871
      ],
      [
        "overwhelming consensus",
        0.01521077666763751
      ],
      [
        "poll could possibly",
        0.01521077666763751
      ],
      [
        "possibly have shown",
        0.01521077666763751
      ],
      [
        "determined the outcome",
        0.01521077666763751
      ],
      [
        "thing",
        0.08550951382537614
      ],
      [
        "pick",
        0.09684786084299209
      ],
      [
        "prefer",
        0.0992648090269004
      ],
      [
        "async",
        0.0992648090269004
      ],
      [
        "community",
        0.0992648090269004
      ]
    ]
  },
  {
    "utterance number": 158,
    "timestamp": "2023-03-21",
    "speaker": "JFI",
    "sentences": [
      {
        "sentence number": 1,
        "text": " RBN, you mentioned that you know `await using` was an inconsistent usage of `await`",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " But doesn't this apply to await to",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " I mean, my, my major concern with the weight using is that, you know, I expect `await` to denote that yielded",
        "polarity": -0.125,
        "subjectivity": 0.59375
      },
      {
        "sentence number": 4,
        "text": " Point, like right there",
        "polarity": 0.2857142857142857,
        "subjectivity": 0.5357142857142857
      },
      {
        "sentence number": 5,
        "text": " And that this is actually saying that it's going to potentially `await` later",
        "polarity": 0.0,
        "subjectivity": 0.3666666666666667
      },
      {
        "sentence number": 6,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0059523809523809494,
    "subjectivity": 0.4705357142857143,
    "keywords": [
      [
        "inconsistent usage",
        0.05375562341628009
      ],
      [
        "RBN",
        0.0544936070009979
      ],
      [
        "await",
        0.11077404977944463
      ],
      [
        "mentioned",
        0.22586139115841616
      ],
      [
        "inconsistent",
        0.22586139115841616
      ],
      [
        "usage",
        0.22586139115841616
      ],
      [
        "denote that yielded",
        0.4496709426353092
      ],
      [
        "Point",
        0.4799980595820038
      ],
      [
        "apply",
        0.5033019958793703
      ],
      [
        "expect",
        0.5202993262994523
      ]
    ]
  },
  {
    "utterance number": 159,
    "timestamp": "2023-03-21",
    "speaker": "RBN",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Well, I have two responses to that one",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " Is that `await`",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " So `await using`, I think is still more consistent than `async using` would be because again, `async` as a keyword has no similar meeting in the language",
        "polarity": 0.25,
        "subjectivity": 0.3833333333333333
      },
      {
        "sentence number": 4,
        "text": " Its purposes has been both in things that are currently in the language and things that are proposed, aimed towards indicating the allowing a specific syntax within the body of a function or in the case of `async do` expressions within the body of that block",
        "polarity": 0.0,
        "subjectivity": 0.2625
      },
      {
        "sentence number": 5,
        "text": " `await` to be permitted to be used",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": " And the second thing I would say is I actually would argue that it actually it isn't inconsistent",
        "polarity": 0.0,
        "subjectivity": 0.06666666666666667
      },
      {
        "sentence number": 7,
        "text": " If we were going to make that consistency argument, I think it would have applied to `for await` only in that",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 8,
        "text": " So, `for await` is interesting because it seems both immediate and deferred",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 9,
        "text": " When I say, seems immediate is that a for-await doesn't await the x declaration, we say `for await (const x of y)` it does not await",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 10,
        "text": " the x, it awaits the results",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 11,
        "text": " of calling the iterator, the symbol dot iterator method on y",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 12,
        "text": " much, like they using declaration will in the although it is deferred away",
        "polarity": 0.2,
        "subjectivity": 0.2
      },
      {
        "sentence number": 13,
        "text": " The result of calling symbol that disposed on exit",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 14,
        "text": " Some point",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 15,
        "text": " but again, or a way in that case, seems to be very immediate",
        "polarity": 0.2,
        "subjectivity": 0.3
      },
      {
        "sentence number": 16,
        "text": " But it was also deferred",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 17,
        "text": " Because if I say `for await` context of why and I write a bunch of lines of code and then it some point I might have an if that says `break` now there is also an implicit `await` that occurs behind the scenes that is far divorced from where the Declaration and the `await` actually occurs",
        "polarity": -0.10000000000000002,
        "subjectivity": 0.6
      },
      {
        "sentence number": 18,
        "text": " because we still now have to await her return",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 19,
        "text": " So for-await, provides both a implicit or both an immediate await and implicit defered await",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 20,
        "text": " A using declaration of this case is just an extension of the implicit defer to wait",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 21,
        "text": " So I think it is still consistent with what we have in the language today",
        "polarity": 0.25,
        "subjectivity": 0.25
      },
      {
        "sentence number": 22,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.1,
    "subjectivity": 0.3703125,
    "keywords": [
      [
        "await",
        0.033056823488259196
      ],
      [
        "declaration",
        0.12285472673104454
      ],
      [
        "async",
        0.143422875465434
      ],
      [
        "language",
        0.15363346441322365
      ],
      [
        "implicit",
        0.15752751073524032
      ],
      [
        "deferred",
        0.2039599385504351
      ],
      [
        "case",
        0.2110299199040219
      ],
      [
        "responses",
        0.25639836613531947
      ],
      [
        "things",
        0.26434014869783845
      ],
      [
        "body",
        0.2686000039933423
      ]
    ]
  },
  {
    "utterance number": 160,
    "timestamp": "2023-03-21",
    "speaker": "JFI",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Okay, thanks for the response",
        "polarity": 0.35,
        "subjectivity": 0.35
      },
      {
        "sentence number": 2,
        "text": " I have a different topic I'll throw in the queue",
        "polarity": 0.0,
        "subjectivity": 0.6
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.2333333333333333,
    "subjectivity": 0.4333333333333333,
    "keywords": [
      [
        "response",
        0.12363091320521931
      ],
      [
        "topic I throw",
        0.2766850298235749
      ],
      [
        "queue",
        0.32883716426354986
      ],
      [
        "topic",
        0.46553351027698087
      ],
      [
        "throw",
        0.46553351027698087
      ]
    ]
  },
  {
    "utterance number": 161,
    "timestamp": "2023-03-21",
    "speaker": "SYG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I, like KG, also still prefer `async using`",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " but for `await using` maybe, in your slide for `await using` you said, one of the reasons you didn't go with it was because the requirement of cover grammar",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " So is that going to be hard to parse",
        "polarity": -0.2916666666666667,
        "subjectivity": 0.5416666666666666
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": -0.2916666666666667,
    "subjectivity": 0.5416666666666666,
    "keywords": [
      [
        "await",
        0.12394052132300516
      ],
      [
        "prefer",
        0.13763092523581996
      ],
      [
        "async",
        0.13763092523581996
      ],
      [
        "cover grammar",
        0.19834029835856337
      ],
      [
        "requirement of cover",
        0.2745408272450236
      ],
      [
        "hard to parse",
        0.33198751366134205
      ],
      [
        "grammar",
        0.35661877582782714
      ],
      [
        "parse",
        0.4467687583148886
      ],
      [
        "slide",
        0.4641160561093645
      ],
      [
        "reasons",
        0.4641160561093645
      ]
    ]
  },
  {
    "utterance number": 162,
    "timestamp": "2023-03-21",
    "speaker": "RBN",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Let me go back to that slide",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " I don't believe it will be",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " I've had conversations with oothers on the committee",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " I think, especially specifically KG who said that we really shouldn't use the complexity of cover grammars as an excuse not to try to pick the right fit",
        "polarity": 0.16714285714285715,
        "subjectivity": 0.4371428571428571
      },
      {
        "sentence number": 5,
        "text": " I mostly avoided originally to avoid the cover grammar, which is why I chose the using await ordering to begin with",
        "polarity": 0.4375,
        "subjectivity": 0.625
      },
      {
        "sentence number": 6,
        "text": " the weight using grammar",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 7,
        "text": " if, in a L1 grammar, because we are when we are parsing the `using` we're trying to differentiate between say a weight using and weights of some other expression",
        "polarity": -0.125,
        "subjectivity": 0.375
      },
      {
        "sentence number": 8,
        "text": " When in many cases when performing that type of look ahead we might be performing to look ahead between await using we're using his lookahead character or lookahead token",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 9,
        "text": " So in LR1, it becomes more complex because we now need to cover grammar to differentiate, because where we get when we are deep within parsing and an expression like an `await` expression",
        "polarity": 0.06666666666666667,
        "subjectivity": 0.43333333333333335
      },
      {
        "sentence number": 10,
        "text": " It's a bit awkward to then back out and then parsing it again as a statement, but not impossible",
        "polarity": -0.08888888888888889,
        "subjectivity": 0.6666666666666666
      },
      {
        "sentence number": 11,
        "text": " Now, the interesting differentiating Factor here is that there is a no-line-terminator restriction between `await` and `using` and `using` does not allow binding patterns; therefore, you cannot have `await using [` to a you're awaiting an element of a `using` array, therefore in a conventional parser or in the TypeScript parser for example, which is a little bit more forgiving when it comes to look ahead, we don't enforce LR 1 we can use single token look ahead because the next token after await, using must be an identifier for it to be in a way using declaration",
        "polarity": 0.09970238095238097,
        "subjectivity": 0.3452380952380953
      },
      {
        "sentence number": 12,
        "text": " So In a parser that doesn't necessarily necessary to comply with LR 1, it's not that complex to look ahead one more token to look at that and a parser that requires all are one or within the grammar that we specify",
        "polarity": 0.06666666666666667,
        "subjectivity": 0.6333333333333333
      },
      {
        "sentence number": 13,
        "text": " today",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 14,
        "text": " we would need to implement a cover grammar to wrap this",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 15,
        "text": " We would also need to do the same thing for async using We're that the case because again async using Central to be",
        "polarity": 0.0,
        "subjectivity": 0.1875
      },
      {
        "sentence number": 16,
        "text": " has conflated with async Arrow",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 17,
        "text": " At the top level, this is valid JavaScript",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 18,
        "text": " I have run the copied and pasted async using arrow curly into Node and it runs fine",
        "polarity": 0.4166666666666667,
        "subjectivity": 0.5
      },
      {
        "sentence number": 19,
        "text": " Therefore we would need to disambiguate that again",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 20,
        "text": " Once we hit `async` and `using` that, the next token is in this case",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 21,
        "text": " You have to be a identifier and not an so, I think that complexity exists with both `async using` and `await using`",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 22,
        "text": " I'd also say, I don't think that that is insurmountable",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 23,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.12446428571428572,
    "subjectivity": 0.4319047619047619,
    "keywords": [
      [
        "grammar",
        0.05998976276075989
      ],
      [
        "await",
        0.06001305351997515
      ],
      [
        "cover grammar",
        0.06127441004812708
      ],
      [
        "async",
        0.07980989594731895
      ],
      [
        "ahead",
        0.09030476253261792
      ],
      [
        "token",
        0.09989088845283935
      ],
      [
        "cover",
        0.107851241623326
      ],
      [
        "parser",
        0.12859877413015097
      ],
      [
        "expression",
        0.1820964960630764
      ],
      [
        "parsing",
        0.18241759867028012
      ]
    ]
  },
  {
    "utterance number": 163,
    "timestamp": "2023-03-21",
    "speaker": "USA",
    "sentences": [
      {
        "sentence number": 1,
        "text": " All right, you have nine minutes to go next up",
        "polarity": 0.14285714285714285,
        "subjectivity": 0.26785714285714285
      },
      {
        "sentence number": 2,
        "text": " We have WH",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.14285714285714285,
    "subjectivity": 0.26785714285714285,
    "keywords": [
      [
        "minutes",
        0.2005079697193566
      ]
    ]
  },
  {
    "utterance number": 164,
    "timestamp": "2023-03-21",
    "speaker": "WH",
    "sentences": [
      {
        "sentence number": 1,
        "text": " There is no spec for this that I've seen so I can't tell if the solution works or not",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " I'm concerned about cases like `await using of` or `await using as` and so on for which even if you do have an identifier, what were you using",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " It's not always clear what to do",
        "polarity": 0.10000000000000002,
        "subjectivity": 0.3833333333333333
      },
      {
        "sentence number": 4,
        "text": " There are also possible issues with `using` followed by a slash",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 5,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.05000000000000001,
    "subjectivity": 0.6916666666666667,
    "keywords": [
      [
        "solution works",
        0.03346752176983843
      ],
      [
        "await",
        0.11657848627288137
      ],
      [
        "spec",
        0.17995476918065306
      ],
      [
        "solution",
        0.17995476918065306
      ],
      [
        "works",
        0.17995476918065306
      ],
      [
        "concerned about cases",
        0.23011092646901882
      ],
      [
        "identifier",
        0.34609258272189697
      ],
      [
        "concerned",
        0.43251032788901067
      ],
      [
        "cases",
        0.43251032788901067
      ],
      [
        "slash",
        0.4858603604660594
      ]
    ]
  },
  {
    "utterance number": 165,
    "timestamp": "2023-03-21",
    "speaker": "RBN",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Yeah",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " so we don't have a specific syntax proposal for this at the moment",
        "polarity": 0.0,
        "subjectivity": 0.125
      },
      {
        "sentence number": 3,
        "text": " I plan to look at that and whatever that result being is long as it",
        "polarity": -0.05,
        "subjectivity": 0.4
      },
      {
        "sentence number": 4,
        "text": " My intention would be that if we have the editors' review and show that that syntax change would be normatively equivalent to the `using await` syntax we currently support",
        "polarity": 0.0,
        "subjectivity": 0.4
      },
      {
        "sentence number": 5,
        "text": " That might be",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": " Acceptable enough to still reach stage 3 pending that change",
        "polarity": 0.0,
        "subjectivity": 0.5
      },
      {
        "sentence number": 7,
        "text": " I do think so",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 8,
        "text": " We have looked at things like using declarations in for of already we have to ban `of` as an identifier so we don't have: `for of of` etcetera",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 9,
        "text": " So we are looking at, we have looked at that for using as well",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 10,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": -0.0125,
    "subjectivity": 0.35625,
    "keywords": [
      [
        "specific syntax proposal",
        0.1078133640631704
      ],
      [
        "Yeah",
        0.11305787978368322
      ],
      [
        "syntax",
        0.13647158775449098
      ],
      [
        "specific syntax",
        0.20106513261295136
      ],
      [
        "syntax proposal",
        0.20106513261295136
      ],
      [
        "looked",
        0.23758005060341406
      ],
      [
        "change",
        0.25187292096515884
      ],
      [
        "syntax change",
        0.25982821060599715
      ],
      [
        "moment",
        0.35909917066604347
      ],
      [
        "specific",
        0.40889020414525634
      ]
    ]
  },
  {
    "utterance number": 166,
    "timestamp": "2023-03-21",
    "speaker": "WH",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I think this is stretching the process too far",
        "polarity": 0.1,
        "subjectivity": 1.0
      },
      {
        "sentence number": 2,
        "text": " The process requires a complete spec 10 days before trying to approve something for stage 3",
        "polarity": 0.1,
        "subjectivity": 0.4
      },
      {
        "sentence number": 3,
        "text": " And asking for conditional approval without even having seen the spec would be putting me in a very awkward situation",
        "polarity": -0.78,
        "subjectivity": 1.0
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": -0.19333333333333336,
    "subjectivity": 0.7999999999999999,
    "keywords": [
      [
        "stretching the process",
        0.06948545957260942
      ],
      [
        "process",
        0.15603292546019187
      ],
      [
        "process requires",
        0.1750249966833527
      ],
      [
        "stretching",
        0.20819620217703394
      ],
      [
        "spec",
        0.263969010071747
      ],
      [
        "requires a complete",
        0.29505384365896575
      ],
      [
        "complete spec",
        0.3368871169792064
      ],
      [
        "awkward situation",
        0.3560396769982751
      ],
      [
        "days",
        0.36886659703751884
      ],
      [
        "stage",
        0.36886659703751884
      ]
    ]
  },
  {
    "utterance number": 167,
    "timestamp": "2023-03-21",
    "speaker": "DE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I think it's reasonable to ask that if we select here, we want to go about the approach of `await using`, which I think we should, you know, resolved on a committee to",
        "polarity": 0.2,
        "subjectivity": 0.6
      },
      {
        "sentence number": 2,
        "text": " We want to try, then it's reasonable to ask that we bring this back to committee to confirm the grammar",
        "polarity": 0.1,
        "subjectivity": 0.3
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.13333333333333333,
    "subjectivity": 0.39999999999999997,
    "keywords": [
      [
        "committee to confirm",
        0.05824342586658708
      ],
      [
        "reasonable",
        0.07102325863811512
      ],
      [
        "committee",
        0.084855681927439
      ],
      [
        "confirm the grammar",
        0.09789741327408728
      ],
      [
        "await",
        0.09844064774616687
      ],
      [
        "resolved",
        0.09844064774616687
      ],
      [
        "bring this back",
        0.11753340939066508
      ],
      [
        "select",
        0.12141417099360245
      ],
      [
        "approach",
        0.12141417099360245
      ],
      [
        "back to committee",
        0.1242482099003534
      ]
    ]
  },
  {
    "utterance number": 168,
    "timestamp": "2023-03-21",
    "speaker": "WH",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Yeah, that's my preferred approach",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " What I heard just now was that we might have conditional approval and I'm reluctant to do that without even having seen the spec",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "preferred approach",
        0.015099935621315529
      ],
      [
        "Yeah",
        0.05899937629682816
      ],
      [
        "approach",
        0.10028582371075691
      ],
      [
        "preferred",
        0.14832923246533666
      ],
      [
        "conditional approval",
        0.165573765898185
      ],
      [
        "spec",
        0.2790829227183407
      ],
      [
        "heard",
        0.37689977775222827
      ],
      [
        "conditional",
        0.37689977775222827
      ],
      [
        "approval",
        0.37689977775222827
      ],
      [
        "reluctant",
        0.37689977775222827
      ]
    ]
  },
  {
    "utterance number": 169,
    "timestamp": "2023-03-21",
    "speaker": "DE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I'm saying I think that's reasonable, but also I don't see reason for concern about this technically I think we should be able to work out all the cases",
        "polarity": 0.2333333333333333,
        "subjectivity": 0.44166666666666665
      },
      {
        "sentence number": 2,
        "text": " But still it's a reasonable request",
        "polarity": 0.2,
        "subjectivity": 0.6
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.22499999999999998,
    "subjectivity": 0.48124999999999996,
    "keywords": [
      [
        "reason for concern",
        0.024025565434766742
      ],
      [
        "reasonable request",
        0.09226830419583032
      ],
      [
        "cases",
        0.11159279293228641
      ],
      [
        "reasonable",
        0.13905502865190497
      ],
      [
        "reason",
        0.1531727145735673
      ],
      [
        "concern",
        0.1531727145735673
      ],
      [
        "technically",
        0.1531727145735673
      ],
      [
        "work",
        0.1531727145735673
      ],
      [
        "request",
        0.30374316422779024
      ]
    ]
  },
  {
    "utterance number": 170,
    "timestamp": "2023-03-21",
    "speaker": "DE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I'm next on the queue",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " I'd like to ask - Ron previously said maybe a temperature check and I think it'd be great if we could resolve today about whether we want to go in this direction that RBN is proposing",
        "polarity": 0.3166666666666667,
        "subjectivity": 0.4583333333333333
      },
      {
        "sentence number": 3,
        "text": " using the `await using` syntax",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " that work as a temperature",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " Check with the problem be",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": " Are you happy with this sytax",
        "polarity": 0.8,
        "subjectivity": 1.0
      },
      {
        "sentence number": 7,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.3583333333333334,
    "subjectivity": 0.47916666666666663,
    "keywords": [
      [
        "RBN is proposing",
        0.11478767061557436
      ],
      [
        "Ron previously",
        0.11621117677261367
      ],
      [
        "direction that RBN",
        0.1517053493631771
      ],
      [
        "queue",
        0.1574767819070655
      ],
      [
        "Ron",
        0.20675625322261326
      ],
      [
        "temperature",
        0.23857844023896488
      ],
      [
        "RBN",
        0.2615872861260788
      ],
      [
        "check",
        0.2957698370976648
      ],
      [
        "resolve today",
        0.33969766096627624
      ],
      [
        "temperature check",
        0.39325679852506634
      ]
    ]
  },
  {
    "utterance number": 171,
    "timestamp": "2023-03-21",
    "speaker": "RBN",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Do we need a temperature check or would it be better to just repeat request consensus for `await using`",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 2,
        "text": " My biggest concern is that for the most part most members of committee that have discussed this in the past, Really have not expressed strong preference",
        "polarity": 0.27666666666666667,
        "subjectivity": 0.43666666666666665
      },
      {
        "sentence number": 3,
        "text": " and I think we did a temperature check in the last meeting and that really wasn't very fruitful",
        "polarity": 0.13333333333333333,
        "subjectivity": 0.18888888888888888
      },
      {
        "sentence number": 4,
        "text": " So, I think it might be better to just ask for consensus on a weight using as the gems of that slide consensus on",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 5,
        "text": " `await using` as the syntax to use going forward and that we would make those changes to make this work in the future",
        "polarity": 0.0,
        "subjectivity": 0.125
      },
      {
        "sentence number": 6,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.25303030303030305,
    "subjectivity": 0.3522727272727273,
    "keywords": [
      [
        "repeat request consensus",
        0.010629176164413877
      ],
      [
        "temperature check",
        0.02400448439294068
      ],
      [
        "repeat request",
        0.029146856688817207
      ],
      [
        "request consensus",
        0.05880216930413634
      ],
      [
        "temperature",
        0.09755928558094903
      ],
      [
        "consensus",
        0.11000187407528648
      ],
      [
        "expressed strong preference.",
        0.11165546908981398
      ],
      [
        "check",
        0.1173893710043367
      ],
      [
        "await",
        0.12579932934307647
      ],
      [
        "repeat",
        0.16828956460803993
      ]
    ]
  },
  {
    "utterance number": 172,
    "timestamp": "2023-03-21",
    "speaker": "DE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Okay",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 2,
        "text": " if we're not doing a temperature check, I just want to register, I would be strongly positive",
        "polarity": 0.22727272727272727,
        "subjectivity": 0.5454545454545454
      },
      {
        "sentence number": 3,
        "text": " If we had a temperature check, I think it's great that you did so much detailed look into this",
        "polarity": 0.6000000000000001,
        "subjectivity": 0.75
      },
      {
        "sentence number": 4,
        "text": " and I'm happy with your proposal",
        "polarity": 0.8,
        "subjectivity": 1.0
      },
      {
        "sentence number": 5,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.5454545454545455,
    "subjectivity": 0.7090909090909091,
    "keywords": [
      [
        "temperature check",
        0.043998968026003914
      ],
      [
        "check",
        0.12483732323022521
      ],
      [
        "temperature",
        0.16197201139198075
      ],
      [
        "strongly positive",
        0.17761164777611452
      ],
      [
        "register",
        0.34749523526392095
      ],
      [
        "positive",
        0.34749523526392095
      ],
      [
        "strongly",
        0.4340307474356052
      ],
      [
        "proposal",
        0.4369050564108386
      ],
      [
        "great",
        0.5276993038251123
      ],
      [
        "detailed",
        0.5276993038251123
      ]
    ]
  },
  {
    "utterance number": 173,
    "timestamp": "2023-03-21",
    "speaker": "RBN",
    "sentences": [
      {
        "sentence number": 1,
        "text": " At this point",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " then I would like to request at least consensus on `await using`",
        "polarity": -0.3,
        "subjectivity": 0.4
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": -0.3,
    "subjectivity": 0.4,
    "keywords": [
      [
        "point",
        0.12363091320521931
      ],
      [
        "await",
        0.32883716426354986
      ],
      [
        "request",
        0.46553351027698087
      ],
      [
        "consensus",
        0.46553351027698087
      ]
    ]
  },
  {
    "utterance number": 174,
    "timestamp": "2023-03-21",
    "speaker": "MM",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I support",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "support",
        0.15831692877998726
      ]
    ]
  },
  {
    "utterance number": 175,
    "timestamp": "2023-03-21",
    "speaker": "CDA",
    "sentences": [
      {
        "sentence number": 1,
        "text": " IBM supports",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "IBM supports",
        0.013797198203993007
      ],
      [
        "IBM",
        0.08596317751626563
      ],
      [
        "supports",
        0.15831692877998726
      ]
    ]
  },
  {
    "utterance number": 176,
    "timestamp": "2023-03-21",
    "speaker": "DE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " yeah",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " well KG are you okay with this procedurally",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.5,
    "subjectivity": 0.5,
    "keywords": [
      [
        "yeah",
        0.05899937629682816
      ],
      [
        "procedurally",
        0.46553351027698087
      ]
    ]
  },
  {
    "utterance number": 177,
    "timestamp": "2023-03-21",
    "speaker": "KG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " We're just saying that we like the syntax but presumably the specification for the syntax will have to come back and get approval",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "syntax",
        0.07334489383741181
      ],
      [
        "approval",
        0.09492398510093508
      ],
      [
        "specification",
        0.1408007092310104
      ],
      [
        "back",
        0.1408007092310104
      ]
    ]
  },
  {
    "utterance number": 178,
    "timestamp": "2023-03-21",
    "speaker": "DE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Yeah",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " I'm just confirming that we're all on the same page about that because previously there were concerns raised about that",
        "polarity": -0.08333333333333333,
        "subjectivity": 0.14583333333333331
      },
      {
        "sentence number": 3,
        "text": " Does that address your concerns WH",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": -0.08333333333333333,
    "subjectivity": 0.14583333333333331,
    "keywords": [
      [
        "Yeah",
        0.0857107178166134
      ],
      [
        "concerns",
        0.2243260889307696
      ],
      [
        "concerns raised",
        0.23411052569587526
      ],
      [
        "confirming",
        0.42282153983658227
      ],
      [
        "page",
        0.42282153983658227
      ],
      [
        "previously",
        0.42282153983658227
      ],
      [
        "raised",
        0.42282153983658227
      ],
      [
        "address",
        0.5162777043343642
      ],
      [
        "address your concerns",
        0.5471370692637882
      ]
    ]
  },
  {
    "utterance number": 179,
    "timestamp": "2023-03-21",
    "speaker": "WH",
    "sentences": [
      {
        "sentence number": 1,
        "text": " The currently active question is, which syntax would people like",
        "polarity": -0.13333333333333333,
        "subjectivity": 0.6
      },
      {
        "sentence number": 2,
        "text": " Let's stick to that question",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " I have no objection to `await using` in aesthetics but I haven't seen a spec",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": -0.13333333333333333,
    "subjectivity": 0.6,
    "keywords": [
      [
        "syntax would people",
        0.07651132757680232
      ],
      [
        "active question",
        0.15199889926387708
      ],
      [
        "question",
        0.24745989045062047
      ],
      [
        "active",
        0.26659596182680106
      ],
      [
        "syntax",
        0.26659596182680106
      ],
      [
        "people",
        0.26659596182680106
      ],
      [
        "await",
        0.5085107067623793
      ],
      [
        "spec",
        0.5085107067623793
      ],
      [
        "stick",
        0.5580064212301282
      ],
      [
        "objection",
        0.647806262736893
      ]
    ]
  },
  {
    "utterance number": 180,
    "timestamp": "2023-03-21",
    "speaker": "DE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Okay, I'm asking because we need the conclusion to explain clearly what we decided",
        "polarity": 0.3,
        "subjectivity": 0.44166666666666665
      },
      {
        "sentence number": 2,
        "text": " so good",
        "polarity": 0.7,
        "subjectivity": 0.6000000000000001
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.4333333333333333,
    "subjectivity": 0.49444444444444446,
    "keywords": [
      [
        "conclusion to explain",
        0.04188746641162499
      ],
      [
        "decided",
        0.12363091320521931
      ],
      [
        "conclusion",
        0.2005079697193566
      ],
      [
        "explain",
        0.2005079697193566
      ],
      [
        "good",
        0.32883716426354986
      ]
    ]
  },
  {
    "utterance number": 181,
    "timestamp": "2023-03-21",
    "speaker": "SFC",
    "sentences": [
      {
        "sentence number": 1,
        "text": " All right",
        "polarity": 0.2857142857142857,
        "subjectivity": 0.5357142857142857
      },
      {
        "sentence number": 2,
        "text": " I think I do",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " Good research and, you know, I was also in the `async using` camp but now that I've seen this research, I've warmed up to the idea of `await using` and I think that we should use",
        "polarity": 0.7,
        "subjectivity": 0.6000000000000001
      },
      {
        "sentence number": 4,
        "text": " You should try to do things like this more often when trying to solve these like bikeshedding-type problems",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 5,
        "text": " And yeah, just what I've been saying like that so, I believe we have unless there are any other objections",
        "polarity": -0.125,
        "subjectivity": 0.375
      },
      {
        "sentence number": 6,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.34017857142857144,
    "subjectivity": 0.5026785714285714,
    "keywords": [
      [
        "Good research",
        0.17799305524833064
      ],
      [
        "research",
        0.19400934179644833
      ],
      [
        "bikeshedding-type problems",
        0.2745882346528179
      ],
      [
        "Good",
        0.38941052882724486
      ],
      [
        "async",
        0.38941052882724486
      ],
      [
        "camp",
        0.38941052882724486
      ],
      [
        "await",
        0.38941052882724486
      ],
      [
        "problems",
        0.43869992107066147
      ],
      [
        "warmed",
        0.4405156276069823
      ],
      [
        "idea",
        0.4405156276069823
      ]
    ]
  },
  {
    "utterance number": 182,
    "timestamp": "2023-03-21",
    "speaker": "SYG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I want to talk about the parsing difficulty",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " We will wait for the spec with the full detailed spec, which will give us an understanding of the grammar difficulty",
        "polarity": 0.375,
        "subjectivity": 0.65
      },
      {
        "sentence number": 3,
        "text": " I think that's a possible, a separate question from the parsing difficulty",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 4,
        "text": " What like what are your thoughts on the ranked choice",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " if there is parsing difficulty",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": " Like, is your opinion",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 7,
        "text": " that we should stick with it",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 8,
        "text": " Even if there is parking difficulty or do you feel on the fence enough that we can go with",
        "polarity": 0.0,
        "subjectivity": 0.5
      },
      {
        "sentence number": 9,
        "text": " using await",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 10,
        "text": " If it's simpler",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 11,
        "text": " Even if it's like less ideal from your current View",
        "polarity": 0.24444444444444446,
        "subjectivity": 0.48888888888888893
      },
      {
        "sentence number": 12,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.2119047619047619,
    "subjectivity": 0.6095238095238095,
    "keywords": [
      [
        "parsing difficulty",
        0.06303434050239289
      ],
      [
        "difficulty",
        0.0872703632422115
      ],
      [
        "parsing",
        0.12148452019537734
      ],
      [
        "full detailed spec",
        0.19396134642249316
      ],
      [
        "talk",
        0.2159260198945769
      ],
      [
        "spec",
        0.21970010174481475
      ],
      [
        "grammar difficulty",
        0.27116333382401636
      ],
      [
        "detailed spec",
        0.27357595518359107
      ],
      [
        "full detailed",
        0.31404879481367093
      ],
      [
        "View",
        0.41048618338984544
      ]
    ]
  },
  {
    "utterance number": 183,
    "timestamp": "2023-03-21",
    "speaker": "RBN",
    "sentences": [
      {
        "sentence number": 1,
        "text": " If I were to rank our choices, to be honest, I would probably stick with `using await`",
        "polarity": -0.10000000000000003,
        "subjectivity": 0.9
      },
      {
        "sentence number": 2,
        "text": " statements, that's already specified",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " the `await using` doesn't reduce complexity in the grammar",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " I know that I've already been working on TypeScript's implementation of synchronous `using` declarations and also its implementation of `async` using declarations, although if this is since this won't have stage 3 advancement, it's not likely something we will be shipping in our in when we reach (",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 5,
        "text": ") TypeScript but I have looked at the at these complexity of updating the TypeScript, parser to support parsing 08 using actually to support all three of these cases `using await` which is currently would currently be supported await using as a prefix modifier and and even modifier",
        "polarity": 0.0,
        "subjectivity": 0.3
      },
      {
        "sentence number": 6,
        "text": " Even `async using` and the again the same things that I found where that `using await` is the only one that's really simple because it doesn't require the cover grammar",
        "polarity": 0.0,
        "subjectivity": 0.49404761904761907
      },
      {
        "sentence number": 7,
        "text": " `await using` and `async using` both require more than one token of look ahead",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 8,
        "text": " In the case of `await using`, it's always going to be",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 9,
        "text": " It's easy to differentiate at the statement level and TypeScript because we can look ahead to `using` and we can look ahead to if the next token is identifier and there's no line Terminator",
        "polarity": 0.21666666666666667,
        "subjectivity": 0.4166666666666667
      },
      {
        "sentence number": 10,
        "text": " Then this can only be a using declaration",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 11,
        "text": " So the parts for us isn't terribly complicated",
        "polarity": -0.5,
        "subjectivity": 1.0
      },
      {
        "sentence number": 12,
        "text": " I imagine the grammar too",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 13,
        "text": " to support LR1 would be more complicated for both `await using` and the `async using` case",
        "polarity": 0.0,
        "subjectivity": 0.75
      },
      {
        "sentence number": 14,
        "text": " Because again, there are existing there is existing Acts",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 15,
        "text": " that matches that we would have to disambiguate,",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.01458333333333333,
    "subjectivity": 0.6259672619047618,
    "keywords": [
      [
        "await",
        0.03594280407981781
      ],
      [
        "rank our choices",
        0.046240118142348685
      ],
      [
        "async",
        0.08646993980822305
      ],
      [
        "TypeScript",
        0.12021040354622704
      ],
      [
        "ahead",
        0.16089105003144902
      ],
      [
        "grammar",
        0.1663134623034898
      ],
      [
        "support",
        0.17782266067545724
      ],
      [
        "choices",
        0.20095164544842392
      ],
      [
        "honest",
        0.20095164544842392
      ],
      [
        "rank",
        0.2199358364610452
      ]
    ]
  },
  {
    "utterance number": 184,
    "timestamp": "2023-03-21",
    "speaker": "SYG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Okay",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 2,
        "text": " Okay",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 3,
        "text": " so so I understand we're out of time but I do think it's important to to resolve this",
        "polarity": 0.4,
        "subjectivity": 1.0
      },
      {
        "sentence number": 4,
        "text": " When you ask for a consensus for for, is it okay, with the do we have consensus for await using versus using await",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 5,
        "text": " I don't know",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": " People took that to mean like do you also like `await using` or you can live with `await using`",
        "polarity": -0.08806818181818182,
        "subjectivity": 0.59375
      },
      {
        "sentence number": 7,
        "text": " because if all the things being equal, it comes back to that we can live with both number one, and number two and simplicity might favor number one - like we also still have consensus for number one, like, I'm not sure what the outcome is",
        "polarity": -0.02840909090909091,
        "subjectivity": 0.4097222222222222
      },
      {
        "sentence number": 8,
        "text": " If we can live with number two",
        "polarity": 0.13636363636363635,
        "subjectivity": 0.5
      },
      {
        "sentence number": 9,
        "text": " Because if we can all live with number one as well, I would prefer that we just do the simpler thing",
        "polarity": 0.13636363636363635,
        "subjectivity": 0.5
      },
      {
        "sentence number": 10,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.15691287878787874,
    "subjectivity": 0.5271990740740741,
    "keywords": [
      [
        "number",
        0.10042837778058009
      ],
      [
        "live",
        0.12376675881833489
      ],
      [
        "await",
        0.14621516617576225
      ],
      [
        "consensus",
        0.18432921056434196
      ],
      [
        "live with number",
        0.43773949308489635
      ],
      [
        "understand",
        0.6507022618680511
      ],
      [
        "time",
        0.6507022618680511
      ],
      [
        "important",
        0.6507022618680511
      ],
      [
        "resolve",
        0.6507022618680511
      ],
      [
        "People",
        0.6936632169883569
      ]
    ]
  },
  {
    "utterance number": 185,
    "timestamp": "2023-03-21",
    "speaker": "RBN",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I think that's a fair question to ask",
        "polarity": 0.7,
        "subjectivity": 0.9
      },
      {
        "sentence number": 2,
        "text": " can we potentially extend a time box by five minutes to talk about this",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 3,
        "text": " [yes] Okay, so, we know that",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 4,
        "text": " that we have consensus on await using, as an option",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " Instead, I would like to ask the committee if there is anyone that would object to instead leaving the syntax as is currently proposed `using await` as it",
        "polarity": 0.0,
        "subjectivity": 0.4
      },
      {
        "sentence number": 6,
        "text": " Avoids, The parser complexity that there is a concern about",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 7,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.3,
    "subjectivity": 0.7,
    "keywords": [
      [
        "fair question",
        0.03182516013441985
      ],
      [
        "fair",
        0.17562334392752144
      ],
      [
        "question",
        0.17562334392752144
      ],
      [
        "potentially extend",
        0.22076208237849895
      ],
      [
        "extend a time",
        0.22076208237849895
      ],
      [
        "time box",
        0.22076208237849895
      ],
      [
        "minutes to talk",
        0.22076208237849895
      ],
      [
        "await",
        0.25892517149445204
      ],
      [
        "Avoids",
        0.40127973765666974
      ],
      [
        "potentially",
        0.4252523529812751
      ]
    ]
  },
  {
    "utterance number": 186,
    "timestamp": "2023-03-21",
    "speaker": "DE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Sorry, you mean this as a fallback option, if we discover this significant parsing complexity, what do you mean that we've already identified the parts of the complexity and want to make this opposite resolution",
        "polarity": -0.15,
        "subjectivity": 0.65
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": -0.15,
    "subjectivity": 0.65,
    "keywords": [
      [
        "significant parsing complexity",
        0.003167843486663285
      ],
      [
        "fallback option",
        0.011752516585960321
      ],
      [
        "opposite resolution",
        0.011752516585960321
      ],
      [
        "discover this significant",
        0.017595046402022366
      ],
      [
        "significant parsing",
        0.017595046402022366
      ],
      [
        "identified the parts",
        0.017595046402022366
      ],
      [
        "make this opposite",
        0.017595046402022366
      ],
      [
        "parsing complexity",
        0.023251977563965413
      ],
      [
        "complexity",
        0.08640514249691128
      ],
      [
        "option",
        0.0883382645966668
      ]
    ]
  },
  {
    "utterance number": 187,
    "timestamp": "2023-03-21",
    "speaker": "SYG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I think that it from what I understand from SYG's question is to determine if we are all okay with `await using`, as not all people are happy",
        "polarity": 0.65,
        "subjectivity": 0.75
      },
      {
        "sentence number": 2,
        "text": " then",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " Are we also may be okay with keeping up with using await since that is a simpler parsing option",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 4,
        "text": " If and if so, then that syntax is already well defined and we could potentially advance to stage 3 with out",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 5,
        "text": " to do wrong, is you find me",
        "polarity": -0.5,
        "subjectivity": 0.9
      },
      {
        "sentence number": 6,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.26,
    "subjectivity": 0.78,
    "keywords": [
      [
        "understand from SYG",
        0.013354461943233344
      ],
      [
        "SYG question",
        0.013354461943233344
      ],
      [
        "people are happy.",
        0.029992908495195307
      ],
      [
        "SYG",
        0.07722765303569279
      ],
      [
        "simpler parsing option",
        0.08662377041629406
      ],
      [
        "await",
        0.1523525201171324
      ],
      [
        "parsing option",
        0.16040069668186388
      ],
      [
        "understand",
        0.1706444523645355
      ],
      [
        "question",
        0.1706444523645355
      ],
      [
        "determine",
        0.1706444523645355
      ]
    ]
  },
  {
    "utterance number": 188,
    "timestamp": "2023-03-21",
    "speaker": "USA",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I think it would be much simpler if you put forward your preferred outcome and then asked for consensus",
        "polarity": 0.2,
        "subjectivity": 0.2
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.2,
    "subjectivity": 0.2,
    "keywords": [
      [
        "asked for consensus",
        0.04940384002065631
      ],
      [
        "put forward",
        0.09700399286574239
      ],
      [
        "forward your preferred",
        0.09700399286574239
      ],
      [
        "preferred outcome",
        0.09700399286574239
      ],
      [
        "consensus",
        0.15831692877998726
      ],
      [
        "simpler",
        0.29736558256021506
      ],
      [
        "put",
        0.29736558256021506
      ],
      [
        "forward",
        0.29736558256021506
      ],
      [
        "preferred",
        0.29736558256021506
      ],
      [
        "outcome",
        0.29736558256021506
      ]
    ]
  },
  {
    "utterance number": 189,
    "timestamp": "2023-03-21",
    "speaker": "RBN",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I'l be honest, my preferred outcome is achieving stage 3",
        "polarity": 0.6,
        "subjectivity": 0.9
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.6,
    "subjectivity": 0.9,
    "keywords": [
      [
        "achieving stage",
        0.04940384002065631
      ],
      [
        "preferred outcome",
        0.09700399286574239
      ],
      [
        "outcome is achieving",
        0.09700399286574239
      ],
      [
        "honest",
        0.15831692877998726
      ],
      [
        "stage",
        0.15831692877998726
      ],
      [
        "preferred",
        0.29736558256021506
      ],
      [
        "outcome",
        0.29736558256021506
      ],
      [
        "achieving",
        0.29736558256021506
      ]
    ]
  },
  {
    "utterance number": 190,
    "timestamp": "2023-03-21",
    "speaker": "SYG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Ask for sticking with number one (`using await`) and the rationale being there is a spec and the simplicity of parsing",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "simplicity of parsing",
        0.015380821171891606
      ],
      [
        "sticking with number",
        0.02570861714399338
      ],
      [
        "await",
        0.09568045026443411
      ],
      [
        "parsing",
        0.09568045026443411
      ],
      [
        "sticking",
        0.15831692877998726
      ],
      [
        "number",
        0.15831692877998726
      ],
      [
        "rationale",
        0.15831692877998726
      ],
      [
        "spec",
        0.15831692877998726
      ],
      [
        "simplicity",
        0.15831692877998726
      ]
    ]
  },
  {
    "utterance number": 191,
    "timestamp": "2023-03-21",
    "speaker": "SFC",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I think that, you know, I think RBN made a compelling case for number two (`await using`) in this presentation, he presented us with evidence in support of option to arguments in favor of option one seemed a bit theoretical at this point",
        "polarity": 0.15,
        "subjectivity": 0.35
      },
      {
        "sentence number": 2,
        "text": " We don't know for sure",
        "polarity": 0.5,
        "subjectivity": 0.8888888888888888
      },
      {
        "sentence number": 3,
        "text": " the, the impact on parts and complexity I would also point out that there's not a single poll in which option one one B option to, and option 3, I think was fairly consistently",
        "polarity": 0.14285714285714285,
        "subjectivity": 0.23214285714285715
      },
      {
        "sentence number": 4,
        "text": " The second choice in most of the polls that we were shown",
        "polarity": 0.25,
        "subjectivity": 0.25
      },
      {
        "sentence number": 5,
        "text": " And in terms of order of constituencies what's like, this is already a very, very you know, potentially confusing We thing for developers, so we should probably be in on",
        "polarity": -0.01999999999999999,
        "subjectivity": 0.395
      },
      {
        "sentence number": 6,
        "text": " you know what's best for developers here and I think there's a fairly strong signal that at least number two is a fairly good for developers and I would not be comfortable with us saying, option one is a fall back because that's not what the evidence that I've seen indicates coming into this call",
        "polarity": 0.37222222222222223,
        "subjectivity": 0.47222222222222215
      },
      {
        "sentence number": 7,
        "text": " But I speak for myself, not for Google",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 8,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.25193650793650796,
    "subjectivity": 0.4117671957671957,
    "keywords": [
      [
        "RBN made",
        0.014102678685080763
      ],
      [
        "made a compelling",
        0.037892862640573635
      ],
      [
        "compelling case",
        0.037892862640573635
      ],
      [
        "arguments in favor",
        0.037892862640573635
      ],
      [
        "bit theoretical",
        0.037892862640573635
      ],
      [
        "option",
        0.0578354142142633
      ],
      [
        "RBN",
        0.07278086889610863
      ],
      [
        "fairly",
        0.15845144873410785
      ],
      [
        "await",
        0.1606007121145686
      ],
      [
        "presentation",
        0.1606007121145686
      ]
    ]
  },
  {
    "utterance number": 192,
    "timestamp": "2023-03-21",
    "speaker": "RBN",
    "sentences": [
      {
        "sentence number": 1,
        "text": " so, I'd like to respond if I can",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " I agree that that's the probably the preferred outcome `await using` is I think much clearer",
        "polarity": 0.2,
        "subjectivity": 0.2
      },
      {
        "sentence number": 3,
        "text": " and I am not opposed to spending the intervening time between this and the next plenary session investigating the syntax and grammar that's necessary to make this work",
        "polarity": 0.0,
        "subjectivity": 0.5
      },
      {
        "sentence number": 4,
        "text": " And as I've said, I've already investigated the parsing complexity at least in TypeScript",
        "polarity": -0.3,
        "subjectivity": 0.4
      },
      {
        "sentence number": 5,
        "text": " I'd be happy to hear feedback from other implementers",
        "polarity": 0.3375,
        "subjectivity": 0.6875
      },
      {
        "sentence number": 6,
        "text": " If they think that there would be concern for this within their engines,",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.09583333333333334,
    "subjectivity": 0.49583333333333335,
    "keywords": [
      [
        "plenary session investigating",
        0.03380224085194713
      ],
      [
        "preferred outcome",
        0.08278684719308892
      ],
      [
        "make this work",
        0.08278684719308892
      ],
      [
        "opposed to spending",
        0.09774310095967778
      ],
      [
        "spending the intervening",
        0.09774310095967778
      ],
      [
        "intervening time",
        0.09774310095967778
      ],
      [
        "plenary session",
        0.09774310095967778
      ],
      [
        "session investigating",
        0.09774310095967778
      ],
      [
        "investigating the syntax",
        0.09774310095967778
      ],
      [
        "syntax and grammar",
        0.09774310095967778
      ]
    ]
  },
  {
    "utterance number": 193,
    "timestamp": "2023-03-21",
    "speaker": "DE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Briefly",
        "polarity": 0.0,
        "subjectivity": 0.3333333333333333
      },
      {
        "sentence number": 2,
        "text": " I agree",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " and I would be very uncomfortable if we made a decision based on a potential delay of just want to eating",
        "polarity": -0.325,
        "subjectivity": 1.0
      },
      {
        "sentence number": 4,
        "text": " So for further, we stick to the conclusion of the articulator",
        "polarity": 0.0,
        "subjectivity": 0.5
      },
      {
        "sentence number": 5,
        "text": " the articulator",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": -0.1625,
    "subjectivity": 0.7083333333333333,
    "keywords": [
      [
        "Briefly",
        0.08712213648516766
      ],
      [
        "articulator",
        0.16242477056932844
      ],
      [
        "made a decision",
        0.29834237807649383
      ],
      [
        "decision based",
        0.29834237807649383
      ],
      [
        "potential delay",
        0.29834237807649383
      ],
      [
        "eating",
        0.37077597061173706
      ],
      [
        "agree.",
        0.4793611760800835
      ],
      [
        "uncomfortable",
        0.4793611760800835
      ],
      [
        "made",
        0.4793611760800835
      ],
      [
        "decision",
        0.4793611760800835
      ]
    ]
  },
  {
    "utterance number": 194,
    "timestamp": "2023-03-21",
    "speaker": "USA",
    "sentences": [
      {
        "sentence number": 1,
        "text": " We are on time, so we unfortunately cannot go any further",
        "polarity": -0.25,
        "subjectivity": 0.75
      },
      {
        "sentence number": 2,
        "text": " I hope it's okay to defer this I think that's we need a conclusion",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.6666666666666666,
    "keywords": [
      [
        "time",
        0.10028582371075691
      ],
      [
        "conclusion",
        0.2790829227183407
      ],
      [
        "hope",
        0.37689977775222827
      ],
      [
        "defer",
        0.37689977775222827
      ]
    ]
  },
  {
    "utterance number": 195,
    "timestamp": "2023-03-21",
    "speaker": "DE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I previously noted the conclusion that we would try for `using await` that we would try for `await using`",
        "polarity": -0.16666666666666666,
        "subjectivity": 0.16666666666666666
      },
      {
        "sentence number": 2,
        "text": " and your back makes meeting",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " Should that be the conclusion or should we make it overflow item to come back to whatever We want to resolve in the direction, she proposed",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": -0.05555555555555555,
    "subjectivity": 0.05555555555555555,
    "keywords": [
      [
        "back makes meeting",
        0.012777978721089241
      ],
      [
        "previously noted",
        0.028754752770067622
      ],
      [
        "makes meeting",
        0.03803945968026729
      ],
      [
        "noted the conclusion",
        0.043005355617380156
      ],
      [
        "await",
        0.09478786023228142
      ],
      [
        "back makes",
        0.09854662047379177
      ],
      [
        "meeting",
        0.12235137520224683
      ],
      [
        "conclusion",
        0.12331250423129479
      ],
      [
        "back",
        0.14975510149395752
      ],
      [
        "previously",
        0.16718560905139174
      ]
    ]
  },
  {
    "utterance number": 196,
    "timestamp": "2023-03-21",
    "speaker": "SYG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I think there is no consensus on the thing I called for",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " I think we have the - I can certainly live with number two, so I think your summary stands that we come back next meeting and everyone is everyone thinks that pending full grammar and possible parsing complexity, number two is the preferred outcome",
        "polarity": 0.09727272727272726,
        "subjectivity": 0.41
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.09727272727272726,
    "subjectivity": 0.41,
    "keywords": [
      [
        "thing I called",
        0.016406548337108775
      ],
      [
        "pending full grammar",
        0.05132302555759085
      ],
      [
        "parsing complexity",
        0.10001743800601984
      ],
      [
        "preferred outcome",
        0.10001743800601984
      ],
      [
        "consensus",
        0.12705006278260775
      ],
      [
        "thing",
        0.12705006278260775
      ],
      [
        "called",
        0.12705006278260775
      ],
      [
        "summary stands",
        0.12705633976208477
      ],
      [
        "back next meeting",
        0.12705633976208477
      ],
      [
        "pending full",
        0.12705633976208477
      ]
    ]
  },
  {
    "utterance number": 197,
    "timestamp": "2023-03-21",
    "speaker": "DE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I would also note that number one is a roughly agreeable fallback, in case we do discover these technical issues with silver",
        "polarity": -0.05,
        "subjectivity": 0.25
      },
      {
        "sentence number": 2,
        "text": " One is a good fallback",
        "polarity": 0.7,
        "subjectivity": 0.6000000000000001
      },
      {
        "sentence number": 3,
        "text": " We discover issues with number two, is that Accurate to write this part of the conclusion",
        "polarity": 0.4000000000000001,
        "subjectivity": 0.6333333333333334
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.25,
    "subjectivity": 0.43333333333333335,
    "keywords": [
      [
        "roughly agreeable fallback",
        0.014435292468134514
      ],
      [
        "roughly agreeable",
        0.05156377102070647
      ],
      [
        "agreeable fallback",
        0.05963550578756042
      ],
      [
        "issues with silver",
        0.0683817567353518
      ],
      [
        "technical issues",
        0.10136446920732574
      ],
      [
        "fallback",
        0.12707610104666606
      ],
      [
        "good fallback",
        0.1445537629270617
      ],
      [
        "silver",
        0.15399748536963487
      ],
      [
        "issues",
        0.20781178136984516
      ],
      [
        "note",
        0.22143921234215908
      ]
    ]
  },
  {
    "utterance number": 198,
    "timestamp": "2023-03-21",
    "speaker": "SFC",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I don't think that's been discussed",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "discussed",
        0.15831692877998726
      ]
    ]
  },
  {
    "utterance number": 199,
    "timestamp": "2023-03-21",
    "speaker": "DE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Okay, so I won't record that",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 2,
        "text": " Thank you",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.5,
    "subjectivity": 0.5,
    "keywords": [
      [
        "record",
        0.36073110501666333
      ]
    ]
  },
  {
    "utterance number": 200,
    "timestamp": "2023-03-21",
    "speaker": "RBN",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I would note though that I think - again this will require investigation, but it's likely that if we find that `await using`'s parsing complexity is too involved to be direction",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 2,
        "text": " We go",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " That is very likely that `async using` will suffer the same fate as it has the same",
        "polarity": 0.0,
        "subjectivity": 0.4166666666666667
      },
      {
        "sentence number": 4,
        "text": " complexity",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " We're both looking at something at a statement level versus something in an expression level and requires the same amount of look ahead",
        "polarity": 0.0,
        "subjectivity": 0.125
      },
      {
        "sentence number": 6,
        "text": " So it's very likely that if await using, I'll do an investigation to both but it's very like chuckling wait using is not violent viable than async using will also not be viable",
        "polarity": 0.20000000000000004,
        "subjectivity": 0.7666666666666666
      },
      {
        "sentence number": 7,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.07500000000000001,
    "subjectivity": 0.584375,
    "keywords": [
      [
        "parsing complexity",
        0.07129268222689054
      ],
      [
        "direction",
        0.1430675073396109
      ],
      [
        "note",
        0.17902315356501533
      ],
      [
        "find",
        0.17902315356501533
      ],
      [
        "parsing",
        0.17902315356501533
      ],
      [
        "involved",
        0.17902315356501533
      ],
      [
        "complexity",
        0.18586500051148264
      ],
      [
        "await",
        0.20557805810550284
      ],
      [
        "async",
        0.23055964735886916
      ],
      [
        "investigation",
        0.23147562978620745
      ]
    ]
  },
  {
    "utterance number": 201,
    "timestamp": "2023-03-21",
    "speaker": "DE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Sorry, did I say it wrong",
        "polarity": -0.5,
        "subjectivity": 0.95
      },
      {
        "sentence number": 2,
        "text": " I meant to say that `using await` would be the fallback",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " I agree that, that's what you said",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " and can we conclude that",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " I think it was more that I think felt the statement was being made was that it's not that if `await using` isn't viable then we just fall back to `using await` but rather we need to come to this decision again and I wanted to make the point that if `await using` isn't viable, it's likely that know She wasn't viable",
        "polarity": 0.16666666666666666,
        "subjectivity": 0.5
      },
      {
        "sentence number": 6,
        "text": " it's likely number three",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 7,
        "text": " Also isn't viable, which means we might still be falling back to 1 as the only alternative",
        "polarity": 0.0,
        "subjectivity": 0.5
      }
    ],
    "polarity": -0.0625,
    "subjectivity": 0.675,
    "keywords": [
      [
        "await",
        0.08016536856765775
      ],
      [
        "viable",
        0.10842260212915703
      ],
      [
        "wrong",
        0.16007944528728085
      ],
      [
        "back",
        0.24636766682083658
      ],
      [
        "fallback",
        0.39828898159207105
      ],
      [
        "fall back",
        0.4083861193255475
      ],
      [
        "meant",
        0.4447319797908206
      ],
      [
        "falling back",
        0.4629591836997504
      ],
      [
        "felt the statement",
        0.5297883597662408
      ],
      [
        "wanted to make",
        0.5297883597662408
      ]
    ]
  },
  {
    "utterance number": 202,
    "timestamp": "2023-03-21",
    "speaker": "MM",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I think since we're going to investigate something that we don't currently know",
        "polarity": 0.0,
        "subjectivity": 0.4
      },
      {
        "sentence number": 2,
        "text": " we should discuss it again",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " If that investigation says that we can't do `await using` then we should discuss it again, rather than trying to predict what the nature is of the surprise",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " so that we can now make a decision before actually having the surprise",
        "polarity": 0.0,
        "subjectivity": 0.1
      },
      {
        "sentence number": 5,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.25,
    "keywords": [
      [
        "discuss",
        0.1482932115491797
      ],
      [
        "surprise",
        0.14834890718493432
      ],
      [
        "investigate",
        0.16268790369802158
      ],
      [
        "make a decision",
        0.42574806521583203
      ],
      [
        "await",
        0.42946035272500305
      ],
      [
        "investigation",
        0.49575248956900325
      ],
      [
        "predict",
        0.49575248956900325
      ],
      [
        "nature",
        0.49575248956900325
      ],
      [
        "make",
        0.5464556819704436
      ],
      [
        "decision",
        0.5464556819704436
      ]
    ]
  },
  {
    "utterance number": 203,
    "timestamp": "2023-03-21",
    "speaker": "KHG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " So the first item here is a few normative updates to the spec for decorators",
        "polarity": 0.024999999999999994,
        "subjectivity": 0.21666666666666667
      },
      {
        "sentence number": 2,
        "text": " These are all relatively small changes",
        "polarity": -0.25,
        "subjectivity": 0.4
      },
      {
        "sentence number": 3,
        "text": " so I kind of bundled them all together",
        "polarity": 0.6,
        "subjectivity": 0.9
      },
      {
        "sentence number": 4,
        "text": " There's six in total and well we can just go through each one individually and talk about it",
        "polarity": 0.0,
        "subjectivity": 0.575
      },
      {
        "sentence number": 5,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.06666666666666667,
    "subjectivity": 0.48055555555555557,
    "keywords": [
      [
        "spec for decorators",
        0.03465229800090378
      ],
      [
        "normative updates",
        0.0565406034156422
      ],
      [
        "decorators",
        0.1447773057422032
      ],
      [
        "item",
        0.23133275159292982
      ],
      [
        "normative",
        0.23133275159292982
      ],
      [
        "updates",
        0.23133275159292982
      ],
      [
        "spec",
        0.23133275159292982
      ],
      [
        "small",
        0.5110573480904945
      ],
      [
        "kind of bundled",
        0.5732105463588063
      ],
      [
        "kind",
        0.6036200563782421
      ]
    ]
  },
  {
    "utterance number": 204,
    "timestamp": "2023-03-21",
    "speaker": "KHG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " ([PR](https://github",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": "com/pzuraq/ecma262/pull/5), [Issue](https://github",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": "com/tc39/proposal-decorators/issues/497)) So the first one is removing the dynamic assignment of the home object for decorated methods",
        "polarity": 0.125,
        "subjectivity": 0.25
      },
      {
        "sentence number": 4,
        "text": " You can see what this actually looks like here",
        "polarity": 0.0,
        "subjectivity": 0.1
      },
      {
        "sentence number": 5,
        "text": " Currently we call perform MakeMethod on the decorated function",
        "polarity": 0.0,
        "subjectivity": 0.4
      },
      {
        "sentence number": 6,
        "text": " This is the second time MakeMethod would be called on this function and that sets the home objects dynamically for that method",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 7,
        "text": " So that's a very new thing that's never been done before in the spec and I believe the reason I did that originally was just I didn't understand the full implications of makeMethods",
        "polarity": 0.3007575757575757,
        "subjectivity": 0.6303030303030303
      },
      {
        "sentence number": 8,
        "text": " I was just kind of cargo-culted the thing along",
        "polarity": 0.6,
        "subjectivity": 0.9
      },
      {
        "sentence number": 9,
        "text": " So yeah, we've had a few people point out that this can result in very confusing behavior",
        "polarity": -0.29500000000000004,
        "subjectivity": 0.31
      },
      {
        "sentence number": 10,
        "text": " Rebinding `super` in general, seems really weird",
        "polarity": -0.038888888888888896,
        "subjectivity": 0.7222222222222222
      },
      {
        "sentence number": 11,
        "text": " and just seems like a bad idea and doesn't have any really good use cases",
        "polarity": 5.551115123125783e-17,
        "subjectivity": 0.6333333333333333
      },
      {
        "sentence number": 12,
        "text": " So we wanted to just remove this and no longer rebind `super`",
        "polarity": 0.3333333333333333,
        "subjectivity": 0.6666666666666666
      },
      {
        "sentence number": 13,
        "text": " Do we have consensus for that change",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 14,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.08111408199643495,
    "subjectivity": 0.5006417112299465,
    "keywords": [
      [
        "removing the dynamic",
        0.026251191136415233
      ],
      [
        "dynamic assignment",
        0.026251191136415233
      ],
      [
        "Issue",
        0.05209293959086674
      ],
      [
        "home objects dynamically",
        0.07682210116944088
      ],
      [
        "decorated methods",
        0.09978666088752355
      ],
      [
        "home object",
        0.10554505884659635
      ],
      [
        "home",
        0.14618062232645349
      ],
      [
        "decorated function",
        0.15135674124758416
      ],
      [
        "decorated",
        0.15517231686959043
      ],
      [
        "removing",
        0.15993653024773252
      ]
    ]
  },
  {
    "utterance number": 205,
    "timestamp": "2023-03-21",
    "speaker": "RPR",
    "sentences": [
      {
        "sentence number": 1,
        "text": " There's no one on the queue",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "queue",
        0.15831692877998726
      ]
    ]
  },
  {
    "utterance number": 206,
    "timestamp": "2023-03-21",
    "speaker": "DE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Yes, I support that change, although the committee has in the past thought about making an API for make method this is like it's like has all the cost but they're not be expressiveness",
        "polarity": -0.25,
        "subjectivity": 0.25
      },
      {
        "sentence number": 2,
        "text": " You",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " that's it for this change",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": -0.25,
    "subjectivity": 0.25,
    "keywords": [
      [
        "making an API",
        0.01462575590160924
      ],
      [
        "API for make",
        0.01462575590160924
      ],
      [
        "past thought",
        0.03142433442165886
      ],
      [
        "thought about making",
        0.03142433442165886
      ],
      [
        "make method",
        0.03142433442165886
      ],
      [
        "API",
        0.08258441204389066
      ],
      [
        "support that change",
        0.08328785213122113
      ],
      [
        "change",
        0.10106601133326712
      ],
      [
        "expressiveness",
        0.1192008334966339
      ],
      [
        "support",
        0.17454779110930135
      ]
    ]
  },
  {
    "utterance number": 207,
    "timestamp": "2023-03-21",
    "speaker": "KHG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Cool",
        "polarity": 0.35,
        "subjectivity": 0.65
      },
      {
        "sentence number": 2,
        "text": " awesome",
        "polarity": 1.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 3,
        "text": " Okay, So I'm going to assume that that one is okay and we will move forward",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.5875,
    "subjectivity": 0.6625,
    "keywords": [
      [
        "Cool. awesome",
        0.01552184797949213
      ],
      [
        "Cool.",
        0.12363091320521931
      ],
      [
        "awesome",
        0.12363091320521931
      ],
      [
        "move forward",
        0.18075564686791562
      ],
      [
        "forward",
        0.32883716426354986
      ],
      [
        "assume",
        0.46553351027698087
      ],
      [
        "move",
        0.46553351027698087
      ]
    ]
  },
  {
    "utterance number": 208,
    "timestamp": "2023-03-21",
    "speaker": "SYG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " +1 yes please we don't know how to implement it otherwise",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "implement",
        0.29736558256021506
      ]
    ]
  },
  {
    "utterance number": 209,
    "timestamp": "2023-03-21",
    "speaker": "JHD",
    "sentences": [
      {
        "sentence number": 1,
        "text": " +1",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": []
  },
  {
    "utterance number": 210,
    "timestamp": "2023-03-21",
    "speaker": "KHG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " ([PR](https://github",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": "com/pzuraq/ecma262/pull/6), [Issue](https://github",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": "com/tc39/proposal-decorators/issues/487)) The next one is calling decorators with their natural, `this` value, whatever that would be",
        "polarity": 0.05,
        "subjectivity": 0.2
      },
      {
        "sentence number": 4,
        "text": " That would be the receiver",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " instead of `undefined` currently in the spec we just always called the fecorator function with undefined",
        "polarity": 0.0,
        "subjectivity": 0.4
      },
      {
        "sentence number": 6,
        "text": " undefined",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 7,
        "text": " I think that's an oversight because I never really intended for that to be the case",
        "polarity": -0.1,
        "subjectivity": 0.2
      },
      {
        "sentence number": 8,
        "text": " So, for instance, if we call `foo",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 9,
        "text": "bar`, this is an invocation of a function",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 10,
        "text": " So the receiver `this` value should be `foo` here and if you bound this for `bar`, at some point, it should have the `this` value that it was bound",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 11,
        "text": " They basically should work just like a normal function",
        "polarity": 0.15,
        "subjectivity": 0.6499999999999999
      },
      {
        "sentence number": 12,
        "text": " That is the whole mental module of decorators",
        "polarity": 0.05,
        "subjectivity": 0.30000000000000004
      },
      {
        "sentence number": 13,
        "text": " So, yeah, not sure why this happened in the first place, but that That would be the change",
        "polarity": 0.0,
        "subjectivity": 0.611111111111111
      },
      {
        "sentence number": 14,
        "text": " Yeah",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 15,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.027777777777777776,
    "subjectivity": 0.38580246913580246,
    "keywords": [
      [
        "Issue",
        0.05265844223483206
      ],
      [
        "calling decorators",
        0.083401716449214
      ],
      [
        "natural",
        0.1412327249321446
      ],
      [
        "function",
        0.1502835884211928
      ],
      [
        "calling",
        0.16368436242918802
      ],
      [
        "receiver",
        0.16885537359939606
      ],
      [
        "undefined",
        0.17400055298845643
      ],
      [
        "yeah",
        0.1960946688661646
      ],
      [
        "undefined. undefined",
        0.20941978254063837
      ],
      [
        "decorators",
        0.23515178656406685
      ]
    ]
  },
  {
    "utterance number": 211,
    "timestamp": "2023-03-21",
    "speaker": "DE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " +1 good bug fix",
        "polarity": 0.7,
        "subjectivity": 0.6000000000000001
      }
    ],
    "polarity": 0.7,
    "subjectivity": 0.6000000000000001,
    "keywords": [
      [
        "good bug fix",
        0.008321268142839145
      ],
      [
        "good bug",
        0.04940384002065631
      ],
      [
        "bug fix",
        0.04940384002065631
      ],
      [
        "good",
        0.15831692877998726
      ],
      [
        "fix",
        0.15831692877998726
      ],
      [
        "bug",
        0.29736558256021506
      ]
    ]
  },
  {
    "utterance number": 212,
    "timestamp": "2023-03-21",
    "speaker": "DLM",
    "sentences": [
      {
        "sentence number": 1,
        "text": " +1 I agree with this",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "agree",
        0.29736558256021506
      ]
    ]
  },
  {
    "utterance number": 213,
    "timestamp": "2023-03-21",
    "speaker": "KHG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Any other comments on that one",
        "polarity": -0.125,
        "subjectivity": 0.375
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": -0.125,
    "subjectivity": 0.375,
    "keywords": [
      [
        "comments",
        0.29736558256021506
      ]
    ]
  },
  {
    "utterance number": 214,
    "timestamp": "2023-03-21",
    "speaker": "RPR",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Nothing",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " in the room",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " Nothing on the Queue",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " So I think, you have consensus on that item",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "Queue",
        0.28024437468318186
      ],
      [
        "room",
        0.3702539456099092
      ],
      [
        "item",
        0.5121371841744414
      ],
      [
        "consensus",
        0.6511101154454433
      ]
    ]
  },
  {
    "utterance number": 215,
    "timestamp": "2023-03-21",
    "speaker": "KHG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Perfect",
        "polarity": 1.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 2,
        "text": " Okay",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 3,
        "text": " ([PR](https://github",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": "com/pzuraq/ecma262/pull/7)) So for three, this is just a new validation that we would do, so add initializers, a function on the context object for adding an initializer function",
        "polarity": 0.13636363636363635,
        "subjectivity": 0.45454545454545453
      },
      {
        "sentence number": 5,
        "text": " and currently it can receive any value and it doesn't assert that, it's a function",
        "polarity": 0.0,
        "subjectivity": 0.4
      },
      {
        "sentence number": 6,
        "text": " So we just want to add a statement that that causes it to throw an error if the value is not callable",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 7,
        "text": " So, that is basically all that one is the behaviors like really `undefined` if it's basically assumes it's a function after that point",
        "polarity": 0.2,
        "subjectivity": 0.2
      },
      {
        "sentence number": 8,
        "text": " So it definitely should try that or or I don't know what'll happen",
        "polarity": 0.0,
        "subjectivity": 0.5
      },
      {
        "sentence number": 9,
        "text": " Okay any comments on that one",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 10,
        "text": " Dan did you want to speak",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 11,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.3337662337662337,
    "subjectivity": 0.5077922077922078,
    "keywords": [
      [
        "Perfect",
        0.1159939335275805
      ],
      [
        "function",
        0.12510557350366233
      ],
      [
        "add",
        0.21852749035340915
      ],
      [
        "add initializers",
        0.23237584169306305
      ],
      [
        "basically",
        0.2574595504898155
      ],
      [
        "initializer function.",
        0.27360949961105263
      ],
      [
        "context object",
        0.32970104409767886
      ],
      [
        "object for adding",
        0.32970104409767886
      ],
      [
        "basically assumes",
        0.42703269096762614
      ],
      [
        "throw an error",
        0.4306057534857371
      ]
    ]
  },
  {
    "utterance number": 216,
    "timestamp": "2023-03-21",
    "speaker": "DLM",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Yeah, looks good to me",
        "polarity": 0.7,
        "subjectivity": 0.6000000000000001
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.7,
    "subjectivity": 0.6000000000000001,
    "keywords": [
      [
        "Yeah",
        0.04491197687864554
      ],
      [
        "good",
        0.29736558256021506
      ]
    ]
  },
  {
    "utterance number": 217,
    "timestamp": "2023-03-21",
    "speaker": "RPR",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Right",
        "polarity": 0.2857142857142857,
        "subjectivity": 0.5357142857142857
      },
      {
        "sentence number": 2,
        "text": " Any corrections or the comments on number three",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " _silence_",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " You have consensus on Number three, perfect",
        "polarity": 1.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 5,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.6428571428571428,
    "subjectivity": 0.7678571428571428,
    "keywords": [
      [
        "number",
        0.1948740475845914
      ],
      [
        "comments on number",
        0.30008083896373994
      ],
      [
        "silence",
        0.34596932955184906
      ],
      [
        "consensus on Number",
        0.3913542955178819
      ],
      [
        "perfect",
        0.3933019823979365
      ],
      [
        "corrections",
        0.5922211406859976
      ],
      [
        "comments",
        0.5922211406859976
      ],
      [
        "consensus",
        0.72168614963271
      ]
    ]
  },
  {
    "utterance number": 218,
    "timestamp": "2023-03-21",
    "speaker": "KHG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " ([PR](https://github",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": "com/pzuraq/ecma262/pull/8)) So for number four, setting the name of the add initializer function itself currently it just did not have a name said ever set to `undefined` or an empty string",
        "polarity": -0.05,
        "subjectivity": 0.45
      },
      {
        "sentence number": 3,
        "text": " Again, I think this was an oversight",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " The spec is very large and it was the first time I was writing it so I made a bunch of little mistakes",
        "polarity": 0.11369047619047619,
        "subjectivity": 0.46349206349206346
      },
      {
        "sentence number": 5,
        "text": " Yeah",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": " it seems like the thing we should do because that's generally what you do with functions in JavaScript so does everyone agree",
        "polarity": 0.05000000000000002,
        "subjectivity": 0.5
      },
      {
        "sentence number": 7,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.04851190476190478,
    "subjectivity": 0.46507936507936504,
    "keywords": [
      [
        "add initializer function",
        0.012193120344476793
      ],
      [
        "empty string",
        0.018860488496852536
      ],
      [
        "add initializer",
        0.02475505522796951
      ],
      [
        "initializer function",
        0.07249797388583655
      ],
      [
        "undefined",
        0.08583283032534648
      ],
      [
        "setting",
        0.11910124500858094
      ],
      [
        "string",
        0.11910124500858094
      ],
      [
        "number",
        0.1554253718502165
      ],
      [
        "add",
        0.1554253718502165
      ],
      [
        "initializer",
        0.1554253718502165
      ]
    ]
  },
  {
    "utterance number": 219,
    "timestamp": "2023-03-21",
    "speaker": "DE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " +1",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": []
  },
  {
    "utterance number": 220,
    "timestamp": "2023-03-21",
    "speaker": "NRO",
    "sentences": [
      {
        "sentence number": 1,
        "text": " +1",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": []
  },
  {
    "utterance number": 221,
    "timestamp": "2023-03-21",
    "speaker": "KHG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " OK, I\u2019ll take that as consensus",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 2,
        "text": " So now we get to this one",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " so I actually originally had a PR up to make this change in the opposite direction, which was to allow function names to be dynamically reassigned for decorated methods",
        "polarity": 0.1875,
        "subjectivity": 0.375
      },
      {
        "sentence number": 4,
        "text": " The logic was that if you have a method on a class and you decorate it, it's always going to be like that",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " that new decorated function name",
        "polarity": 0.13636363636363635,
        "subjectivity": 0.45454545454545453
      },
      {
        "sentence number": 6,
        "text": " So you could like, decorate three, things and they would all be like, X, right",
        "polarity": 0.2857142857142857,
        "subjectivity": 0.5357142857142857
      },
      {
        "sentence number": 7,
        "text": " If the function return from The Decorator was x",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 8,
        "text": " Originally my logic was we're going to want as a user, I'm going to want to be able to see what the original function names were",
        "polarity": 0.4166666666666667,
        "subjectivity": 0.7083333333333334
      },
      {
        "sentence number": 9,
        "text": " But then a bunch of folks pointed out that this would actually really mess up stack traces because then you would have l the decorated function calling the original function and they would both have the same name",
        "polarity": 0.06666666666666667,
        "subjectivity": 0.35000000000000003
      },
      {
        "sentence number": 10,
        "text": " would be kind of confusing",
        "polarity": 0.15,
        "subjectivity": 0.65
      },
      {
        "sentence number": 11,
        "text": " There's we would have to kind of rethink how second function name works and everything for that as well",
        "polarity": 0.3,
        "subjectivity": 0.45
      },
      {
        "sentence number": 12,
        "text": " And what somebody mentioned was we could actually have this be something that you know is non-normative or I guess",
        "polarity": 0.0,
        "subjectivity": 0.1
      },
      {
        "sentence number": 13,
        "text": " I don't know if error text is not normative, but this could actually be something that stack traces insert, in order to make it easier for people to read what method is actually being called",
        "polarity": 0.0,
        "subjectivity": 0.1
      },
      {
        "sentence number": 14,
        "text": " Any clarifications needed for that one",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 15,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.20261544011544014,
    "subjectivity": 0.4397366522366522,
    "keywords": [
      [
        "function",
        0.058062378459867864
      ],
      [
        "decorated function",
        0.10880575258800701
      ],
      [
        "original function",
        0.13605235174710123
      ],
      [
        "decorated",
        0.14657469286632038
      ],
      [
        "consensus",
        0.18169271186810246
      ],
      [
        "\u2019ll",
        0.20477632916390007
      ],
      [
        "method",
        0.2340261523714395
      ],
      [
        "decorated function calling",
        0.25819194675090124
      ],
      [
        "decorated methods",
        0.2591506704287266
      ],
      [
        "logic",
        0.26201895234861716
      ]
    ]
  },
  {
    "utterance number": 222,
    "timestamp": "2023-03-21",
    "speaker": "ACE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Sorry, I\u2019m not on the queue, but didn't follow what's being proposed exactly",
        "polarity": -0.125,
        "subjectivity": 0.625
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": -0.125,
    "subjectivity": 0.625,
    "keywords": [
      [
        "queue",
        0.15831692877998726
      ],
      [
        "follow",
        0.29736558256021506
      ],
      [
        "proposed",
        0.29736558256021506
      ]
    ]
  },
  {
    "utterance number": 223,
    "timestamp": "2023-03-21",
    "speaker": "KHG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Okay",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 2,
        "text": " So let me see if I can make an example real quick, so, actually, I think",
        "polarity": 0.25,
        "subjectivity": 0.425
      },
      {
        "sentence number": 3,
        "text": " RBN has some example here",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " so currently a b and c",
        "polarity": 0.0,
        "subjectivity": 0.4
      },
      {
        "sentence number": 5,
        "text": " When they get decorated we return this anonymous function right here",
        "polarity": 0.2857142857142857,
        "subjectivity": 0.5357142857142857
      },
      {
        "sentence number": 6,
        "text": " So, a b and c",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 7,
        "text": " These names would be the name of whatever this anonymous function is",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 8,
        "text": " And what that leads to is",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 9,
        "text": " You have like really odd stack traces because you, have two a's or to b's",
        "polarity": -0.16666666666666666,
        "subjectivity": 0.25
      },
      {
        "sentence number": 10,
        "text": " Because you know this function is going to call the original function",
        "polarity": 0.375,
        "subjectivity": 0.75
      },
      {
        "sentence number": 11,
        "text": " and yeah, it's just kind of confusing behavior",
        "polarity": 0.15,
        "subjectivity": 0.65
      },
      {
        "sentence number": 12,
        "text": " So the solution would be Instead",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 13,
        "text": " you redefine, if you want to redefine the name to match, the original name, you can do that yourself manually",
        "polarity": 0.375,
        "subjectivity": 0.75
      },
      {
        "sentence number": 14,
        "text": " and otherwise it'll just be this new decorated method",
        "polarity": 0.13636363636363635,
        "subjectivity": 0.45454545454545453
      },
      {
        "sentence number": 15,
        "text": " So like every function here would have the name X by defaults Okay, thanks",
        "polarity": 0.35,
        "subjectivity": 0.35
      },
      {
        "sentence number": 16,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.23118548118548116,
    "subjectivity": 0.4992507492507493,
    "keywords": [
      [
        "function",
        0.14780257197751737
      ],
      [
        "anonymous function",
        0.22441052055786218
      ],
      [
        "anonymous",
        0.26199106830685776
      ],
      [
        "RBN",
        0.2692618628923811
      ],
      [
        "real quick",
        0.27015105544011625
      ],
      [
        "original",
        0.32094678340247107
      ],
      [
        "decorated",
        0.33381385100764804
      ],
      [
        "redefine",
        0.35458691255348984
      ],
      [
        "quick",
        0.4292311877213691
      ],
      [
        "make",
        0.49551867316088144
      ]
    ]
  },
  {
    "utterance number": 224,
    "timestamp": "2023-03-21",
    "speaker": "ACE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " So the proposal is we don't do anything special with the name",
        "polarity": 0.35714285714285715,
        "subjectivity": 0.5714285714285714
      },
      {
        "sentence number": 2,
        "text": " The name of the function is just the name of the function, as it would be whenever right",
        "polarity": 0.2857142857142857,
        "subjectivity": 0.5357142857142857
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.3214285714285714,
    "subjectivity": 0.5535714285714286,
    "keywords": [
      [
        "proposal",
        0.13690089622781554
      ],
      [
        "special",
        0.13690089622781554
      ],
      [
        "function",
        0.1568265146099903
      ]
    ]
  },
  {
    "utterance number": 225,
    "timestamp": "2023-03-21",
    "speaker": "KHG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Yes",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " Any other",
        "polarity": -0.125,
        "subjectivity": 0.375
      },
      {
        "sentence number": 3,
        "text": " questions",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": -0.125,
    "subjectivity": 0.375,
    "keywords": [
      [
        "questions",
        0.26303348124903125
      ]
    ]
  },
  {
    "utterance number": 226,
    "timestamp": "2023-03-21",
    "speaker": "ACE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I'll just add: that is what I've been doing with decorators already, setting the name myself manually",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " So it seems good",
        "polarity": 0.7,
        "subjectivity": 0.6000000000000001
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.7,
    "subjectivity": 0.6000000000000001,
    "keywords": [
      [
        "add",
        0.12363091320521931
      ],
      [
        "setting",
        0.12363091320521931
      ],
      [
        "manually",
        0.12363091320521931
      ],
      [
        "decorators",
        0.2005079697193566
      ],
      [
        "good",
        0.32883716426354986
      ]
    ]
  },
  {
    "utterance number": 227,
    "timestamp": "2023-03-21",
    "speaker": "KHG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Does anyone object",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "object",
        0.15831692877998726
      ]
    ]
  },
  {
    "utterance number": 228,
    "timestamp": "2023-03-21",
    "speaker": "MAH",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I was thinking we didn't make sense to conditionally sets the name to the original method name",
        "polarity": 0.375,
        "subjectivity": 0.75
      },
      {
        "sentence number": 2,
        "text": " If the original function is an animus",
        "polarity": 0.375,
        "subjectivity": 0.75
      },
      {
        "sentence number": 3,
        "text": " So if it has an empty empty name, if you return the same anonymous function for multiple providers",
        "polarity": -0.05,
        "subjectivity": 0.28125
      },
      {
        "sentence number": 4,
        "text": " yeah, so if you return an anonymous function, the decorator machinery would automatically set the name to the name of the methods that was degraded",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.09166666666666667,
    "subjectivity": 0.4375,
    "keywords": [
      [
        "make sense",
        0.027768410601425632
      ],
      [
        "sense to conditionally",
        0.027768410601425632
      ],
      [
        "conditionally sets",
        0.05930314787598815
      ],
      [
        "anonymous function",
        0.08464133920308256
      ],
      [
        "original function",
        0.08661974099635707
      ],
      [
        "original method",
        0.09226046198640947
      ],
      [
        "original",
        0.110942058796229
      ],
      [
        "function",
        0.1197544936175158
      ],
      [
        "thinking",
        0.16437201483635053
      ],
      [
        "make",
        0.16437201483635053
      ]
    ]
  },
  {
    "utterance number": 229,
    "timestamp": "2023-03-21",
    "speaker": "LCA",
    "sentences": [
      {
        "sentence number": 1,
        "text": " What I'm saying is what if what if you create an anonymous function outside of The Decorator function itself and return that same function for multiple like decorators over multiple, multiple, protocols",
        "polarity": 0.0,
        "subjectivity": 0.034999999999999996
      },
      {
        "sentence number": 2,
        "text": " Maybe renaming that function",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " like to whatever the last",
        "polarity": 0.0,
        "subjectivity": 0.06666666666666667
      },
      {
        "sentence number": 4,
        "text": " decoration is, or rights",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.04027777777777777,
    "keywords": [
      [
        "create an anonymous",
        0.06966968923037999
      ],
      [
        "Decorator function",
        0.08114316742273464
      ],
      [
        "multiple",
        0.10097387655591555
      ],
      [
        "function",
        0.12681279891756722
      ],
      [
        "protocols",
        0.13216532584805973
      ],
      [
        "Decorator",
        0.14796045867620666
      ],
      [
        "decorators",
        0.14796045867620666
      ],
      [
        "anonymous function",
        0.14870622379311904
      ],
      [
        "multiple like decorators",
        0.17854247620738564
      ],
      [
        "decorators over multiple",
        0.17854247620738564
      ]
    ]
  },
  {
    "utterance number": 230,
    "timestamp": "2023-03-21",
    "speaker": "MAH",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Yeah",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " but that would only happen the first time I guess but yeah, that would be problematic",
        "polarity": 0.125,
        "subjectivity": 0.6666666666666666
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.125,
    "subjectivity": 0.6666666666666666,
    "keywords": [
      [
        "Yeah",
        0.1430164761977166
      ],
      [
        "guess but yeah",
        0.3384632907893548
      ],
      [
        "problematic",
        0.3951375787241905
      ],
      [
        "time I guess",
        0.405922408220865
      ],
      [
        "happen",
        0.5373296883685575
      ],
      [
        "time",
        0.5373296883685575
      ],
      [
        "guess",
        0.5373296883685575
      ]
    ]
  },
  {
    "utterance number": 231,
    "timestamp": "2023-03-21",
    "speaker": "KHG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " It sounds like that",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " We agree",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " That would be a bad idea",
        "polarity": -0.6999999999999998,
        "subjectivity": 0.6666666666666666
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": -0.6999999999999998,
    "subjectivity": 0.6666666666666666,
    "keywords": [
      [
        "sounds",
        0.2200560909321288
      ],
      [
        "bad idea",
        0.35487136790899465
      ],
      [
        "agree",
        0.3553358554145339
      ],
      [
        "idea",
        0.44538603402402266
      ],
      [
        "bad",
        0.5880798524606783
      ]
    ]
  },
  {
    "utterance number": 232,
    "timestamp": "2023-03-21",
    "speaker": "RBN",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Yeah, I was just going to say the same thing and that was Illustrated",
        "polarity": 0.0,
        "subjectivity": 0.125
      },
      {
        "sentence number": 2,
        "text": " although not Illustrated within unnamed function, but in the example that Chris had up a moment ago where with no op, If this were a function, that did not have an assigned name and I were using it the same way then the difference is instead of sun functioning resulting in logging acc, would log abb in still end up with that same situation",
        "polarity": 0.0,
        "subjectivity": 0.125
      },
      {
        "sentence number": 3,
        "text": " So I still don't think that's viable",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.125,
    "keywords": [
      [
        "Illustrated",
        0.07372764041199689
      ],
      [
        "sun functioning resulting",
        0.0805469901999093
      ],
      [
        "Yeah",
        0.08237764417687853
      ],
      [
        "unnamed function",
        0.11246078646844646
      ],
      [
        "Illustrated within unnamed",
        0.12347039735065335
      ],
      [
        "logging acc",
        0.13318394750550575
      ],
      [
        "function",
        0.13325861558978236
      ],
      [
        "thing",
        0.14962727765442174
      ],
      [
        "moment ago",
        0.1680523238062827
      ],
      [
        "sun functioning",
        0.1680523238062827
      ]
    ]
  },
  {
    "utterance number": 233,
    "timestamp": "2023-03-21",
    "speaker": "SYG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " (from queue): Prefer no conditional setting",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " \"Things that look declarative ought to be declarative\"",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "Prefer no conditional",
        0.018572730535596903
      ],
      [
        "conditional setting",
        0.03985444220279051
      ],
      [
        "Prefer",
        0.07395674730400018
      ],
      [
        "queue",
        0.1554527012770092
      ],
      [
        "setting",
        0.1554527012770092
      ],
      [
        "Things",
        0.21714147450398136
      ],
      [
        "conditional",
        0.246550513069643
      ],
      [
        "declarative",
        0.3101637038259723
      ]
    ]
  },
  {
    "utterance number": 234,
    "timestamp": "2023-03-21",
    "speaker": "KHG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " All right",
        "polarity": 0.2857142857142857,
        "subjectivity": 0.5357142857142857
      },
      {
        "sentence number": 2,
        "text": " so it sounds like consensus to remove set function name and dynamically setting the name",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " Great",
        "polarity": 0.8,
        "subjectivity": 0.75
      },
      {
        "sentence number": 4,
        "text": " Yes",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " Cool",
        "polarity": 0.35,
        "subjectivity": 0.65
      },
      {
        "sentence number": 6,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.47857142857142865,
    "subjectivity": 0.6452380952380952,
    "keywords": [
      [
        "Great",
        0.28396041294839813
      ],
      [
        "remove set function",
        0.30252809542575276
      ],
      [
        "Cool",
        0.3568200533666425
      ],
      [
        "sounds like consensus",
        0.37306711088575134
      ],
      [
        "consensus to remove",
        0.37306711088575134
      ],
      [
        "remove set",
        0.37306711088575134
      ],
      [
        "set function",
        0.37306711088575134
      ],
      [
        "dynamically setting",
        0.37306711088575134
      ],
      [
        "sounds",
        0.5212518383364516
      ],
      [
        "consensus",
        0.5212518383364516
      ]
    ]
  },
  {
    "utterance number": 235,
    "timestamp": "2023-03-21",
    "speaker": "KHG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Okay",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 2,
        "text": " (PR pending, [issue](https://github",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": "com/tc39/proposal-decorators/issues/468)) So the last issue here",
        "polarity": 0.0,
        "subjectivity": 0.06666666666666667
      },
      {
        "sentence number": 4,
        "text": " is a bit more involved",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 5,
        "text": " Basically we've added this new accessor keyword, right",
        "polarity": 0.21103896103896103,
        "subjectivity": 0.4951298701298701
      },
      {
        "sentence number": 6,
        "text": " That if everybody remembers is basically a way to define a getter and a setter on the class, in a single statement",
        "polarity": -0.07142857142857142,
        "subjectivity": 0.21428571428571427
      },
      {
        "sentence number": 7,
        "text": " That access a private storage, that is backing that getter and setter",
        "polarity": 0.0,
        "subjectivity": 0.375
      },
      {
        "sentence number": 8,
        "text": " And the idea is that it works like a kind of field, but via decoration, and potentially, in the future via othe like property syntax",
        "polarity": 0.19999999999999998,
        "subjectivity": 0.6749999999999999
      },
      {
        "sentence number": 9,
        "text": " You would be able to intercept that get and that set",
        "polarity": 0.5,
        "subjectivity": 0.625
      },
      {
        "sentence number": 10,
        "text": " and replace it",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 11,
        "text": " So in classes, on class instances this works just fine because you can see like basically desugars to something like this",
        "polarity": 0.4166666666666667,
        "subjectivity": 0.5
      },
      {
        "sentence number": 12,
        "text": " Imagine it without the static on a class instance",
        "polarity": 0.5,
        "subjectivity": 0.9
      },
      {
        "sentence number": 13,
        "text": " It's just like a private field, a getter and a setter that can access that private field",
        "polarity": 0.0,
        "subjectivity": 0.375
      },
      {
        "sentence number": 14,
        "text": " cool",
        "polarity": 0.35,
        "subjectivity": 0.65
      },
      {
        "sentence number": 15,
        "text": " But once we add `static`, we run into a problem because all class fields get to find on every instance and are inherited class fields as well",
        "polarity": 0.5,
        "subjectivity": 0.9
      },
      {
        "sentence number": 16,
        "text": " for instance private fields, but for static ones, they don't",
        "polarity": 0.25,
        "subjectivity": 0.6375
      },
      {
        "sentence number": 17,
        "text": " static private fields, get defined just on just like normal Fields, on",
        "polarity": 0.21666666666666667,
        "subjectivity": 0.6416666666666666
      },
      {
        "sentence number": 18,
        "text": " on the class itself and they\u2019re inherited on subclasses",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 19,
        "text": " classes via shadowing or prototypical inheritance",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 20,
        "text": " Whichever it is",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 21,
        "text": " So what this results in is if somebody tries to access on a child class here, this will throw an error because they can't access the private banks on the Sea",
        "polarity": -0.05,
        "subjectivity": 0.3875
      },
      {
        "sentence number": 22,
        "text": " On the child class",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 23,
        "text": " It has to be on the superclass",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 24,
        "text": " and this kind of just makes not at all on for inheritance on",
        "polarity": 0.6,
        "subjectivity": 0.9
      },
      {
        "sentence number": 25,
        "text": " static",
        "polarity": 0.5,
        "subjectivity": 0.9
      },
      {
        "sentence number": 26,
        "text": " properties",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 27,
        "text": " So the proposed change is that instead of having it desugar, essentially to this",
        "polarity": 0.0,
        "subjectivity": 0.3
      },
      {
        "sentence number": 28,
        "text": " hashtag X, we would have a desugar to a direct reference to the class itself, which is basically how you would solve this problem if you're using static private fields today, if you you were doing that and a accessing it with, you know, get and set",
        "polarity": 0.19999999999999998,
        "subjectivity": 0.5583333333333333
      },
      {
        "sentence number": 29,
        "text": " You would just replace this with a typically and things would work",
        "polarity": -0.16666666666666666,
        "subjectivity": 0.5
      },
      {
        "sentence number": 30,
        "text": " So yeah that's that's basically the proposal",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 31,
        "text": " Any questions about that",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 32,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.21937578550481776,
    "subjectivity": 0.5563294232649072,
    "keywords": [
      [
        "class",
        0.04997055529631099
      ],
      [
        "private",
        0.06886191783786695
      ],
      [
        "fields",
        0.07550999164088984
      ],
      [
        "private fields",
        0.09313683732810603
      ],
      [
        "Basically",
        0.10285918274014691
      ],
      [
        "static",
        0.11094247446584717
      ],
      [
        "static private fields",
        0.11989924410453402
      ],
      [
        "class fields",
        0.12794893886653785
      ],
      [
        "access",
        0.14608413447929058
      ],
      [
        "getter",
        0.15313251366759062
      ]
    ]
  },
  {
    "utterance number": 236,
    "timestamp": "2023-03-21",
    "speaker": "DE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Okay, so I'm getting a plus one",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 2,
        "text": " This is a good fix",
        "polarity": 0.7,
        "subjectivity": 0.6000000000000001
      },
      {
        "sentence number": 3,
        "text": " We spent two years discussing this case, about what the static private semantics should be",
        "polarity": 0.13333333333333333,
        "subjectivity": 0.4583333333333333
      },
      {
        "sentence number": 4,
        "text": " I don't know if we need improved documentation or something",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " Anyway, the fix seems correct",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.31999999999999995,
    "subjectivity": 0.495,
    "keywords": [
      [
        "fix",
        0.35978784672730196
      ],
      [
        "case",
        0.5337194364605641
      ],
      [
        "discussing this case",
        0.5572899701164655
      ],
      [
        "good",
        0.5827594987772949
      ],
      [
        "correct",
        0.6155708306439062
      ],
      [
        "spent",
        0.6704999064341035
      ],
      [
        "years",
        0.6704999064341035
      ],
      [
        "discussing",
        0.6704999064341035
      ],
      [
        "static",
        0.6704999064341035
      ],
      [
        "private",
        0.6704999064341035
      ]
    ]
  },
  {
    "utterance number": 237,
    "timestamp": "2023-03-21",
    "speaker": "RBN",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I just want to make sure and I need I regret that I did not see the there is no PR the addresses of fixing this, but I want to make sure that when we're talking about this that we're talking about, this isn't actually about return a",
        "polarity": 0.3333333333333333,
        "subjectivity": 0.6259259259259259
      },
      {
        "sentence number": 2,
        "text": "hash X",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " It's actually because if a itself decorated with something that replaces the constructor",
        "polarity": 0.0,
        "subjectivity": 0.1
      },
      {
        "sentence number": 4,
        "text": " It's not the value of a, at the end of decoration, it is the value of a before any decorators are run so that we're not making that confusion because that would be just as bad as this",
        "polarity": -0.6999999999999998,
        "subjectivity": 0.6666666666666666
      },
      {
        "sentence number": 5,
        "text": " this",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.06000000000000003,
    "subjectivity": 0.5288888888888889,
    "keywords": [
      [
        "addresses of fixing",
        0.02038266813558699
      ],
      [
        "return a.hash",
        0.02038266813558699
      ],
      [
        "make",
        0.04331726925075408
      ],
      [
        "talking",
        0.04331726925075408
      ],
      [
        "replaces the constructor",
        0.12761498095959403
      ],
      [
        "regret",
        0.14133475816523733
      ],
      [
        "addresses",
        0.14133475816523733
      ],
      [
        "fixing",
        0.14133475816523733
      ],
      [
        "return",
        0.14133475816523733
      ],
      [
        "a.hash",
        0.14133475816523733
      ]
    ]
  },
  {
    "utterance number": 238,
    "timestamp": "2023-03-21",
    "speaker": "KHG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I believe that it will be the same A that private fields",
        "polarity": 0.0,
        "subjectivity": 0.25
      },
      {
        "sentence number": 2,
        "text": " access in general",
        "polarity": 0.05000000000000002,
        "subjectivity": 0.5
      },
      {
        "sentence number": 3,
        "text": " I believe that",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " all instances of a get rebound to the return value of the decorators that are applied to the class itself",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " I'm pretty sure what you would need to make sure that it is whatever the value is that the private field is installed on",
        "polarity": 0.3125,
        "subjectivity": 0.7881944444444444
      },
      {
        "sentence number": 6,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.18571428571428572,
    "subjectivity": 0.5932539682539683,
    "keywords": [
      [
        "access in general",
        0.13134526937384833
      ],
      [
        "private fields",
        0.1725544682419729
      ],
      [
        "private",
        0.19180794667535037
      ],
      [
        "access",
        0.3407294209194151
      ],
      [
        "general",
        0.3407294209194151
      ],
      [
        "fields",
        0.38361589335070073
      ],
      [
        "field",
        0.38361589335070073
      ],
      [
        "field is installed",
        0.5141329716513089
      ],
      [
        "instances",
        0.546540694085794
      ],
      [
        "rebound",
        0.546540694085794
      ]
    ]
  },
  {
    "utterance number": 239,
    "timestamp": "2023-03-21",
    "speaker": "RBN",
    "sentences": [
      {
        "sentence number": 1,
        "text": " yeah, my comment is correct",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " It should be the decorated class",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " We had this discussion before about the fact that the all private static fields end up installed on the decorated version, otherwise, static methods don't work",
        "polarity": 0.3333333333333333,
        "subjectivity": 0.725
      },
      {
        "sentence number": 4,
        "text": " So yes, that's correct, I'm sorry",
        "polarity": -0.5,
        "subjectivity": 1.0
      },
      {
        "sentence number": 5,
        "text": " It should be the whatever the final version of what that class binding is",
        "polarity": 0.0,
        "subjectivity": 1.0
      }
    ],
    "polarity": 0.1,
    "subjectivity": 0.835,
    "keywords": [
      [
        "yeah",
        0.10865623710447302
      ],
      [
        "comment is correct",
        0.1287917315572585
      ],
      [
        "correct",
        0.15992947660542858
      ],
      [
        "comment",
        0.1781141449258349
      ],
      [
        "decorated",
        0.18656012295574947
      ],
      [
        "decorated class",
        0.22365982233291604
      ],
      [
        "decorated version",
        0.23624782498412544
      ],
      [
        "class",
        0.24493365558374655
      ],
      [
        "static",
        0.2480196984623788
      ],
      [
        "version",
        0.25608460315572457
      ]
    ]
  },
  {
    "utterance number": 240,
    "timestamp": "2023-03-21",
    "speaker": "KHG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Yes, And that is the other thing we tried to preserve with decorations, is that you wouldn't ever end up in a split world where you'd have like one reference to a meeting one thing",
        "polarity": -0.125,
        "subjectivity": 0.375
      },
      {
        "sentence number": 2,
        "text": " and another reference to a meeting like the undecorated thing",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " So I'm pretty sure it's that all references to mean the decorated thing I'd have to have to look again to be 100% sure, but I'm pretty sure",
        "polarity": 0.28125,
        "subjectivity": 0.892361111111111
      },
      {
        "sentence number": 4,
        "text": " Sure",
        "polarity": 0.5,
        "subjectivity": 0.8888888888888888
      },
      {
        "sentence number": 5,
        "text": " Okay, I remember the reason why people didn't want that",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 6,
        "text": " to happen",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 7,
        "text": " The reason was they wanted decorators to run after fields were assigned and which would have forced fields to run in the un-decorated world",
        "polarity": -0.30000000000000004,
        "subjectivity": 0.2
      },
      {
        "sentence number": 8,
        "text": " But we solve that with class initializers that can run after fields have been assigned",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 9,
        "text": " Okay",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 10,
        "text": " any other topics on the queue",
        "polarity": -0.125,
        "subjectivity": 0.375
      },
      {
        "sentence number": 11,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.2197916666666667,
    "subjectivity": 0.6827546296296297,
    "keywords": [
      [
        "preserve with decorations",
        0.03599889674977862
      ],
      [
        "undecorated thing",
        0.0577953766788252
      ],
      [
        "thing",
        0.06827011133421783
      ],
      [
        "meeting",
        0.07028251674071224
      ],
      [
        "split world",
        0.10899348246219091
      ],
      [
        "reference",
        0.11296823153404502
      ],
      [
        "decorated thing",
        0.1454045441200638
      ],
      [
        "pretty",
        0.16307471792190378
      ],
      [
        "run",
        0.16544646563144783
      ],
      [
        "meeting one thing",
        0.1734425918192339
      ]
    ]
  },
  {
    "utterance number": 241,
    "timestamp": "2023-03-21",
    "speaker": "NRO",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Yes",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " I'm sure that this least like PR for this practice",
        "polarity": 0.1,
        "subjectivity": 0.6444444444444444
      },
      {
        "sentence number": 3,
        "text": " We make it through here, but the private field is only on the Decorator class appears on the credit class and like that",
        "polarity": 0.0,
        "subjectivity": 0.6875
      },
      {
        "sentence number": 4,
        "text": " but that's the only option as we work",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 5,
        "text": " I would be happy to review this spec for this PR, stuff like that",
        "polarity": 0.8,
        "subjectivity": 1.0
      },
      {
        "sentence number": 6,
        "text": " There is only a very possible answer here",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 7,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.125,
    "subjectivity": 0.8329861111111111,
    "keywords": [
      [
        "Decorator class",
        0.1952567180645409
      ],
      [
        "class",
        0.2662194015048359
      ],
      [
        "Decorator",
        0.3068139440455826
      ],
      [
        "practice",
        0.35702508201749555
      ],
      [
        "credit class",
        0.40154761765861025
      ],
      [
        "private field",
        0.4075525479830224
      ],
      [
        "work",
        0.4978465476434693
      ],
      [
        "stuff",
        0.530896371811232
      ],
      [
        "make",
        0.538095670427392
      ],
      [
        "private",
        0.538095670427392
      ]
    ]
  },
  {
    "utterance number": 242,
    "timestamp": "2023-03-21",
    "speaker": "KHG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Yes, yeah",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " you can, you can look at the spec text in general for that, that has been rebound and everything properly in the specs currently",
        "polarity": 0.016666666666666673,
        "subjectivity": 0.3333333333333333
      },
      {
        "sentence number": 3,
        "text": " So we would just continue through with that",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.016666666666666673,
    "subjectivity": 0.3333333333333333,
    "keywords": [
      [
        "yeah",
        0.08571071781661342
      ],
      [
        "spec text",
        0.2630056501560653
      ],
      [
        "text in general",
        0.29120726847344713
      ],
      [
        "spec",
        0.43848693807565675
      ],
      [
        "specs",
        0.43848693807565675
      ],
      [
        "text",
        0.4749010439603599
      ],
      [
        "general",
        0.4749010439603599
      ],
      [
        "rebound",
        0.4749010439603599
      ],
      [
        "properly",
        0.4749010439603599
      ],
      [
        "continue",
        0.5685296975174368
      ]
    ]
  },
  {
    "utterance number": 243,
    "timestamp": "2023-03-21",
    "speaker": "KHG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Do we have a consensus for this change",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " Pending the actual spec update",
        "polarity": 0.0,
        "subjectivity": 0.1
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.1,
    "keywords": [
      [
        "change",
        0.2005079697193566
      ],
      [
        "consensus",
        0.36073110501666333
      ],
      [
        "Pending the actual",
        0.4456055016437946
      ],
      [
        "spec update",
        0.4456055016437946
      ],
      [
        "Pending",
        0.46553351027698087
      ],
      [
        "update",
        0.46553351027698087
      ],
      [
        "actual spec update",
        0.5777370055722434
      ],
      [
        "actual",
        0.6621399683957523
      ],
      [
        "spec",
        0.6621399683957523
      ],
      [
        "actual spec",
        0.7807198046783035
      ]
    ]
  },
  {
    "utterance number": 244,
    "timestamp": "2023-03-21",
    "speaker": "RPR",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Any",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " any voices of support for this",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "voices of support",
        0.2766850298235749
      ],
      [
        "voices",
        0.46553351027698087
      ],
      [
        "support",
        0.46553351027698087
      ]
    ]
  },
  {
    "utterance number": 245,
    "timestamp": "2023-03-21",
    "speaker": "DE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Yes, I support this",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "support",
        0.29736558256021506
      ]
    ]
  },
  {
    "utterance number": 246,
    "timestamp": "2023-03-21",
    "speaker": "JHD",
    "sentences": [
      {
        "sentence number": 1,
        "text": " +1",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": []
  },
  {
    "utterance number": 247,
    "timestamp": "2023-03-21",
    "speaker": "RPR",
    "sentences": [
      {
        "sentence number": 1,
        "text": " All right, any objections",
        "polarity": 0.2857142857142857,
        "subjectivity": 0.5357142857142857
      },
      {
        "sentence number": 2,
        "text": " Doesn't",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " sound like it, so yeah, congratulations",
        "polarity": 0.4,
        "subjectivity": 0.4
      },
      {
        "sentence number": 4,
        "text": " You have consensus on number 6 as well",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.34285714285714286,
    "subjectivity": 0.46785714285714286,
    "keywords": [
      [
        "congratulations",
        0.19677146788549632
      ],
      [
        "objections",
        0.2200560909321288
      ],
      [
        "sound",
        0.4949246952252326
      ],
      [
        "yeah",
        0.4949246952252326
      ],
      [
        "number",
        0.5880798524606783
      ],
      [
        "consensus",
        0.7625957055371981
      ],
      [
        "consensus on number",
        0.8131286944405928
      ]
    ]
  },
  {
    "utterance number": 248,
    "timestamp": "2023-03-21",
    "speaker": "KHG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Awesome",
        "polarity": 1.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 1.0,
    "subjectivity": 1.0,
    "keywords": [
      [
        "Awesome",
        0.04491197687864554
      ]
    ]
  },
  {
    "utterance number": 249,
    "timestamp": "2023-03-21",
    "speaker": "KHG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " So yeah, Where we left off last time with decorator metadata is we broke it out from the decorator proposal which was at stage 2",
        "polarity": 0.0,
        "subjectivity": 0.03333333333333333
      },
      {
        "sentence number": 2,
        "text": " So decorator metadata started at stage 2",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " and we ended up having a incubator call where we discussed it, and we all came to the conclusion on that call that yes, metadata is definitely needed, and there are some valid use cases for it",
        "polarity": 0.0,
        "subjectivity": 0.5
      },
      {
        "sentence number": 4,
        "text": " and we came up with the basic strategy for how we wanted to pursue metadata in that call",
        "polarity": 0.0,
        "subjectivity": 0.125
      },
      {
        "sentence number": 5,
        "text": " However, there has been some debate over exactly how that will be implemented and everything",
        "polarity": 0.25,
        "subjectivity": 0.25
      },
      {
        "sentence number": 6,
        "text": " So today I'm going to talk about the kind of the current proposal, a few different options, the current proposal, which is my preferred option, and several others, as well",
        "polarity": 0.06666666666666667,
        "subjectivity": 0.39999999999999997
      },
      {
        "sentence number": 7,
        "text": " Very strongly, but then a more minimal version, that would be a little bit more restrictive in some ways",
        "polarity": 0.25516666666666665,
        "subjectivity": 0.6106666666666667
      },
      {
        "sentence number": 8,
        "text": " And then what I see as kind of a compromise solution",
        "polarity": 0.6,
        "subjectivity": 0.9
      },
      {
        "sentence number": 9,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.14857843137254903,
    "subjectivity": 0.42911764705882355,
    "keywords": [
      [
        "decorator metadata",
        0.036606115093269276
      ],
      [
        "decorator metadata started",
        0.041346950396545935
      ],
      [
        "metadata",
        0.06221562054271816
      ],
      [
        "decorator",
        0.09137288554657182
      ],
      [
        "stage",
        0.09346528909835196
      ],
      [
        "started at stage",
        0.09353099427587788
      ],
      [
        "current proposal",
        0.1161241125860851
      ],
      [
        "decorator proposal",
        0.12529172108531422
      ],
      [
        "call",
        0.1256288783391946
      ],
      [
        "metadata started",
        0.12850065751289333
      ]
    ]
  },
  {
    "utterance number": 250,
    "timestamp": "2023-03-21",
    "speaker": "KHG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Quick refresher",
        "polarity": 0.3333333333333333,
        "subjectivity": 0.5
      },
      {
        "sentence number": 2,
        "text": " Why is metadata useful",
        "polarity": 0.3,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " Well, it's used for a lot of things like dependency injection",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " ORMs, runtime type information for like, you know, various type checking frameworks and frameworks that use that type information",
        "polarity": 0.0,
        "subjectivity": 0.5
      },
      {
        "sentence number": 5,
        "text": " serialization unit, testing routing debugging, membranes, and to top it off, `Reflect",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 6,
        "text": "metadata` is the single most used decorator library, which definitely suggests that this is a useful pattern overall",
        "polarity": 0.14571428571428574,
        "subjectivity": 0.24285714285714288
      },
      {
        "sentence number": 7,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.20687830687830688,
    "subjectivity": 0.3015873015873016,
    "keywords": [
      [
        "Quick refresher",
        0.0294373811953125
      ],
      [
        "Quick",
        0.16910234052592965
      ],
      [
        "refresher",
        0.16910234052592965
      ],
      [
        "type",
        0.22254415626810967
      ],
      [
        "Reflect.metadata",
        0.2676557702211041
      ],
      [
        "information",
        0.3089091434576871
      ],
      [
        "frameworks",
        0.3437652744664579
      ],
      [
        "type information",
        0.3510284098628071
      ],
      [
        "ORMs",
        0.4151675434383016
      ],
      [
        "membranes",
        0.44762131449114434
      ]
    ]
  },
  {
    "utterance number": 251,
    "timestamp": "2023-03-21",
    "speaker": "KHG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " How metadata used to work: In legacy TypeScripts, or a Babel decorators, they would receive the class itself directly and because they received the class itself, we could do things like place a value directly on the class, You could define, underscore underscore types, or symbol types, and for other types",
        "polarity": 0.025000000000000005,
        "subjectivity": 0.39166666666666666
      },
      {
        "sentence number": 2,
        "text": " And put your Types on the class directly or you could use a WeakMap to associate it in a way that was private with the class",
        "polarity": 0.05,
        "subjectivity": 0.3875
      },
      {
        "sentence number": 3,
        "text": " So, this gave people a lot of flexibility when defining metadata",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " However, this is no longer possible because in order to make sure that decoration was as static as possible, and didn't allow people to change the shape of a class dynamically",
        "polarity": 0.25,
        "subjectivity": 0.9472222222222222
      },
      {
        "sentence number": 5,
        "text": " we no longer give people the reference to the class itself",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": " In fact, we don't give them a reference to any value that they can tie back to that class",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 7,
        "text": " So there really is no way that you can currently",
        "polarity": -0.05,
        "subjectivity": 0.30000000000000004
      },
      {
        "sentence number": 8,
        "text": " with the stage 3 decorators proposal",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 9,
        "text": " side-channel any metadata",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 10,
        "text": " specific to that class in an ergonomic way",
        "polarity": 0.0,
        "subjectivity": 0.125
      },
      {
        "sentence number": 11,
        "text": " In a way that would be one to one with what was previously possible",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 12,
        "text": " There have been some proposals where you would maybe create an entangled decorator like have that decorator itself hold the metadata",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 13,
        "text": " But that has been called out as having way too much boilerplate",
        "polarity": -0.1,
        "subjectivity": 0.0
      },
      {
        "sentence number": 14,
        "text": " Basically, every time it's been brought up",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 15,
        "text": " So that's why we're adding metadata as a first-class supported thing",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 16,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.065,
    "subjectivity": 0.49759259259259264,
    "keywords": [
      [
        "underscore underscore types",
        0.00985593507432232
      ],
      [
        "underscore underscore",
        0.03793062336544871
      ],
      [
        "class",
        0.042765383384007066
      ],
      [
        "underscore types",
        0.048052048567667295
      ],
      [
        "Babel decorators",
        0.04920996085508644
      ],
      [
        "legacy TypeScripts",
        0.05364422110955278
      ],
      [
        "types",
        0.059959532442019535
      ],
      [
        "symbol types",
        0.06144431241910434
      ],
      [
        "Babel",
        0.07689989223085267
      ],
      [
        "underscore",
        0.09558303834920341
      ]
    ]
  },
  {
    "utterance number": 252,
    "timestamp": "2023-03-21",
    "speaker": "KHG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " So yeah",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " Let's talk about the current proposal",
        "polarity": 0.0,
        "subjectivity": 0.4
      },
      {
        "sentence number": 3,
        "text": " so, basically, what we would do is pass in a plain JavaScript object called metadata on the decorator context object",
        "polarity": -0.21428571428571427,
        "subjectivity": 0.35714285714285715
      },
      {
        "sentence number": 4,
        "text": " Every decorator, applied to the class would receive the same object and they would be able to define whatever they wanted on that object",
        "polarity": 0.25,
        "subjectivity": 0.375
      },
      {
        "sentence number": 5,
        "text": " And then at the end of class definition that object would be assigned to Symbol",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": "metadata on the class itself",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 7,
        "text": " In addition this metadata object would inherit from any parent classes metadata object",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 8,
        "text": " So it would look up prior to being passed in prior to decoration, we would look up `Symbol",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 9,
        "text": "metadata` on the parent class, we would, you know, `Object",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 10,
        "text": "create` with the parent classes, `Symbol",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 11,
        "text": "metadata` objects and if it existed and the child class would be able to then look up parent class metadata using standard prototypical inheritance",
        "polarity": 0.25,
        "subjectivity": 0.3125
      },
      {
        "sentence number": 12,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.09821428571428571,
    "subjectivity": 0.26651785714285714,
    "keywords": [
      [
        "object",
        0.07052327768940042
      ],
      [
        "class",
        0.08849164145583199
      ],
      [
        "Symbol.metadata",
        0.12023646106480651
      ],
      [
        "parent",
        0.1363855832267734
      ],
      [
        "metadata",
        0.14496350020933477
      ],
      [
        "metadata object",
        0.2005277820159543
      ],
      [
        "yeah",
        0.2033598495059442
      ],
      [
        "parent class",
        0.20388393780426856
      ],
      [
        "parent classes",
        0.2420322646741413
      ],
      [
        "decorator",
        0.2751219292951526
      ]
    ]
  },
  {
    "utterance number": 253,
    "timestamp": "2023-03-21",
    "speaker": "KHG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " So the pros of this approach are it's very simple and straightforward",
        "polarity": 0.1875,
        "subjectivity": 0.41964285714285715
      },
      {
        "sentence number": 2,
        "text": " We can do public metadata where if a decorator author wants to for instance share type information or validation information, they can share that in a public way",
        "polarity": 0.06666666666666667,
        "subjectivity": 0.07777777777777778
      },
      {
        "sentence number": 3,
        "text": " they can create a well-known key",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 4,
        "text": " Either",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " a symbol or a string key, and then other decorators can then read that information and use it in a way",
        "polarity": -0.0625,
        "subjectivity": 0.6875
      },
      {
        "sentence number": 6,
        "text": " And this is something that we see a lot of in the ecosystem",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 7,
        "text": " And at the same time, you can create truly private metadata by using a WeakMap",
        "polarity": 0.0,
        "subjectivity": 0.25
      },
      {
        "sentence number": 8,
        "text": " You just would use the metadata object itself as the key in the WeakMap and then it would work",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 9,
        "text": " kind of similarly to you how it would work previously",
        "polarity": 0.14444444444444446,
        "subjectivity": 0.48888888888888893
      },
      {
        "sentence number": 10,
        "text": " and then we have inheritance with that, you know",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 11,
        "text": " works just like class inheritance, just like prototypical inheritance",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 12,
        "text": " by default things Shadow and it's pretty easy to override metadata on a child class but just like with prototypical inheritance, you can manually crawl the prototype chain to find out what the parent classes metadata was",
        "polarity": 0.3416666666666667,
        "subjectivity": 0.9166666666666667
      },
      {
        "sentence number": 13,
        "text": " so, the major con with this approach that has been pointed out, is that this creates a shared namespace, a global namespace effectively where anybody could and will add string names to this object",
        "polarity": 0.22083333333333333,
        "subjectivity": 0.43333333333333335
      },
      {
        "sentence number": 14,
        "text": " and it could become a space where people are fighting for particular names or decorators are stepping on each other's toes",
        "polarity": 0.02083333333333333,
        "subjectivity": 0.35416666666666663
      },
      {
        "sentence number": 15,
        "text": " And it could cause weird undefined behavior and things breaking, in other places",
        "polarity": -0.3125,
        "subjectivity": 0.6875
      },
      {
        "sentence number": 16,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.07155797101449274,
    "subjectivity": 0.5056935817805384,
    "keywords": [
      [
        "simple and straightforward",
        0.03280047441699707
      ],
      [
        "metadata",
        0.10132924600095583
      ],
      [
        "share type information",
        0.11350643988366044
      ],
      [
        "instance share type",
        0.11815975092916417
      ],
      [
        "information",
        0.14492659300159405
      ],
      [
        "key",
        0.15893652247091664
      ],
      [
        "straightforward",
        0.1676825534154181
      ],
      [
        "public",
        0.18225158289937024
      ],
      [
        "share",
        0.18225158289937024
      ],
      [
        "inheritance",
        0.1876268776620827
      ]
    ]
  },
  {
    "utterance number": 254,
    "timestamp": "2023-03-21",
    "speaker": "KHG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " So, with that in mind, we come to option 2",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " So the option 2",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " idea is basically we kind of similar, we pass in that object",
        "polarity": 0.3,
        "subjectivity": 0.65
      },
      {
        "sentence number": 4,
        "text": " that metadata object on",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " context",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": " However, it is a frozen object",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 7,
        "text": " and as a frozen object, it is only meant to be used as a key in a WeakMap, and it would also have a `parent` property, so you could look up parent parent metadata as well",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 8,
        "text": " so this this would basically force people into using private metadata all the time and there would be no way to have a shared namespace",
        "polarity": 0.0,
        "subjectivity": 0.375
      },
      {
        "sentence number": 9,
        "text": " The pro is it is private by default, and generally encourages what is probably the best practice by default, and there is no shared global namespace for people to accidentally collide in",
        "polarity": 0.2625,
        "subjectivity": 0.29375
      },
      {
        "sentence number": 10,
        "text": " The cons are there is really no way to share public metadata",
        "polarity": -0.05,
        "subjectivity": 0.13333333333333333
      },
      {
        "sentence number": 11,
        "text": " with this setup",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 12,
        "text": " And we've discussed this",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 13,
        "text": " Supporters of this particular solution had pointed out that if you wanted to make public metadata, you could export a WeakMap or an API to look up the metadata for a decorator",
        "polarity": 0.08333333333333333,
        "subjectivity": 0.19999999999999998
      },
      {
        "sentence number": 14,
        "text": " My personal worry there is that, that really just exposes the intricacies and details of the build systems themselves that are exposing those modules",
        "polarity": 0.1,
        "subjectivity": 0.25
      },
      {
        "sentence number": 15,
        "text": " I mean, we already live in a world where duplication is very common, and it is possible that you could get multiple modules from the same library in a single build of the app",
        "polarity": -0.09108070500927644,
        "subjectivity": 0.4538265306122449
      },
      {
        "sentence number": 16,
        "text": " And if we haven't fully duplicated every single one, you might end up with a split world where metadata that is logically part of the same set can only be accessed partially from one part of the app or the other",
        "polarity": -0.007738095238095238,
        "subjectivity": 0.3773809523809524
      },
      {
        "sentence number": 17,
        "text": " And if that's the case, you might say, well, you could just put the metadata on the window, and make sure that every instance of the library that is exposing it shares all of its state",
        "polarity": 0.5,
        "subjectivity": 0.8888888888888888
      },
      {
        "sentence number": 18,
        "text": " But that brings us right back to where we were before",
        "polarity": 0.14285714285714285,
        "subjectivity": 0.26785714285714285
      },
      {
        "sentence number": 19,
        "text": " We have a shared global namespace",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 20,
        "text": " What's worse is that that doesn't work in secure ECMAscript contexts for we wouldn't be able to because you're not allowed to put things on window",
        "polarity": 0.16666666666666666,
        "subjectivity": 0.6083333333333333
      },
      {
        "sentence number": 21,
        "text": " So I'm not sure that it would be better to push people in that direction",
        "polarity": 0.125,
        "subjectivity": 0.6944444444444444
      },
      {
        "sentence number": 22,
        "text": " And in addition inheritance is a little bit trickier to use, but that's not a major driver for me, personally, I'm more worried about the complexity that this solution would introduce for sharing public metadata",
        "polarity": 0.0703125,
        "subjectivity": 0.39166666666666666
      },
      {
        "sentence number": 23,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.07438140111920598,
    "subjectivity": 0.4308023615950445,
    "keywords": [
      [
        "metadata",
        0.05063095449234666
      ],
      [
        "shared global namespace",
        0.09044973524248649
      ],
      [
        "option",
        0.1094163251723265
      ],
      [
        "parent parent metadata",
        0.11814657077303067
      ],
      [
        "public metadata",
        0.12264730104433498
      ],
      [
        "shared",
        0.14040816301330347
      ],
      [
        "parent",
        0.14185208361570895
      ],
      [
        "shared global",
        0.14555074978101246
      ],
      [
        "namespace",
        0.14736782580484145
      ],
      [
        "people",
        0.1541083859630365
      ]
    ]
  },
  {
    "utterance number": 255,
    "timestamp": "2023-03-21",
    "speaker": "KHG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Okay, option three",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 2,
        "text": " The idea behind option three is basically to have it be the same as option one in terms of what actually gets exposed: it's an object, it has inheritance, and it's just a plain JavaScript object, not frozen, but we would guard access to that object with getter and setter functions on the context that the decorator receives",
        "polarity": -0.15357142857142858,
        "subjectivity": 0.32053571428571426
      },
      {
        "sentence number": 3,
        "text": " The getter and setter functions would force users to only use symbols as keys",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 4,
        "text": " This would help us to prevent collisions because by defaults users when they make a new symbol unless they're using `Symbol",
        "polarity": 0.13636363636363635,
        "subjectivity": 0.45454545454545453
      },
      {
        "sentence number": 5,
        "text": "for` will be making a unique simple",
        "polarity": 0.1875,
        "subjectivity": 0.6785714285714286
      },
      {
        "sentence number": 6,
        "text": " And unless they, you know, expose that symbol if they export that symbol the only way for anybody else to get it would be to use object",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 7,
        "text": " prototype or get own property symbols",
        "polarity": 0.6,
        "subjectivity": 1.0
      },
      {
        "sentence number": 8,
        "text": " And that would have to be used on a class after being decorated",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 9,
        "text": " It's multiple steps",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 10,
        "text": " and it makes it just a bit more inconvenient to use a well-known name and accidentally have collisions",
        "polarity": -0.04999999999999999,
        "subjectivity": 0.75
      },
      {
        "sentence number": 11,
        "text": " Other than that, it's basically exactly the same as the option one",
        "polarity": 0.041666666666666664,
        "subjectivity": 0.25
      },
      {
        "sentence number": 12,
        "text": " And the idea is that it kind of addresses some of the concerns: it encourages people to avoid the issues that come up with option two, but still allows people to intentionally share public metadata",
        "polarity": 0.3,
        "subjectivity": 0.48333333333333334
      },
      {
        "sentence number": 13,
        "text": " When they want to That's that's pretty much all three options",
        "polarity": 0.225,
        "subjectivity": 0.6
      },
      {
        "sentence number": 14,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.09867037724180582,
    "subjectivity": 0.5243094207379921,
    "keywords": [
      [
        "getter and setter",
        0.08096618849805617
      ],
      [
        "setter functions",
        0.08096618849805617
      ],
      [
        "option",
        0.10114464810495587
      ],
      [
        "object",
        0.11469646973656862
      ],
      [
        "symbol",
        0.15164208822208147
      ],
      [
        "setter",
        0.1781912015287057
      ],
      [
        "plain JavaScript object",
        0.18389906541861875
      ],
      [
        "getter",
        0.19552693383982625
      ],
      [
        "functions",
        0.19552693383982625
      ],
      [
        "symbols",
        0.22746313233312218
      ]
    ]
  },
  {
    "utterance number": 256,
    "timestamp": "2023-03-21",
    "speaker": "MM",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Okay so I have a question that's mostly about option number one",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 2,
        "text": " In the normal use um, for embedded where you're concerned about putting things in ROM and for security where you're concerned about hardening things, making many properties, many objects frozen, for option number one and option number three, where you've got a object that's mutable",
        "polarity": 0.3833333333333333,
        "subjectivity": 0.5499999999999999
      },
      {
        "sentence number": 3,
        "text": " During initialization, if I do understand",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " this proposal does not end and given the nature of the proposal should not for options",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " One in three",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": " specify that after the class is initialize that the object, The Meta object get transitively frozen",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 7,
        "text": " My question is in an environment in which something else would transitively freeze them after the class is initialized, do you expect that the patterns of usage that you know, that you've seen that, you expect people to use the meta object for would or would not get broken",
        "polarity": -0.4,
        "subjectivity": 0.4
      },
      {
        "sentence number": 8,
        "text": " by transitively",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 9,
        "text": " Freezing The Meta object basically transitively, freezing, the meta object, at the same time",
        "polarity": 0.0,
        "subjectivity": 0.125
      },
      {
        "sentence number": 10,
        "text": " That one is transitively is transitively freezing the class itself, the class prototype and the methods of the class\u2014basically everything, transitively",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 11,
        "text": " Freezing the class means, of course, freezing the things that are reachable from the class that would include the metaobject, right",
        "polarity": 0.2857142857142857,
        "subjectivity": 0.5357142857142857
      },
      {
        "sentence number": 12,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.2544642857142857,
    "subjectivity": 0.4638392857142857,
    "keywords": [
      [
        "option number",
        0.020507585499005842
      ],
      [
        "Meta object",
        0.03677227607965276
      ],
      [
        "class",
        0.05610510553285647
      ],
      [
        "transitively",
        0.06930023301160758
      ],
      [
        "Meta",
        0.07276861816112362
      ],
      [
        "object",
        0.0734222990132285
      ],
      [
        "number",
        0.07517494918868187
      ],
      [
        "option",
        0.0856625156326291
      ],
      [
        "Freezing",
        0.0947843979235949
      ],
      [
        "Meta object basically",
        0.1383347483060217
      ]
    ]
  },
  {
    "utterance number": 257,
    "timestamp": "2023-03-21",
    "speaker": "KHG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I would not expect that to cause any breakage metadata is typically used in a very static way, The values that are provided on there are not mutated after the fact, they really just define declaratively what's expected of the class or whatever from a particular decorator",
        "polarity": 0.15,
        "subjectivity": 0.4866666666666667
      },
      {
        "sentence number": 2,
        "text": " The only usage that you I've seen, that is mildly problematic with these cases the case where, you know, to decorators choose the same key on metadata and collide but I've never seen The metadata object used directly as a store of information",
        "polarity": 0.08666666666666667,
        "subjectivity": 0.605
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.11833333333333333,
    "subjectivity": 0.5458333333333334,
    "keywords": [
      [
        "define declaratively",
        0.015312578243503301
      ],
      [
        "declaratively what expected",
        0.015312578243503301
      ],
      [
        "breakage metadata",
        0.027168885986300666
      ],
      [
        "decorators choose",
        0.07014652475803472
      ],
      [
        "metadata",
        0.07179338718867204
      ],
      [
        "metadata object",
        0.07580452432422949
      ],
      [
        "metadata is typically",
        0.08564813298960171
      ],
      [
        "fact",
        0.09960007940236154
      ],
      [
        "store of information",
        0.09987159894806996
      ],
      [
        "mildly problematic",
        0.11986048933913959
      ]
    ]
  },
  {
    "utterance number": 258,
    "timestamp": "2023-03-21",
    "speaker": "MM",
    "sentences": [
      {
        "sentence number": 1,
        "text": " And then with regard to option, three, you said that the context object would enforce with accessor properties, that you could only set symbol-named properties on the metaobject",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 2,
        "text": " So that means it's only just confirmed because I think I initially misread the proposal as implying that option",
        "polarity": 0.13333333333333333,
        "subjectivity": 0.6666666666666666
      },
      {
        "sentence number": 3,
        "text": " Number one, option number three, The Meta object need to be exotic",
        "polarity": 0.5,
        "subjectivity": 1.0
      },
      {
        "sentence number": 4,
        "text": " in order to allow the creation of symbol name",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " Properties",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": " but not allow the creation of string name properties",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 7,
        "text": " where you're not saying that",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 8,
        "text": " but the Text object would also",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 9,
        "text": " not as so, how would the context object",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 10,
        "text": " enforced us without the context",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 11,
        "text": " Object itself needing, either something exotic or proxy",
        "polarity": 0.5,
        "subjectivity": 1.0
      },
      {
        "sentence number": 12,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.2333333333333333,
    "subjectivity": 0.8333333333333334,
    "keywords": [
      [
        "set symbol-named properties",
        0.03899789235593317
      ],
      [
        "enforce with accessor",
        0.05444266896879456
      ],
      [
        "set symbol-named",
        0.05444266896879456
      ],
      [
        "object",
        0.1079790127999162
      ],
      [
        "option",
        0.12920838914628768
      ],
      [
        "properties",
        0.1415348216257523
      ],
      [
        "accessor properties",
        0.14763342681089017
      ],
      [
        "symbol-named properties",
        0.14763342681089017
      ],
      [
        "context",
        0.16635030236278484
      ],
      [
        "context object",
        0.18440191235703574
      ]
    ]
  },
  {
    "utterance number": 259,
    "timestamp": "2023-03-21",
    "speaker": "KHG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " So, the context object would just have two functions `setMetadata`, and `getMetadata`",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " It would not have direct access to the object that gets defined on `Symbol",
        "polarity": 0.1,
        "subjectivity": 0.4
      },
      {
        "sentence number": 3,
        "text": "metadata` users would be to use context set metadata to set a key on that object that it's backing",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 4,
        "text": " this",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " And for instance, if they wanted to use a WeakMap, they could either set the key to a value that is a symbol and then then use As WeakMap key",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 6,
        "text": " now that we can or just set it to an object and that use that object as WeakMap key",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 7,
        "text": " So it would be one more step for people who want to use WeakMaps for privacy, But it's not that much overhead",
        "polarity": 0.35,
        "subjectivity": 0.35
      },
      {
        "sentence number": 8,
        "text": " Okay, thank you",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 9,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.1625,
    "subjectivity": 0.7000000000000001,
    "keywords": [
      [
        "object",
        0.07400204815251321
      ],
      [
        "key",
        0.117730681149404
      ],
      [
        "set",
        0.12578977428460467
      ],
      [
        "context object",
        0.1397383875035126
      ],
      [
        "context set metadata",
        0.1428106383040308
      ],
      [
        "WeakMap key",
        0.1441503882698008
      ],
      [
        "setMetadata",
        0.15529084407407573
      ],
      [
        "WeakMap",
        0.15840089854623554
      ],
      [
        "context",
        0.1656787508957766
      ],
      [
        "Symbol.metadata",
        0.1776914621657845
      ]
    ]
  },
  {
    "utterance number": 260,
    "timestamp": "2023-03-21",
    "speaker": "MM",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I'll refrain from stating an opinion at this time",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " but you've answered everything that would have been an objection to any of these three proposals",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " Yes",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "refrain from stating",
        0.050888965170882816
      ],
      [
        "stating an opinion",
        0.050888965170882816
      ],
      [
        "time",
        0.13696809108329627
      ],
      [
        "refrain",
        0.2200560909321288
      ],
      [
        "stating",
        0.2200560909321288
      ],
      [
        "opinion",
        0.2200560909321288
      ],
      [
        "proposals",
        0.3553358554145339
      ],
      [
        "answered",
        0.4949246952252326
      ],
      [
        "objection",
        0.4949246952252326
      ]
    ]
  },
  {
    "utterance number": 261,
    "timestamp": "2023-03-21",
    "speaker": "KG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " So Chris knows this but for everyone else, I am very strongly in favor of Option 2 over Option 1, and in particular the shared namespace aspect of option, one seems like it ought to be fatal to me",
        "polarity": 0.365,
        "subjectivity": 0.6433333333333333
      },
      {
        "sentence number": 2,
        "text": " I understand not everyone shares that intuition, but for me, the con is: we are introducing a new Global shared namespace",
        "polarity": 0.06818181818181818,
        "subjectivity": 0.22727272727272727
      },
      {
        "sentence number": 3,
        "text": " I would prefer to kill most proposals over having a new global shared namespace",
        "polarity": 0.21212121212121213,
        "subjectivity": 0.3181818181818182
      },
      {
        "sentence number": 4,
        "text": " So, for option 2 the only listed cons, there are two",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 5,
        "text": " One was that it makes inheritance trickier, which I kind of agree with",
        "polarity": 0.6,
        "subjectivity": 0.9
      },
      {
        "sentence number": 6,
        "text": " The other is that it doesn't allow you to share public metadata, but of course it does allow you to share public metadata as Chris pointed out",
        "polarity": -0.041666666666666664,
        "subjectivity": 0.16944444444444443
      },
      {
        "sentence number": 7,
        "text": " You share the way that you always share data between libraries, which is that you export a function that allows people to look up data",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 8,
        "text": " The downside of this as again, Chris pointed out is that this means that you might have multiple versions of a library built into your application and they would have different versions of the metadata",
        "polarity": 0.0,
        "subjectivity": 0.3
      },
      {
        "sentence number": 9,
        "text": " But to my mind, this is like I'm actively good thing",
        "polarity": 0.7,
        "subjectivity": 0.6000000000000001
      },
      {
        "sentence number": 10,
        "text": " This is a property that we want, the whole reason that the build system in, for example, npm, works the way that it does is because the requirement that you have like a globally unique version of every library and as soon as you start including multiple versions of a library things break, that was a very bad situation and the situation that we like is where two different things can import",
        "polarity": -0.06699999999999998,
        "subjectivity": 0.5733333333333334
      },
      {
        "sentence number": 11,
        "text": " from different versions",
        "polarity": 0.0,
        "subjectivity": 0.6
      },
      {
        "sentence number": 12,
        "text": " of the same library and both bits of the library can be in the same application",
        "polarity": 0.0,
        "subjectivity": 0.125
      },
      {
        "sentence number": 13,
        "text": " And that works",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 14,
        "text": " I don't have to worry about if I upgrade you know, 1",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 15,
        "text": "0 to version 2",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 16,
        "text": "0, which changes how the type property on the metadata works that breaks everything because I have a different library that's expecting version 1 of the type meta data and like have one library that expects version 1 of the type meta data and one version that expects version 2 of the type meta data",
        "polarity": 0.0,
        "subjectivity": 0.6
      },
      {
        "sentence number": 17,
        "text": " And now, those fundamentally cannot operate because they are working in the shared namespace that is a bad situation",
        "polarity": -0.6999999999999998,
        "subjectivity": 0.6666666666666666
      },
      {
        "sentence number": 18,
        "text": " which we should avoid it",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 19,
        "text": " But we avoid it the way we always avoid it, which is that you used imports and exports and the build system just wires things up for you",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 20,
        "text": " so, I really don't like having a shared Global namespace",
        "polarity": 0.1,
        "subjectivity": 0.1
      },
      {
        "sentence number": 21,
        "text": " I think, that is very bad thing and importing and exporting works great for everyone except TypeScript to as a genuinely unique constraint, but you do get shared metadata with option two, you just export a thing that lets you share the same way you always share",
        "polarity": 0.06625000000000006,
        "subjectivity": 0.6854166666666667
      },
      {
        "sentence number": 22,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.06799120234604109,
    "subjectivity": 0.4590029325513196,
    "keywords": [
      [
        "Global shared namespace",
        0.02146342143112852
      ],
      [
        "shared namespace",
        0.0394810151719523
      ],
      [
        "shared Global namespace",
        0.04292684286225704
      ],
      [
        "shared namespace aspect",
        0.04639186773364583
      ],
      [
        "Global shared",
        0.054617506702912794
      ],
      [
        "Option",
        0.06014254333389041
      ],
      [
        "namespace",
        0.06556864624208805
      ],
      [
        "share",
        0.0668913027628576
      ],
      [
        "strongly in favor",
        0.06849595408271099
      ],
      [
        "shared",
        0.06933471780478476
      ]
    ]
  },
  {
    "utterance number": 262,
    "timestamp": "2023-03-21",
    "speaker": "KHG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I do want to respond to that",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " It's not as simple as you make it seem a great example of where this could absolutely fall down very easily is dependency injection",
        "polarity": 0.28155555555555556,
        "subjectivity": 0.6592063492063491
      },
      {
        "sentence number": 3,
        "text": " If you have a single container for your app, which is the entire point of dependency injection, and that container gets a version of the metadata that does not fully describe everything that is supposed to be injected, your entire app will fall apart and you can easily get into that situation if you have a minor version difference between two libraries, not a major version even just a minor version",
        "polarity": 0.03295068027210885,
        "subjectivity": 0.45680272108843545
      },
      {
        "sentence number": 4,
        "text": " And so now, they're bundling two separate minor versions, and build tools",
        "polarity": -0.05,
        "subjectivity": 0.2
      },
      {
        "sentence number": 5,
        "text": " make these types of decisions all the time",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": " This is not spec'd",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 7,
        "text": " We do not have a spec for when you deduplicate modules and when you don't",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 8,
        "text": " So you basically are pushing this problem to modules, and you're saying like, Okay, it's up to the build system to figure out, and now everybody has to learn all the details of the build system to figure out",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 9,
        "text": " To duplicate everything just so they can have their dependency injection",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 10,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.14917375283446713,
    "subjectivity": 0.5138321995464853,
    "keywords": [
      [
        "dependency injection",
        0.03799609308672029
      ],
      [
        "injection",
        0.08927894799798018
      ],
      [
        "minor version",
        0.10529006391761687
      ],
      [
        "version",
        0.11204223444423489
      ],
      [
        "dependency",
        0.12734679009402264
      ],
      [
        "minor",
        0.12937812030339893
      ],
      [
        "build",
        0.16846129567273124
      ],
      [
        "minor version difference",
        0.18125170960984605
      ],
      [
        "build system",
        0.19978737935688878
      ],
      [
        "separate minor versions",
        0.20579719982650033
      ]
    ]
  },
  {
    "utterance number": 263,
    "timestamp": "2023-03-21",
    "speaker": "KG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " So you have exactly the opposite problem with option one, which is that now, if I have a version bump, that should have been not breaking because I have one part of my library that expect it to work, and now, the format changes And like now I can't have two versions of the library",
        "polarity": 0.125,
        "subjectivity": 0.125
      },
      {
        "sentence number": 2,
        "text": " Like, I was that not exactly the same problem problem I didn't",
        "polarity": -0.0625,
        "subjectivity": 0.1875
      },
      {
        "sentence number": 3,
        "text": " Grade, it shouldn't have broken anything because I just needed like some separate part of the application",
        "polarity": -0.4,
        "subjectivity": 0.4
      },
      {
        "sentence number": 4,
        "text": " I have a different version of the library, But like now, the format of the public namespace has changed",
        "polarity": 0.0,
        "subjectivity": 0.3333333333333333
      },
      {
        "sentence number": 5,
        "text": " And so the thing that previously worked didn't I mean this is",
        "polarity": -0.23958333333333331,
        "subjectivity": 0.4270833333333333
      }
    ],
    "polarity": -0.0837962962962963,
    "subjectivity": 0.2828703703703704,
    "keywords": [
      [
        "opposite problem",
        0.045182592285731925
      ],
      [
        "version bump",
        0.05338486462732131
      ],
      [
        "problem problem",
        0.06847622742205142
      ],
      [
        "problem",
        0.08438518874381074
      ],
      [
        "library",
        0.11615507502279919
      ],
      [
        "problem with option",
        0.1324682320811537
      ],
      [
        "bump",
        0.14543590154751754
      ],
      [
        "work",
        0.14543590154751754
      ],
      [
        "part",
        0.14926344935339095
      ],
      [
        "opposite",
        0.17076210337699174
      ]
    ]
  },
  {
    "utterance number": 264,
    "timestamp": "2023-03-21",
    "speaker": "KHG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " this is one of the things that when you're working on a dependency injection framework or something like that, you\u2019re very careful about those changes because you're aware of that",
        "polarity": 0.06,
        "subjectivity": 0.625
      }
    ],
    "polarity": 0.06,
    "subjectivity": 0.625,
    "keywords": [
      [
        "dependency injection framework",
        0.0016012214736657916
      ],
      [
        "dependency injection",
        0.013527995261974615
      ],
      [
        "injection framework",
        0.013527995261974615
      ],
      [
        "\u2019re very careful",
        0.013527995261974615
      ],
      [
        "things",
        0.1155310835876123
      ],
      [
        "working",
        0.1155310835876123
      ],
      [
        "dependency",
        0.1155310835876123
      ],
      [
        "injection",
        0.1155310835876123
      ],
      [
        "framework",
        0.1155310835876123
      ],
      [
        "\u2019re",
        0.1155310835876123
      ]
    ]
  },
  {
    "utterance number": 265,
    "timestamp": "2023-03-21",
    "speaker": "KG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " okay",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 2,
        "text": " So if the solution to this problem is that people should be very careful, we shouldn't produce a new thing they have to be very careful about",
        "polarity": -0.04121212121212122,
        "subjectivity": 0.8181818181818182
      },
      {
        "sentence number": 3,
        "text": " They should just live in the world that they're already in, where deduplication and non-duplication of libraries is a thing that comes up",
        "polarity": 0.13636363636363635,
        "subjectivity": 0.5
      },
      {
        "sentence number": 4,
        "text": " That's a thing that is familiar to people already",
        "polarity": 0.375,
        "subjectivity": 0.5
      },
      {
        "sentence number": 5,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.14795454545454545,
    "subjectivity": 0.6590909090909091,
    "keywords": [
      [
        "thing",
        0.1343720694951866
      ],
      [
        "careful",
        0.19831830119131896
      ],
      [
        "people",
        0.2516209206168205
      ],
      [
        "deduplication and non-duplication",
        0.4352696441901947
      ],
      [
        "non-duplication of libraries",
        0.4352696441901947
      ],
      [
        "solution",
        0.456894948435782
      ],
      [
        "problem",
        0.456894948435782
      ],
      [
        "produce",
        0.456894948435782
      ],
      [
        "live",
        0.550696657337096
      ],
      [
        "world",
        0.550696657337096
      ]
    ]
  },
  {
    "utterance number": 266,
    "timestamp": "2023-03-21",
    "speaker": "KHG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " and that is it's a thing that doesn't necessarily even have a solution like some build tools",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 2,
        "text": " Don't give you the option to deduplicate things properly",
        "polarity": 0.0,
        "subjectivity": 0.1
      },
      {
        "sentence number": 3,
        "text": " great, but like the names will just collide",
        "polarity": 0.8,
        "subjectivity": 0.75
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.4,
    "subjectivity": 0.875,
    "keywords": [
      [
        "build tools",
        0.045658974599395316
      ],
      [
        "tools",
        0.16656434632039416
      ],
      [
        "deduplicate things properly",
        0.21110260617364077
      ],
      [
        "things properly",
        0.250683394062554
      ],
      [
        "necessarily",
        0.26215252189023136
      ],
      [
        "solution",
        0.26215252189023136
      ],
      [
        "build",
        0.26215252189023136
      ],
      [
        "great",
        0.31008279506805675
      ],
      [
        "deduplicate things",
        0.3702789559574124
      ],
      [
        "properly",
        0.4097165700294581
      ]
    ]
  },
  {
    "utterance number": 267,
    "timestamp": "2023-03-21",
    "speaker": "KG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " That is not a solution to the problem, it's - \"You only get deduplication\" is no more of a solution to this problem than like \"deduplication works for metadata the way that it already works in the rest of your application\"",
        "polarity": -0.125,
        "subjectivity": 0.75
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": -0.125,
    "subjectivity": 0.75,
    "keywords": [
      [
        "deduplication works",
        0.04452854842667469
      ],
      [
        "solution",
        0.05859701777520971
      ],
      [
        "works for metadata",
        0.07338814090695724
      ],
      [
        "application",
        0.10126023850781558
      ],
      [
        "problem",
        0.10323551202386773
      ],
      [
        "deduplication",
        0.10323551202386773
      ],
      [
        "works",
        0.10323551202386773
      ],
      [
        "metadata",
        0.14969278847029802
      ],
      [
        "rest",
        0.14969278847029802
      ]
    ]
  },
  {
    "utterance number": 268,
    "timestamp": "2023-03-21",
    "speaker": "DE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " there's a lot of people in the queue",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " You made a good point",
        "polarity": 0.7,
        "subjectivity": 0.6000000000000001
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.7,
    "subjectivity": 0.6000000000000001,
    "keywords": [
      [
        "lot of people",
        0.04188746641162499
      ],
      [
        "queue",
        0.12363091320521931
      ],
      [
        "good point",
        0.18075564686791562
      ],
      [
        "lot",
        0.2005079697193566
      ],
      [
        "people",
        0.2005079697193566
      ],
      [
        "made a good",
        0.2766850298235749
      ],
      [
        "point",
        0.32883716426354986
      ],
      [
        "made",
        0.46553351027698087
      ],
      [
        "good",
        0.46553351027698087
      ]
    ]
  },
  {
    "utterance number": 269,
    "timestamp": "2023-03-21",
    "speaker": "RBN",
    "sentences": [
      {
        "sentence number": 1,
        "text": " So my concern",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " is and it's like KG has articulated, as being a TypeScript specific concern, but it really isn't my concern is not about library deduplication, although I do think that is a valid concern",
        "polarity": 0.1,
        "subjectivity": 0.1625
      },
      {
        "sentence number": 3,
        "text": " My concern is about: Script is a valid parsing goal",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " there",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " I don't have numbers but my intuition is that the largest majority of existing JavaScript code run on the web is still scripts, not modules",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": " A system that purely depends on the concept of public metadata being only available with modules is not actually public",
        "polarity": 0.12285714285714286,
        "subjectivity": 0.40666666666666673
      },
      {
        "sentence number": 7,
        "text": " And so the TypeScript specific example is that TypeScript would like to be able to at compile time as a compiler option, inject a decorator that adds metadata about the types of the things that you are decorating",
        "polarity": 0.25,
        "subjectivity": 0.375
      },
      {
        "sentence number": 8,
        "text": " This is the TypeScript emit decorator metadata flag, that we've had since 2015",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 9,
        "text": " and we'd like to be able to bring some of that capability forward and that is one of the main motivating reasons that we even introduced metadata as part of this proposal",
        "polarity": 0.3333333333333333,
        "subjectivity": 0.47916666666666663
      },
      {
        "sentence number": 10,
        "text": " For TypeScript to be able to work correctly and inject a decorator that can attach metadata in a script environments, I cannot depend on a module",
        "polarity": 0.5,
        "subjectivity": 0.625
      },
      {
        "sentence number": 11,
        "text": " depending on the module require an await of an import",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 12,
        "text": " Each",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 13,
        "text": " because I can't necessarily import",
        "polarity": 0.0,
        "subjectivity": 1.0
      },
      {
        "sentence number": 14,
        "text": " And I can't break the users expected",
        "polarity": -0.1,
        "subjectivity": 0.4
      },
      {
        "sentence number": 15,
        "text": " They expected semantics of code",
        "polarity": -0.1,
        "subjectivity": 0.4
      },
      {
        "sentence number": 16,
        "text": " that does not `await` currently by randomly injected in an await",
        "polarity": -0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 17,
        "text": " And then, it could also be in the middle of an asynchronous function that you declare a class declaration",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 18,
        "text": " So that means that we cannot depend on modules",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 19,
        "text": " So if the only solution is to say that public metadata is only valid, if you're using modules",
        "polarity": 0.0,
        "subjectivity": 0.6888888888888888
      },
      {
        "sentence number": 20,
        "text": " completely cuts off a very large percentage of people that are currently using JavaScript with scripts today in bundlers, etc",
        "polarity": 0.1261904761904762,
        "subjectivity": 0.4523809523809524
      },
      {
        "sentence number": 21,
        "text": ", and saying that this solution can only be solved, very far down the lin when everybody has moved modules, and I don't think that that is a valid position or I don't think that that's a very strong position, and while I completely understand the concern about having a namespace that allows for possible collision having a mutable, object does not prevent you from using WeakMaps to resolve those potential collisions, It does prevent well-crafted and well, written code that can use a namespace like this",
        "polarity": 0.09111111111111111,
        "subjectivity": 0.8060317460317459
      },
      {
        "sentence number": 22,
        "text": " successfully from being able to do a very important feature in a script environment where they don't have access to modules to have that type of behavior",
        "polarity": 0.59,
        "subjectivity": 0.8583333333333334
      },
      {
        "sentence number": 23,
        "text": " The other concern that we have is that \u2013 we've kind of rehash this over and over again on GitHub \u2013 but every solution that's been presented requires significant amounts of rewriting to support it, and we really don't think that that's valid or that's a viable option",
        "polarity": 0.2,
        "subjectivity": 0.47000000000000003
      },
      {
        "sentence number": 24,
        "text": " So our strong position is that option",
        "polarity": 0.4333333333333333,
        "subjectivity": 0.7333333333333333
      },
      {
        "sentence number": 25,
        "text": " One does not prevent you from having the type of isolation you'd like out of option two but option two completely prevents the types of behaviors, we'd like to be able to use in a script environment",
        "polarity": 0.3,
        "subjectivity": 0.5125
      },
      {
        "sentence number": 26,
        "text": " So we believe option two is completely completely a non-starter",
        "polarity": 0.1,
        "subjectivity": 0.4
      },
      {
        "sentence number": 27,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.15953892668178382,
    "subjectivity": 0.5509769463340891,
    "keywords": [
      [
        "library deduplication",
        0.04736418603222969
      ],
      [
        "metadata",
        0.06183095567171345
      ],
      [
        "concern",
        0.0668978613368583
      ],
      [
        "modules",
        0.06830493694736284
      ],
      [
        "option",
        0.07283013311008513
      ],
      [
        "TypeScript",
        0.0741000027371149
      ],
      [
        "Script",
        0.08619709821749176
      ],
      [
        "valid",
        0.09207082199300352
      ],
      [
        "TypeScript specific",
        0.09404816664441788
      ],
      [
        "TypeScript specific concern",
        0.09798313358991935
      ]
    ]
  },
  {
    "utterance number": 270,
    "timestamp": "2023-03-21",
    "speaker": "RPR",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Okay",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 2,
        "text": " and so on the time box, we only have four minutes left but given that we got through the first item",
        "polarity": 0.08333333333333333,
        "subjectivity": 0.4444444444444444
      },
      {
        "sentence number": 3,
        "text": " happy to let this run till 4:30",
        "polarity": 0.8,
        "subjectivity": 1.0
      },
      {
        "sentence number": 4,
        "text": " so that's 13 minutes",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " There's still a lot on the queue so please keep that in mind",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": " Justin",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 7,
        "text": " so, Justin's point was about a practical example of Library duplication",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 8,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.31,
    "subjectivity": 0.5666666666666667,
    "keywords": [
      [
        "time box",
        0.029193956032876094
      ],
      [
        "minutes left",
        0.09186717966630828
      ],
      [
        "run till 4:30",
        0.12837721052178822
      ],
      [
        "Okay.",
        0.14475191755455702
      ],
      [
        "box",
        0.14475191755455702
      ],
      [
        "item",
        0.14475191755455702
      ],
      [
        "Justin",
        0.18771212824663464
      ],
      [
        "time",
        0.19596178956359103
      ],
      [
        "left",
        0.19596178956359103
      ],
      [
        "till 4:30",
        0.2044003799722172
      ]
    ]
  },
  {
    "utterance number": 271,
    "timestamp": "2023-03-21",
    "speaker": "JFI",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Yeah, I want to point out that the library just location problem and solving that has dangers on, on both sides of things",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " So, like, yes, if your light library is choosing to use immutable metadata object and choosing to use a of versioned and generic key",
        "polarity": 0.13333333333333333,
        "subjectivity": 0.5666666666666667
      },
      {
        "sentence number": 3,
        "text": " You can run into problems of collisions on that",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " On the other hand if a library naively uses the meta data object as a key into a WeakMap, things can break, and in my experience break more frequently, than the danger of collisions there",
        "polarity": 0.035,
        "subjectivity": 0.635
      },
      {
        "sentence number": 5,
        "text": " And this is because it's just so easy to get in situations where you have duplication",
        "polarity": 0.43333333333333335,
        "subjectivity": 0.8333333333333334
      },
      {
        "sentence number": 6,
        "text": " so maybe you're importing your decorator from a library that for some reason, got its own copy of the base class of the thing",
        "polarity": -0.10000000000000003,
        "subjectivity": 1.0
      },
      {
        "sentence number": 7,
        "text": " you're decorating installed and so that chain in the dependency trees using one module that has the metadata WeakMap in it",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 8,
        "text": " and then the base class, the user is decorating Imports a different version and so is using a different WeakMap",
        "polarity": -0.26666666666666666,
        "subjectivity": 0.7333333333333334
      },
      {
        "sentence number": 9,
        "text": " And now the class when it boots up cannot see the metadata that the decorator applied because they're in two different WeakMaps",
        "polarity": 0.0,
        "subjectivity": 0.6
      },
      {
        "sentence number": 10,
        "text": " So, I think that libraries are going to have to be very careful",
        "polarity": -0.13,
        "subjectivity": 1.0
      },
      {
        "sentence number": 11,
        "text": " No matter which way this goes",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 12,
        "text": " and one way, you know, they're going to have to have some kind of versioning scheme for their metadata keys or they're going to have to hang these WeakMaps off of the global object, with a version two property name off of there, to ensure that they share when they need to",
        "polarity": 0.3,
        "subjectivity": 0.45
      },
      {
        "sentence number": 13,
        "text": " They have to do one of these two things like libraries need to be aware of versioning and when they can reuse the same WeakMap or the same key, So I Sirius is very, very equivalent",
        "polarity": 0.10200000000000001,
        "subjectivity": 0.378
      },
      {
        "sentence number": 14,
        "text": " And I hope the library offers are going to be careful here because if you're writing to metadata, you can't lose a generic",
        "polarity": 0.0,
        "subjectivity": 0.3333333333333333
      },
      {
        "sentence number": 15,
        "text": " You also can't use a naive",
        "polarity": -0.3,
        "subjectivity": 1.0
      },
      {
        "sentence number": 16,
        "text": " WeakMap map still in the module",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 17,
        "text": " both of them are going to break",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 18,
        "text": " far too too often",
        "polarity": 0.1,
        "subjectivity": 1.0
      },
      {
        "sentence number": 19,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.028154761904761908,
    "subjectivity": 0.617797619047619,
    "keywords": [
      [
        "library",
        0.07198492347201992
      ],
      [
        "location problem",
        0.08255323566812058
      ],
      [
        "WeakMap",
        0.09275832252083832
      ],
      [
        "metadata",
        0.09288876008991856
      ],
      [
        "object",
        0.14799939096591483
      ],
      [
        "things",
        0.14839121415681206
      ],
      [
        "key",
        0.16228445398447425
      ],
      [
        "class",
        0.1658232365933463
      ],
      [
        "problem and solving",
        0.17031229717505653
      ],
      [
        "base class",
        0.17467079955892767
      ]
    ]
  },
  {
    "utterance number": 272,
    "timestamp": "2023-03-21",
    "speaker": "DE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I think we seem to have a shared understanding that Library duplication happens",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " and the question is what's the behavior that we want to occur when this happens",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " And KG and many other people have articulated kind of different things about what behavior should occur",
        "polarity": 0.24375,
        "subjectivity": 0.59375
      },
      {
        "sentence number": 4,
        "text": " I think we should be approaching this kind of problem pragmatically, rather than from first principles",
        "polarity": 0.2833333333333333,
        "subjectivity": 0.41111111111111115
      },
      {
        "sentence number": 5,
        "text": " and I think we have a bunch of practical pieces here, where we do want them to be referring to the same",
        "polarity": 0.0,
        "subjectivity": 0.125
      },
      {
        "sentence number": 6,
        "text": " the same thing",
        "polarity": 0.0,
        "subjectivity": 0.125
      },
      {
        "sentence number": 7,
        "text": " I don't think it's useful to have a strong first principles argument about how you shouldn't have any shared namespaces, because we have a ton of these all over the place",
        "polarity": 0.3277777777777778,
        "subjectivity": 0.35555555555555557
      },
      {
        "sentence number": 8,
        "text": " Like how do you get to anything",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 9,
        "text": " so, I'm in favor of the first option",
        "polarity": 0.25,
        "subjectivity": 0.3333333333333333
      },
      {
        "sentence number": 10,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.23525641025641025,
    "subjectivity": 0.40448717948717944,
    "keywords": [
      [
        "Library duplication happens.",
        0.002390290660861173
      ],
      [
        "understanding that Library",
        0.0130468736031877
      ],
      [
        "Library duplication",
        0.0130468736031877
      ],
      [
        "duplication happens.",
        0.03193435565344865
      ],
      [
        "Library",
        0.07321058400500581
      ],
      [
        "shared understanding",
        0.08755892842103058
      ],
      [
        "behavior",
        0.14275678278423987
      ],
      [
        "occur",
        0.14275678278423987
      ],
      [
        "understanding",
        0.175915069058945
      ],
      [
        "duplication",
        0.175915069058945
      ]
    ]
  },
  {
    "utterance number": 273,
    "timestamp": "2023-03-21",
    "speaker": "MAH",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Yeah",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " I'm not sure that module identity discontinuity is problem re specific to metadata decorators made of metadata",
        "polarity": -0.125,
        "subjectivity": 0.5069444444444444
      },
      {
        "sentence number": 3,
        "text": " This can happen in a lot of other cases and it's more General ecosystem problem",
        "polarity": 0.1416666666666667,
        "subjectivity": 0.4583333333333333
      },
      {
        "sentence number": 4,
        "text": " problem",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " that I'm not sure should wait that heavily on the decision here",
        "polarity": -0.225,
        "subjectivity": 0.6944444444444444
      },
      {
        "sentence number": 6,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": -0.03928571428571429,
    "subjectivity": 0.5396825396825397,
    "keywords": [
      [
        "Yeah",
        0.08330571608589181
      ],
      [
        "module identity discontinuity",
        0.1856336008904962
      ],
      [
        "metadata decorators made",
        0.2083816641926482
      ],
      [
        "General ecosystem problem.",
        0.21897597766001034
      ],
      [
        "General ecosystem",
        0.22590881217016842
      ],
      [
        "metadata",
        0.25297846358832826
      ],
      [
        "module identity",
        0.27915536550116243
      ],
      [
        "identity discontinuity",
        0.27915536550116243
      ],
      [
        "discontinuity is problem",
        0.27915536550116243
      ],
      [
        "problem re specific",
        0.27915536550116243
      ]
    ]
  },
  {
    "utterance number": 274,
    "timestamp": "2023-03-21",
    "speaker": "KHG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I think the reason I bring that up is not because it is a specific problem to decorators",
        "polarity": 0.0,
        "subjectivity": 0.125
      },
      {
        "sentence number": 2,
        "text": "I don't think that\u2019s the way it was being framed",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " Was that Global namespace is have all the problems and modules fix those problems",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " And thus, they have no problems",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " And my point was just like modules had problems, too",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": " like",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 7,
        "text": " we have a hard problem here and I think no matter what the solution we choose is, there's going to be a lot of trickiness in dealing with all of the problems of it because the goal is to share public metadata in a global way that is act that is the actual goal",
        "polarity": -0.07291666666666667,
        "subjectivity": 0.17708333333333331
      },
      {
        "sentence number": 8,
        "text": " by the way,",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": -0.04861111111111111,
    "subjectivity": 0.13888888888888887,
    "keywords": [
      [
        "reason I bring",
        0.03984573510451312
      ],
      [
        "problems",
        0.09230076497742906
      ],
      [
        "specific problem",
        0.09931225382143648
      ],
      [
        "framed",
        0.16468430062600128
      ],
      [
        "Global",
        0.18220020380557464
      ],
      [
        "reason",
        0.19575211553083063
      ],
      [
        "bring",
        0.19575211553083063
      ],
      [
        "specific",
        0.19575211553083063
      ],
      [
        "decorators.I",
        0.19575211553083063
      ],
      [
        "Global namespace",
        0.2003784593844706
      ]
    ]
  },
  {
    "utterance number": 275,
    "timestamp": "2023-03-21",
    "speaker": "MAH",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I've have a little nit on that",
        "polarity": -0.1875,
        "subjectivity": 0.5
      },
      {
        "sentence number": 2,
        "text": " It's not a global name space",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " It's a namespace scope to the class being decorated",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": -0.09375,
    "subjectivity": 0.25,
    "keywords": [
      [
        "global name space",
        0.14005713113751553
      ],
      [
        "nit",
        0.16383273847958243
      ],
      [
        "class being decorated",
        0.23956129807083346
      ],
      [
        "space",
        0.3033846052649951
      ],
      [
        "namespace scope",
        0.3295258815075752
      ],
      [
        "decorated",
        0.3881970960906714
      ],
      [
        "global",
        0.4049347717850166
      ],
      [
        "namespace",
        0.49784754196738834
      ],
      [
        "scope",
        0.49784754196738834
      ],
      [
        "class",
        0.49784754196738834
      ]
    ]
  },
  {
    "utterance number": 276,
    "timestamp": "2023-03-21",
    "speaker": "KHG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " yeah",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " I think we're using that as a shorthand, but yeah",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " we tend to move forward",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "yeah",
        0.15993305900549767
      ],
      [
        "shorthand",
        0.4340307474356052
      ],
      [
        "forward",
        0.5276993038251123
      ],
      [
        "move forward",
        0.5408147854492137
      ],
      [
        "tend",
        0.6651377514055722
      ],
      [
        "move",
        0.6651377514055722
      ],
      [
        "tend to move",
        0.7934267520333542
      ]
    ]
  },
  {
    "utterance number": 277,
    "timestamp": "2023-03-21",
    "speaker": "DE",
    "sentences": [
      {
        "sentence number": 1,
        "text": " so, just overall, I think it's important that we keep this system simple and I'm happy that stage one that option 1 is a very simple proposal",
        "polarity": 0.24000000000000005,
        "subjectivity": 0.5642857142857143
      },
      {
        "sentence number": 2,
        "text": " It's great that the decorator proposal just keeps getting similar and simpler",
        "polarity": 0.4,
        "subjectivity": 0.575
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.2857142857142857,
    "subjectivity": 0.5673469387755102,
    "keywords": [
      [
        "happy that stage",
        0.025205094418535638
      ],
      [
        "system simple",
        0.02818091216928084
      ],
      [
        "simple proposal",
        0.05217913584589556
      ],
      [
        "simple",
        0.08740106550173525
      ],
      [
        "option",
        0.11436639497981606
      ],
      [
        "decorator proposal",
        0.12527140951609053
      ],
      [
        "similar and simpler",
        0.13830332156988706
      ],
      [
        "proposal",
        0.1418503717089202
      ],
      [
        "important",
        0.1567973745636324
      ],
      [
        "system",
        0.1567973745636324
      ]
    ]
  },
  {
    "utterance number": 278,
    "timestamp": "2023-03-21",
    "speaker": "SYG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Yes",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " I like the simplicity but I'll stop it there",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " I don't think judging by the matrix chat",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " Don't think I'm actually qualified to give much of ecosystem opinion here",
        "polarity": 0.1,
        "subjectivity": 0.15000000000000002
      },
      {
        "sentence number": 5,
        "text": " but just implementation",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": " I like simplicity",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 7,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.1,
    "subjectivity": 0.15000000000000002,
    "keywords": [
      [
        "simplicity",
        0.25874011977826983
      ],
      [
        "matrix chat",
        0.2903424995615962
      ],
      [
        "stop",
        0.4208663326772826
      ],
      [
        "chat",
        0.4375320384947561
      ],
      [
        "qualified to give",
        0.4683080605152935
      ],
      [
        "ecosystem opinion",
        0.4683080605152935
      ],
      [
        "judging",
        0.5142753988681822
      ],
      [
        "matrix",
        0.5142753988681822
      ],
      [
        "implementation",
        0.5211182883653847
      ],
      [
        "qualified",
        0.5647512814059288
      ]
    ]
  },
  {
    "utterance number": 279,
    "timestamp": "2023-03-21",
    "speaker": "JFI",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Yeah",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " I mean I wanted to comment, I mean, I think number three is interesting when you look at it because you it supposes that is getting rid of this",
        "polarity": -0.041666666666666664,
        "subjectivity": 0.625
      },
      {
        "sentence number": 3,
        "text": " The shared namespace here",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " But then you see the example, use a simple dot for all throughout it And you're like, well, it's just using a different global namespace",
        "polarity": 0.0,
        "subjectivity": 0.319047619047619
      },
      {
        "sentence number": 5,
        "text": " I think that",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": " And then, it's just very cumbersome to use and so I don't know that the supposed benefits actually materialize in are worth the cost of the extra",
        "polarity": 0.125,
        "subjectivity": 0.15
      },
      {
        "sentence number": 7,
        "text": " syntax look for option",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 8,
        "text": " Three",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 9,
        "text": " three",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 10,
        "text": " But I think that generalizes to two other things here",
        "polarity": -0.125,
        "subjectivity": 0.375
      },
      {
        "sentence number": 11,
        "text": " I think that what libraries like, what I maintain are going to have to do, is specifically seek out a global namespace and that there's a lot of equivalence is here, right",
        "polarity": 0.14285714285714285,
        "subjectivity": 0.26785714285714285
      },
      {
        "sentence number": 12,
        "text": " Symbol that for and window dot underscore, whatever you want to name your property for your WeakMap are basically the same as a key in the metadata object and and and I don't know",
        "polarity": 0.0,
        "subjectivity": 0.5625
      },
      {
        "sentence number": 13,
        "text": " I think that we run the risk of, you know, making the API Is but having very equivalent hazards, no matter which one we choose here",
        "polarity": 0.2,
        "subjectivity": 0.3
      },
      {
        "sentence number": 14,
        "text": " here",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 15,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.04598214285714286,
    "subjectivity": 0.36049107142857145,
    "keywords": [
      [
        "global namespace",
        0.09272545927863508
      ],
      [
        "Yeah",
        0.10819574086796699
      ],
      [
        "namespace",
        0.11554929977855358
      ],
      [
        "wanted to comment",
        0.14120387655195107
      ],
      [
        "shared namespace",
        0.19050383356347741
      ],
      [
        "global",
        0.22564558622366673
      ],
      [
        "dot",
        0.2466182182734779
      ],
      [
        "making the API",
        0.3242247347357644
      ],
      [
        "comment",
        0.33397873073731515
      ],
      [
        "simple dot",
        0.33819381845436125
      ]
    ]
  },
  {
    "utterance number": 280,
    "timestamp": "2023-03-21",
    "speaker": "CDA",
    "sentences": [
      {
        "sentence number": 1,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " I don't have anything to add from what's already been pointed out, just expressing support for option 1",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " The downsides of two and three I think are a little more hard to swallow than for option 1, I find them less ergonomic and more limiting",
        "polarity": 0.07083333333333333,
        "subjectivity": 0.4216666666666667
      },
      {
        "sentence number": 4,
        "text": " Of course, we don't want people stepping on each other in option one, but still support it",
        "polarity": -0.125,
        "subjectivity": 0.375
      },
      {
        "sentence number": 5,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.03819444444444444,
    "subjectivity": 0.4138888888888889,
    "keywords": [
      [
        "expressing support",
        0.1285541723217797
      ],
      [
        "option",
        0.15536195965935842
      ],
      [
        "add",
        0.2275323537211876
      ],
      [
        "pointed",
        0.2275323537211876
      ],
      [
        "expressing",
        0.2275323537211876
      ],
      [
        "support",
        0.25031715304078705
      ],
      [
        "hard to swallow",
        0.3435750558226363
      ],
      [
        "limiting",
        0.3956682559478504
      ],
      [
        "downsides",
        0.5056847382863404
      ],
      [
        "hard",
        0.5056847382863404
      ]
    ]
  },
  {
    "utterance number": 281,
    "timestamp": "2023-03-21",
    "speaker": "KHG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " So the reason we're using a frozen object is so that you can access parent metadata during decoration",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " Otherwise we could use a symbol but it has all of the downsides of option to and basically has all the same problems",
        "polarity": 0.0,
        "subjectivity": 0.125
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.125,
    "keywords": [
      [
        "access parent metadata",
        0.003469853724036919
      ],
      [
        "metadata during decoration",
        0.015099935621315529
      ],
      [
        "frozen object",
        0.02249651976012989
      ],
      [
        "access parent",
        0.02249651976012989
      ],
      [
        "parent metadata",
        0.02249651976012989
      ],
      [
        "decoration",
        0.10028582371075691
      ],
      [
        "reason",
        0.14832923246533666
      ],
      [
        "frozen",
        0.14832923246533666
      ],
      [
        "object",
        0.14832923246533666
      ],
      [
        "access",
        0.14832923246533666
      ]
    ]
  },
  {
    "utterance number": 282,
    "timestamp": "2023-03-21",
    "speaker": "JHD",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Well, I guess I'm confused",
        "polarity": -0.4,
        "subjectivity": 0.7
      },
      {
        "sentence number": 2,
        "text": " In the frozen object case, the object is meant to be a key in a weak selection, right",
        "polarity": -0.029761904761904767,
        "subjectivity": 0.7202380952380952
      },
      {
        "sentence number": 3,
        "text": " Ah, the prototype has a parent always, so you climb up the frozen object, right, thank you",
        "polarity": 0.2857142857142857,
        "subjectivity": 0.5357142857142857
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": -0.040714285714285724,
    "subjectivity": 0.6792857142857143,
    "keywords": [
      [
        "guess I confused",
        0.028792209313572785
      ],
      [
        "frozen object case",
        0.09162885461944964
      ],
      [
        "frozen object",
        0.09745909042191295
      ],
      [
        "confused",
        0.1437507704109121
      ],
      [
        "object",
        0.15801907887745353
      ],
      [
        "frozen",
        0.17204949578330392
      ],
      [
        "guess",
        0.194687085254201
      ],
      [
        "weak selection",
        0.20207336995425682
      ],
      [
        "object case",
        0.2115388442575124
      ],
      [
        "case",
        0.3683172027543675
      ]
    ]
  },
  {
    "utterance number": 283,
    "timestamp": "2023-03-21",
    "speaker": "JFI",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Yeah, just real quick",
        "polarity": 0.5,
        "subjectivity": 0.75
      },
      {
        "sentence number": 2,
        "text": " I want to iterate because it gets asked a lot when we're going to use the new decorators implementation and TypeScript and we simply cannot use it until we have metadata",
        "polarity": 0.06818181818181818,
        "subjectivity": 0.40584415584415584
      },
      {
        "sentence number": 3,
        "text": " So, as that type of constraint here, you know, my number one concern is that metadata before word at all",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " So I don't know how many other libraries in this are in this position where that even though starting to roll out you can't use it until that a bit of the curse but I want to reiterate that That's all",
        "polarity": 0.125,
        "subjectivity": 0.325
      },
      {
        "sentence number": 5,
        "text": " This is an important topic",
        "polarity": 0.4,
        "subjectivity": 1.0
      },
      {
        "sentence number": 6,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.2016233766233766,
    "subjectivity": 0.5052411873840446,
    "keywords": [
      [
        "real quick",
        0.016261627069057018
      ],
      [
        "Yeah",
        0.08525496803424436
      ],
      [
        "quick",
        0.11257567152966487
      ],
      [
        "real",
        0.14213921853548062
      ],
      [
        "asked a lot",
        0.1539567040456922
      ],
      [
        "decorators implementation",
        0.1539567040456922
      ],
      [
        "implementation and TypeScript",
        0.1539567040456922
      ],
      [
        "metadata",
        0.17985870310886948
      ],
      [
        "type of constraint",
        0.2625943372951926
      ],
      [
        "number one concern",
        0.2625943372951926
      ]
    ]
  },
  {
    "utterance number": 284,
    "timestamp": "2023-03-21",
    "speaker": "MAH",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Yeah",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " I want to say option 3 for me is a non-starter because it actually enables for a managed decorator to interfere with another decorator",
        "polarity": 0.0,
        "subjectivity": 0.1
      },
      {
        "sentence number": 3,
        "text": " by having a disconnect between the context subjects which in Option 1 & 2 is the identities preserved the creator can set this metadata that would conflict",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " The fact, it's the symbol doesn't mean there is no possibility of overwriting, another decorators metadata",
        "polarity": -0.3125,
        "subjectivity": 0.6875
      },
      {
        "sentence number": 5,
        "text": " It just means like non-malicious ori by chance overriding would not happen, So imagine decorator can go and set",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": " the metadata",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 7,
        "text": " of another decorator and override it and if even if they do and give an option 3 forces, if you want private data you have",
        "polarity": 0.0,
        "subjectivity": 0.375
      },
      {
        "sentence number": 8,
        "text": " to use a single entry and associated with a WeakMap key",
        "polarity": -0.03571428571428571,
        "subjectivity": 0.6071428571428571
      },
      {
        "sentence number": 9,
        "text": " So now all the sudden you could get that overridden and there is no way to protect against against that",
        "polarity": 0.0,
        "subjectivity": 0.5
      }
    ],
    "polarity": -0.06398809523809523,
    "subjectivity": 0.4794642857142857,
    "keywords": [
      [
        "option",
        0.09656385350507421
      ],
      [
        "Yeah",
        0.1169029218186469
      ],
      [
        "decorator",
        0.14294625071436237
      ],
      [
        "metadata",
        0.20749625454059503
      ],
      [
        "decorators metadata",
        0.2164930222477117
      ],
      [
        "set",
        0.22633414308109873
      ],
      [
        "managed decorator",
        0.2272673839429351
      ],
      [
        "context subjects",
        0.22921020568786774
      ],
      [
        "identities preserved",
        0.22921020568786774
      ],
      [
        "preserved the creator",
        0.22921020568786774
      ]
    ]
  },
  {
    "utterance number": 285,
    "timestamp": "2023-03-21",
    "speaker": "KHG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " that's, a good point",
        "polarity": 0.7,
        "subjectivity": 0.6000000000000001
      },
      {
        "sentence number": 2,
        "text": " Yeah, I do think that that would be something we'd have to design around",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " maybe we could make it so that when you initially define metadata, like, what's that metadata, you could specify that it has makes the property like non-writable or something but that again that seems like extra complexity that personally I would not prefer,",
        "polarity": 0.0,
        "subjectivity": 0.13333333333333333
      }
    ],
    "polarity": 0.175,
    "subjectivity": 0.25,
    "keywords": [
      [
        "good point",
        0.012906437162778513
      ],
      [
        "initially define metadata",
        0.07506676431386108
      ],
      [
        "point",
        0.10373020694115662
      ],
      [
        "good",
        0.12283773385272703
      ],
      [
        "define metadata",
        0.14112060346067995
      ],
      [
        "metadata",
        0.1490959424112315
      ],
      [
        "initially define",
        0.20772812206945093
      ],
      [
        "property like non-writable",
        0.20772812206945093
      ],
      [
        "extra complexity",
        0.20772812206945093
      ],
      [
        "complexity that personally",
        0.20772812206945093
      ]
    ]
  },
  {
    "utterance number": 286,
    "timestamp": "2023-03-21",
    "speaker": "MAH",
    "sentences": [
      {
        "sentence number": 1,
        "text": " right",
        "polarity": 0.2857142857142857,
        "subjectivity": 0.5357142857142857
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.2857142857142857,
    "subjectivity": 0.5357142857142857,
    "keywords": []
  },
  {
    "utterance number": 287,
    "timestamp": "2023-03-21",
    "speaker": "KHG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " so, I don't know where we're at now with this",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " Basically, my plan was to try to get consensus here",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " on one of these options",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " so that we could propose for stage 3 at the next plenary",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " It sounds like we do not have consensus for any of the options at the moment though",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "Basically",
        0.2872396167674534
      ],
      [
        "consensus",
        0.3208882575292037
      ],
      [
        "options",
        0.3310096403033903
      ],
      [
        "plan",
        0.5281757992012881
      ],
      [
        "stage",
        0.5612462496496892
      ],
      [
        "plenary",
        0.5612462496496892
      ],
      [
        "propose for stage",
        0.5976597618909053
      ],
      [
        "propose",
        0.6665247307667389
      ],
      [
        "sounds",
        0.6952681831810531
      ],
      [
        "moment",
        0.6952681831810531
      ]
    ]
  },
  {
    "utterance number": 288,
    "timestamp": "2023-03-21",
    "speaker": "KG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I'm not going to say that this proposal can't advance unless it has my preferred semantics",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " I have said my piece",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " There are people who still prefer option one",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " We are not going to reconcile those",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " So if the proposal is to advance, we need to pick one",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": " I acknowledge I am in the minority and am ok saying we can live with option one",
        "polarity": 0.3181818181818182,
        "subjectivity": 0.5
      },
      {
        "sentence number": 7,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.3181818181818182,
    "subjectivity": 0.5,
    "keywords": [
      [
        "preferred semantics",
        0.035631081148561054
      ],
      [
        "semantics",
        0.15991765625278478
      ],
      [
        "preferred",
        0.21514314266511037
      ],
      [
        "proposal",
        0.27607877901570643
      ],
      [
        "advance",
        0.27607877901570643
      ],
      [
        "option",
        0.27713551334618675
      ],
      [
        "piece",
        0.3980005212841516
      ],
      [
        "prefer option",
        0.4750813579164351
      ],
      [
        "people",
        0.5810718509992706
      ],
      [
        "prefer",
        0.5810718509992706
      ]
    ]
  },
  {
    "utterance number": 289,
    "timestamp": "2023-03-21",
    "speaker": "MM",
    "sentences": [
      {
        "sentence number": 1,
        "text": " So, I'm going to register that option 3, given the answer to MAH\u2019s question for me is clearly disqualified so that I'm okay with either one or two",
        "polarity": 0.3,
        "subjectivity": 0.44166666666666665
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.3,
    "subjectivity": 0.44166666666666665,
    "keywords": [
      [
        "answer to MAH",
        0.013797198203993007
      ],
      [
        "MAH \u2019s question",
        0.013797198203993007
      ],
      [
        "register that option",
        0.015380821171891606
      ],
      [
        "MAH",
        0.08596317751626563
      ],
      [
        "option",
        0.09568045026443411
      ],
      [
        "register",
        0.15831692877998726
      ],
      [
        "answer",
        0.15831692877998726
      ],
      [
        "question",
        0.15831692877998726
      ],
      [
        "disqualified",
        0.15831692877998726
      ]
    ]
  },
  {
    "utterance number": 290,
    "timestamp": "2023-03-21",
    "speaker": "RPR",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I don\u2019t think anyone is pitching option 3 at this point",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " So as DE says, how about KHG would you like to ask for consensus on your preferred option",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "pitching option",
        0.07258109130574525
      ],
      [
        "option",
        0.13905502865190494
      ],
      [
        "point",
        0.1531727145735673
      ],
      [
        "preferred option",
        0.17195924913562688
      ],
      [
        "n\u2019t",
        0.2433193585127945
      ],
      [
        "pitching",
        0.2433193585127945
      ],
      [
        "KHG",
        0.2918705634684884
      ],
      [
        "consensus",
        0.5275897320195264
      ],
      [
        "preferred",
        0.5275897320195264
      ]
    ]
  },
  {
    "utterance number": 291,
    "timestamp": "2023-03-21",
    "speaker": "KHG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Yeah, Do we have consensus for option one",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " one",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "consensus for option",
        0.04188746641162499
      ],
      [
        "Yeah",
        0.05899937629682816
      ],
      [
        "consensus",
        0.2005079697193566
      ],
      [
        "option",
        0.2005079697193566
      ]
    ]
  },
  {
    "utterance number": 292,
    "timestamp": "2023-03-21",
    "speaker": "RPR",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Hey, is there any support for option one",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": " I think there was so DE, PDL, CDA",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " So you have three supporters for option one",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " Are there any objections to option one",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " Or any non-blocking concerns",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "Hey",
        0.11271772183103848
      ],
      [
        "option",
        0.15384027213878182
      ],
      [
        "PDL",
        0.15802698929372266
      ],
      [
        "CDA",
        0.15802698929372266
      ],
      [
        "support for option",
        0.2148871766672693
      ],
      [
        "support",
        0.2608365193428216
      ],
      [
        "concerns",
        0.6151868312137649
      ],
      [
        "supporters for option",
        0.616596937373982
      ],
      [
        "supporters",
        0.6410093027413974
      ],
      [
        "objections",
        0.6863474551494093
      ]
    ]
  },
  {
    "utterance number": 293,
    "timestamp": "2023-03-21",
    "speaker": "RPR",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I think JHD has a non-blocking concern",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "non-blocking concern",
        0.04940384002065631
      ],
      [
        "JHD",
        0.1447773057422032
      ],
      [
        "concern",
        0.15831692877998726
      ],
      [
        "non-blocking",
        0.29736558256021506
      ]
    ]
  },
  {
    "utterance number": 294,
    "timestamp": "2023-03-21",
    "speaker": "JHD",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I prefer option 2 but can live with option 1",
        "polarity": 0.13636363636363635,
        "subjectivity": 0.5
      },
      {
        "sentence number": 2,
        "text": " I agree with everything Kevin has said",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " So all the same reasons",
        "polarity": 0.0,
        "subjectivity": 0.125
      },
      {
        "sentence number": 4,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.06818181818181818,
    "subjectivity": 0.3125,
    "keywords": [
      [
        "prefer option",
        0.05466800462675697
      ],
      [
        "option",
        0.0936368166868279
      ],
      [
        "live with option",
        0.11883568502258415
      ],
      [
        "prefer",
        0.2767838939616615
      ],
      [
        "live",
        0.2767838939616615
      ],
      [
        "Kevin",
        0.30458976835781615
      ],
      [
        "reasons",
        0.5213713641067168
      ],
      [
        "agree",
        0.5706654227040613
      ]
    ]
  },
  {
    "utterance number": 295,
    "timestamp": "2023-03-21",
    "speaker": "MF",
    "sentences": [
      {
        "sentence number": 1,
        "text": " I also agree with KG",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 2,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.0,
    "subjectivity": 0.0,
    "keywords": [
      [
        "agree",
        0.29736558256021506
      ]
    ]
  },
  {
    "utterance number": 296,
    "timestamp": "2023-03-21",
    "speaker": "RPR",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Okay",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 2,
        "text": " So we have MF, KG, and JHD who prefer option 2",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 3,
        "text": " and we had another voice supporting option 1 from Justin",
        "polarity": 0.25,
        "subjectivity": 0.25
      },
      {
        "sentence number": 4,
        "text": " So the moment looks like we have consensus for option one",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.375,
    "subjectivity": 0.375,
    "keywords": [
      [
        "JHD who prefer",
        0.15747901017890903
      ],
      [
        "option",
        0.2072054191470713
      ],
      [
        "Justin",
        0.20959384210165888
      ],
      [
        "JHD",
        0.2644867170954307
      ],
      [
        "voice supporting",
        0.3598284470536003
      ],
      [
        "voice supporting option",
        0.38717888034115994
      ],
      [
        "prefer option",
        0.47007561700438555
      ],
      [
        "supporting option",
        0.47007561700438555
      ],
      [
        "prefer",
        0.5144055980205726
      ],
      [
        "voice",
        0.5144055980205726
      ]
    ]
  },
  {
    "utterance number": 297,
    "timestamp": "2023-03-21",
    "speaker": "KHG",
    "sentences": [
      {
        "sentence number": 1,
        "text": " Okay",
        "polarity": 0.5,
        "subjectivity": 0.5
      },
      {
        "sentence number": 2,
        "text": " the nice thing is also like a spec",
        "polarity": 0.6,
        "subjectivity": 1.0
      },
      {
        "sentence number": 3,
        "text": " It has",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 4,
        "text": " already been written for that",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 5,
        "text": " So if y'all want to review it, I will be presenting for stage 3 at the next plenary",
        "polarity": 0.0,
        "subjectivity": 0.0
      },
      {
        "sentence number": 6,
        "text": " So yeah, cool Thanks everyone",
        "polarity": 0.275,
        "subjectivity": 0.42500000000000004
      },
      {
        "sentence number": 7,
        "text": "",
        "polarity": 0.0,
        "subjectivity": 0.0
      }
    ],
    "polarity": 0.33,
    "subjectivity": 0.47000000000000003,
    "keywords": [
      [
        "spec",
        0.3864795434492178
      ],
      [
        "nice thing",
        0.387110231964722
      ],
      [
        "nice",
        0.5282771639219086
      ],
      [
        "thing",
        0.5282771639219086
      ],
      [
        "stage",
        0.562153894771392
      ],
      [
        "plenary",
        0.562153894771392
      ],
      [
        "yeah",
        0.5853901306928098
      ],
      [
        "cool",
        0.5853901306928098
      ],
      [
        "presenting for stage",
        0.6417561886493548
      ],
      [
        "written",
        0.666615133919817
      ]
    ]
  }
]